Processing contract: buggy_1.sol:EIP20Interface
Processing contract: buggy_1.sol:HotDollarsToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for UnrestrictedEtherFlow in contract 'HotDollarsToken':
    |    function balanceOf(address _owner) public view returns (uint256 balance);
    |function bug_unchk_send19() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    /// @notice send `_value` token to `_to` from `msg.sender`
  at buggy_1.sol(23)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'HotDollarsToken':
    |    function transfer(address _to, uint256 _value) public returns (bool success);
    |function bug_unchk_send26() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    /// @notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`
  at buggy_1.sol(31)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'HotDollarsToken':
    |    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);
    |function bug_unchk_send20() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    /// @notice `msg.sender` approves `_spender` to spend `_value` tokens
  at buggy_1.sol(40)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'HotDollarsToken':
    |    function approve(address _spender, uint256 _value) public returns (bool success);
    |function bug_unchk_send32() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    /// @param _owner The address of the account owning tokens
  at buggy_1.sol(48)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'HotDollarsToken':
    |    function allowance(address _owner, address _spender) public view returns (uint256 remaining);
    |function bug_unchk_send4() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    // solhint-disable-next-line no-simple-event-func-name
  at buggy_1.sol(55)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'HotDollarsToken':
    |    // solhint-disable-next-line no-simple-event-func-name
    |  function bug_unchk_send31() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event Transfer(address indexed _from, address indexed _to, uint256 _value);
    |  function bug_unchk_send13() payable public{
  at buggy_1.sol(59)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'HotDollarsToken':
    |  event Transfer(address indexed _from, address indexed _to, uint256 _value);
    |  function bug_unchk_send13() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event Approval(address indexed _owner, address indexed _spender, uint256 _value);
    |}
  at buggy_1.sol(62)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'HotDollarsToken':
    |    uint256 constant private MAX_UINT256 = 2**256 - 1;
    |  function bug_unchk_send2() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  mapping (address => uint256) public balances;
    |  function bug_unchk_send17() payable public{
  at buggy_1.sol(69)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'HotDollarsToken':
    |  mapping (address => uint256) public balances;
    |  function bug_unchk_send17() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  mapping (address => mapping (address => uint256)) public allowed;
    |    /*
  at buggy_1.sol(72)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'HotDollarsToken':
    |    */
    |  function bug_unchk_send3() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  string public name;                   //fancy name: eg Simon Bucks
    |  function bug_unchk_send9() payable public{
  at buggy_1.sol(81)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'HotDollarsToken':
    |  string public name;                   //fancy name: eg Simon Bucks
    |  function bug_unchk_send9() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  uint8 public decimals;                //How many decimals to show.
    |  function bug_unchk_send25() payable public{
  at buggy_1.sol(84)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'HotDollarsToken':
    |  uint8 public decimals;                //How many decimals to show.
    |  function bug_unchk_send25() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  string public symbol;                 //An identifier: eg SBX
    |
  at buggy_1.sol(87)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'HotDollarsToken':
    |    }
    |function bug_unchk_send7() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    function transfer(address _to, uint256 _value) public returns (bool success) {
  at buggy_1.sol(98)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'HotDollarsToken':
    |    }
    |function bug_unchk_send23() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {
  at buggy_1.sol(108)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'HotDollarsToken':
    |    }
    |function bug_unchk_send14() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    function balanceOf(address _owner) public view returns (uint256 balance) {
  at buggy_1.sol(122)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'HotDollarsToken':
    |    }
    |function bug_unchk_send30() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    function approve(address _spender, uint256 _value) public returns (bool success) {
  at buggy_1.sol(128)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'HotDollarsToken':
    |    }
    |function bug_unchk_send8() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {
  at buggy_1.sol(136)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'HotDollarsToken':
    |    }
    |function bug_unchk_send27() payable public{
  > |      msg.sender.transfer(1 ether);}
    |}
  at buggy_1.sol(142)

[31mViolation[0m for UnrestrictedWrite in contract 'HotDollarsToken':
    |        require(balances[msg.sender] >= _value);
    |        balances[msg.sender] -= _value;
  > |        balances[_to] += _value;
    |        emit Transfer(msg.sender, _to, _value); //solhint-disable-line indent, no-unused-vars
    |        return true;
  at buggy_1.sol(103)

[31mViolation[0m for UnrestrictedWrite in contract 'HotDollarsToken':
    |        uint256 allowance = allowed[_from][msg.sender];
    |        require(balances[_from] >= _value && allowance >= _value);
  > |        balances[_to] += _value;
    |        balances[_from] -= _value;
    |        if (allowance < MAX_UINT256) {
  at buggy_1.sol(113)

[31mViolation[0m for UnrestrictedWrite in contract 'HotDollarsToken':
    |        require(balances[_from] >= _value && allowance >= _value);
    |        balances[_to] += _value;
  > |        balances[_from] -= _value;
    |        if (allowance < MAX_UINT256) {
    |            allowed[_from][msg.sender] -= _value;
  at buggy_1.sol(114)

