Processing contract: buggy_9.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_9.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_9.sol:TokenERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_9.sol:XLToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for UnrestrictedEtherFlow in contract 'Ownable':
    |contract Ownable {
    |  function bug_unchk_send21() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  address public owner;
    |
  at buggy_9.sol(56)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'Ownable':
    |    }
    |function bug_unchk_send3() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    modifier onlyOwner {
  at buggy_9.sol(63)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |contract Ownable {
    |  function bug_unchk_send21() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  address public owner;
    |
  at buggy_9.sol(56)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |    }
    |function bug_unchk_send3() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    modifier onlyOwner {
  at buggy_9.sol(63)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |    // Public variables of the token
    |  function bug_unchk_send10() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  string public name;
    |  function bug_unchk_send22() payable public{
  at buggy_9.sol(76)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |  string public name;
    |  function bug_unchk_send22() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  string public symbol;
    |  function bug_unchk_send12() payable public{
  at buggy_9.sol(79)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |  string public symbol;
    |  function bug_unchk_send12() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  uint8 public decimals;
    |
  at buggy_9.sol(82)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |
    |  function bug_unchk_send11() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  uint256 private _totalSupply;
    |  function bug_unchk_send1() payable public{
  at buggy_9.sol(86)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |  uint256 private _totalSupply;
    |  function bug_unchk_send1() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  uint256 public cap;
    |
  at buggy_9.sol(89)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |    // This creates an array with all balances
    |  function bug_unchk_send2() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  mapping (address => uint256) private _balances;
    |  function bug_unchk_send17() payable public{
  at buggy_9.sol(94)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |  mapping (address => uint256) private _balances;
    |  function bug_unchk_send17() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  mapping (address => mapping (address => uint256)) private _allowed;
    |
  at buggy_9.sol(97)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |    // This generates a public event on the blockchain that will notify clients
    |  function bug_unchk_send27() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event Transfer(address indexed from, address indexed to, uint256 value);
    |
  at buggy_9.sol(102)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |    // This generates a public event on the blockchain that will notify clients
    |  function bug_unchk_send31() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event Approval(address indexed owner, address indexed spender, uint256 value);
    |
  at buggy_9.sol(107)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |    // This generates a public event on the blockchain that will notify clients
    |  function bug_unchk_send13() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event Mint(address indexed to, uint256 amount);
    |
  at buggy_9.sol(112)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |    }
    |function bug_unchk_send9() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    /**
  at buggy_9.sol(147)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |    }
    |function bug_unchk_send25() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    /**
  at buggy_9.sol(156)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |    }
    |function bug_unchk_send19() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    /**
  at buggy_9.sol(167)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |    }
    |function bug_unchk_send26() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    /**
  at buggy_9.sol(179)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |    }
    |function bug_unchk_send20() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    /**
  at buggy_9.sol(191)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |    }
    |function bug_unchk_send32() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    /**
  at buggy_9.sol(207)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |    }
    |function bug_unchk_send4() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    /**
  at buggy_9.sol(223)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |    }
    |function bug_unchk_send7() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    /**
  at buggy_9.sol(239)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |    }
    |function bug_unchk_send23() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    /**
  at buggy_9.sol(255)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |    }
    |function bug_unchk_send14() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    /**
  at buggy_9.sol(273)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |    }
    |function bug_unchk_send30() payable public{
  > |      msg.sender.transfer(1 ether);}
    |}
    |
  at buggy_9.sol(289)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'XLToken':
    |contract Ownable {
    |  function bug_unchk_send21() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  address public owner;
    |
  at buggy_9.sol(56)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'XLToken':
    |    }
    |function bug_unchk_send3() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    modifier onlyOwner {
  at buggy_9.sol(63)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'XLToken':
    |    // Public variables of the token
    |  function bug_unchk_send10() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  string public name;
    |  function bug_unchk_send22() payable public{
  at buggy_9.sol(76)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'XLToken':
    |  string public name;
    |  function bug_unchk_send22() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  string public symbol;
    |  function bug_unchk_send12() payable public{
  at buggy_9.sol(79)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'XLToken':
    |  string public symbol;
    |  function bug_unchk_send12() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  uint8 public decimals;
    |
  at buggy_9.sol(82)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'XLToken':
    |
    |  function bug_unchk_send11() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  uint256 private _totalSupply;
    |  function bug_unchk_send1() payable public{
  at buggy_9.sol(86)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'XLToken':
    |  uint256 private _totalSupply;
    |  function bug_unchk_send1() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  uint256 public cap;
    |
  at buggy_9.sol(89)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'XLToken':
    |    // This creates an array with all balances
    |  function bug_unchk_send2() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  mapping (address => uint256) private _balances;
    |  function bug_unchk_send17() payable public{
  at buggy_9.sol(94)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'XLToken':
    |  mapping (address => uint256) private _balances;
    |  function bug_unchk_send17() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  mapping (address => mapping (address => uint256)) private _allowed;
    |
  at buggy_9.sol(97)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'XLToken':
    |    // This generates a public event on the blockchain that will notify clients
    |  function bug_unchk_send27() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event Transfer(address indexed from, address indexed to, uint256 value);
    |
  at buggy_9.sol(102)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'XLToken':
    |    // This generates a public event on the blockchain that will notify clients
    |  function bug_unchk_send31() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event Approval(address indexed owner, address indexed spender, uint256 value);
    |
  at buggy_9.sol(107)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'XLToken':
    |    // This generates a public event on the blockchain that will notify clients
    |  function bug_unchk_send13() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event Mint(address indexed to, uint256 amount);
    |
  at buggy_9.sol(112)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'XLToken':
    |    }
    |function bug_unchk_send9() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    /**
  at buggy_9.sol(147)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'XLToken':
    |    }
    |function bug_unchk_send25() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    /**
  at buggy_9.sol(156)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'XLToken':
    |    }
    |function bug_unchk_send19() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    /**
  at buggy_9.sol(167)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'XLToken':
    |    }
    |function bug_unchk_send26() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    /**
  at buggy_9.sol(179)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'XLToken':
    |    }
    |function bug_unchk_send20() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    /**
  at buggy_9.sol(191)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'XLToken':
    |    }
    |function bug_unchk_send32() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    /**
  at buggy_9.sol(207)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'XLToken':
    |    }
    |function bug_unchk_send4() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    /**
  at buggy_9.sol(223)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'XLToken':
    |    }
    |function bug_unchk_send7() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    /**
  at buggy_9.sol(239)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'XLToken':
    |    }
    |function bug_unchk_send23() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    /**
  at buggy_9.sol(255)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'XLToken':
    |    }
    |function bug_unchk_send14() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    /**
  at buggy_9.sol(273)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'XLToken':
    |    }
    |function bug_unchk_send30() payable public{
  > |      msg.sender.transfer(1 ether);}
    |}
    |
  at buggy_9.sol(289)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'XLToken':
    |    constructor() TokenERC20(18*10**16, 12*10**16, "XL Token", "XL", 8) public {}
    |function bug_unchk_send8() payable public{
  > |      msg.sender.transfer(1 ether);}
    |}
  at buggy_9.sol(300)

