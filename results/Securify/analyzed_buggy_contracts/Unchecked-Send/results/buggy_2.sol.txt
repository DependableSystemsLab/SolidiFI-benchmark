Processing contract: buggy_2.sol:CareerOnToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for UnrestrictedEtherFlow in contract 'CareerOnToken':
    |contract CareerOnToken {
    |  function bug_unchk_send27() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event Transfer(address indexed _from, address indexed _to, uint256 _value);
    |  function bug_unchk_send31() payable public{
  at buggy_2.sol(9)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'CareerOnToken':
    |  event Transfer(address indexed _from, address indexed _to, uint256 _value);
    |  function bug_unchk_send31() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event Approval(address indexed a_owner, address indexed _spender, uint256 _value);
    |  function bug_unchk_send13() payable public{
  at buggy_2.sol(12)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'CareerOnToken':
    |  event Approval(address indexed a_owner, address indexed _spender, uint256 _value);
    |  function bug_unchk_send13() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event OwnerChang(address indexed _old,address indexed _new,uint256 _coin_change);
    |    
  at buggy_2.sol(15)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'CareerOnToken':
    |    
    |  function bug_unchk_send11() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  uint256 public totalSupply;  
    |  function bug_unchk_send1() payable public{
  at buggy_2.sol(19)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'CareerOnToken':
    |  uint256 public totalSupply;  
    |  function bug_unchk_send1() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  string public name;                   //名称，例如"My test token"
    |  function bug_unchk_send2() payable public{
  at buggy_2.sol(22)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'CareerOnToken':
    |  string public name;                   //名称，例如"My test token"
    |  function bug_unchk_send2() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  uint8 public decimals;               //返回token使用的小数点后几位。比如如果设置为3，就是支持0.001表示.
    |  function bug_unchk_send17() payable public{
  at buggy_2.sol(25)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'CareerOnToken':
    |  uint8 public decimals;               //返回token使用的小数点后几位。比如如果设置为3，就是支持0.001表示.
    |  function bug_unchk_send17() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  string public symbol;               //token简称,like MTT
    |  function bug_unchk_send3() payable public{
  at buggy_2.sol(28)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'CareerOnToken':
    |  string public symbol;               //token简称,like MTT
    |  function bug_unchk_send3() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  address public owner;
    |  function bug_unchk_send9() payable public{
  at buggy_2.sol(31)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'CareerOnToken':
    |  address public owner;
    |  function bug_unchk_send9() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  mapping (address => uint256) public balances;
    |  function bug_unchk_send25() payable public{
  at buggy_2.sol(34)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'CareerOnToken':
    |  mapping (address => uint256) public balances;
    |  function bug_unchk_send25() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  mapping (address => mapping (address => uint256)) public allowed;
    |    
  at buggy_2.sol(37)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'CareerOnToken':
    |	//如果通过函数setPauseStatus设置这个变量为TRUE，则所有转账交易都会失败
    |  function bug_unchk_send19() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  bool isTransPaused=false;
    |    
  at buggy_2.sol(42)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'CareerOnToken':
    |    }
    |function bug_unchk_send26() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    
  at buggy_2.sol(66)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'CareerOnToken':
    |    }
    |function bug_unchk_send20() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |
  at buggy_2.sol(89)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'CareerOnToken':
    |    }
    |function bug_unchk_send32() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    function approve(address _spender, uint256 _value) public returns (bool success) 
  at buggy_2.sol(115)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'CareerOnToken':
    |    }
    |function bug_unchk_send4() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    function allowance(
  at buggy_2.sol(125)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'CareerOnToken':
    |    }
    |function bug_unchk_send7() payable public{
  > |      msg.sender.transfer(1 ether);}
    |	
    |	//以下为本代币协议的特殊逻辑
  at buggy_2.sol(134)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'CareerOnToken':
    |    }
    |function bug_unchk_send23() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |	//isPaused为true则暂停所有转账交易
  at buggy_2.sol(146)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'CareerOnToken':
    |    }
    |function bug_unchk_send14() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |	//修改合约名字
  at buggy_2.sol(154)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'CareerOnToken':
    |    }
    |function bug_unchk_send30() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    
  at buggy_2.sol(163)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'CareerOnToken':
    |    }
    |function bug_unchk_send8() payable public{
  > |      msg.sender.transfer(1 ether);}
    |}
  at buggy_2.sol(170)

[33mWarning[0m for UnrestrictedWrite in contract 'CareerOnToken':
    |pragma solidity ^0.5.1;
    |
  > |contract CareerOnToken {
    |  function bug_unchk_send27() payable public{
    |      msg.sender.transfer(1 ether);}
  at buggy_2.sol(7)

[33mWarning[0m for UnrestrictedWrite in contract 'CareerOnToken':
    |        
    |        balances[msg.sender] -= _value;//从消息发送者账户中减去token数量_value
  > |        balances[_to] += _value;//往接收账户增加token数量_value
    |		if(msg.sender==owner){
    |			emit Transfer(address(this), _to, _value);//触发转币交易事件
  at buggy_2.sol(80)

[33mWarning[0m for UnrestrictedWrite in contract 'CareerOnToken':
    |        );
    |        
  > |        balances[_to] += _value;//接收账户增加token数量_value
    |        balances[_from] -= _value; //支出账户_from减去token数量_value
    |        allowed[_from][msg.sender] -= _value;//消息发送者可以从账户_from中转出的数量减少_value
  at buggy_2.sol(104)

[33mWarning[0m for UnrestrictedWrite in contract 'CareerOnToken':
    |        
    |        balances[_to] += _value;//接收账户增加token数量_value
  > |        balances[_from] -= _value; //支出账户_from减去token数量_value
    |        allowed[_from][msg.sender] -= _value;//消息发送者可以从账户_from中转出的数量减少_value
    |        if(_from==owner){
  at buggy_2.sol(105)

