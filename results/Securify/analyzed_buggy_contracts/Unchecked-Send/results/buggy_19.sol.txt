Processing contract: buggy_19.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_19.sol:ethBank
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_19.sol:owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for TODAmount in contract 'ethBank':
    |        require(msg.sender == owner, "only owner can use this method"); 
    |        
  > |        msg.sender.transfer(address(this).balance);
    |    }
    |function bug_unchk_send22() payable public{
  at buggy_19.sol(119)

[31mViolation[0m for TODAmount in contract 'ethBank':
    |    function joinFlexible() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  > |        msg.sender.transfer(address(this).balance);
    |        
    |    }
  at buggy_19.sol(140)

[31mViolation[0m for TODAmount in contract 'ethBank':
    |    function joinFixed() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  > |        msg.sender.transfer(address(this).balance);
    |        
    |    }
  at buggy_19.sol(147)

[31mViolation[0m for TODAmount in contract 'ethBank':
    |    function staticBonus() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  > |        msg.sender.transfer(address(this).balance);
    |        
    |    }
  at buggy_19.sol(154)

[31mViolation[0m for TODAmount in contract 'ethBank':
    |    function activeBonus() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  > |        msg.sender.transfer(address(this).balance);
    |        
    |    }
  at buggy_19.sol(161)

[31mViolation[0m for TODAmount in contract 'ethBank':
    |    function teamAddBonus() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  > |        msg.sender.transfer(address(this).balance);
    |        
    |    }
  at buggy_19.sol(168)

[31mViolation[0m for TODAmount in contract 'ethBank':
    |    function staticBonusCacl() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  > |        msg.sender.transfer(address(this).balance);
    |        
    |    }
  at buggy_19.sol(175)

[31mViolation[0m for TODAmount in contract 'ethBank':
    |    function activeBonusCacl_1() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  > |        msg.sender.transfer(address(this).balance);
    |        
    |    }
  at buggy_19.sol(182)

[31mViolation[0m for TODAmount in contract 'ethBank':
    |    function activeBonusCacl_2() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  > |        msg.sender.transfer(address(this).balance);
    |        
    |    }
  at buggy_19.sol(189)

[31mViolation[0m for TODAmount in contract 'ethBank':
    |    function activeBonusCacl_3() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  > |        msg.sender.transfer(address(this).balance);
    |        
    |    }
  at buggy_19.sol(196)

[31mViolation[0m for TODAmount in contract 'ethBank':
    |    function activeBonusCacl_4() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  > |        msg.sender.transfer(address(this).balance);
    |        
    |    }
  at buggy_19.sol(203)

[31mViolation[0m for TODAmount in contract 'ethBank':
    |    function activeBonusCacl_5() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  > |        msg.sender.transfer(address(this).balance);
    |        
    |    }
  at buggy_19.sol(210)

[31mViolation[0m for TODAmount in contract 'ethBank':
    |    function activeBonusCacl_6() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  > |        msg.sender.transfer(address(this).balance);
    |        
    |    }
  at buggy_19.sol(217)

[31mViolation[0m for TODAmount in contract 'ethBank':
    |    function activeBonusCacl_7() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  > |        msg.sender.transfer(address(this).balance);
    |        
    |    }
  at buggy_19.sol(224)

[31mViolation[0m for TODAmount in contract 'ethBank':
    |    function activeBonusCacl_8() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  > |        msg.sender.transfer(address(this).balance);
    |        
    |    }
  at buggy_19.sol(231)

[31mViolation[0m for TODAmount in contract 'ethBank':
    |    function activeBonusCacl_9() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  > |        msg.sender.transfer(address(this).balance);
    |        
    |    }
  at buggy_19.sol(238)

[31mViolation[0m for TODAmount in contract 'ethBank':
    |    function teamAddBonusCacl() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  > |        msg.sender.transfer(address(this).balance);
    |        
    |    }
  at buggy_19.sol(245)

[31mViolation[0m for TODAmount in contract 'ethBank':
    |    function caclTeamPerformance() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  > |        msg.sender.transfer(address(this).balance);
    |        
    |    }
  at buggy_19.sol(252)

[31mViolation[0m for TODAmount in contract 'ethBank':
    |    function releaStaticBonus() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  > |        msg.sender.transfer(address(this).balance);
    |        
    |    }
  at buggy_19.sol(259)

[31mViolation[0m for TODAmount in contract 'ethBank':
    |    function releaActiveBonus() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  > |        msg.sender.transfer(address(this).balance);
    |        
    |    }
  at buggy_19.sol(266)

[31mViolation[0m for TODAmount in contract 'ethBank':
    |    function releaTeamAddBonus() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  > |        msg.sender.transfer(address(this).balance);
    |        
    |    }
  at buggy_19.sol(273)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |contract owned {
    |  function bug_unchk_send24() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  address public owner;
    |    /**
  at buggy_19.sol(59)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |    }
    |function bug_unchk_send5() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    /**
  at buggy_19.sol(69)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |    }
    |function bug_unchk_send15() payable public{
  > |      msg.sender.transfer(1 ether);}
    |}
    |
  at buggy_19.sol(87)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |    function () payable external {}
    |function bug_unchk_send28() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    function withdrawForUser(address payable _address,uint amount) onlyOwner public{
  at buggy_19.sol(94)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |    }
    |function bug_unchk_send21() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    function moveBrick(uint amount) onlyOwner public{
  at buggy_19.sol(101)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |    }
    |function bug_unchk_send10() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    /**
  at buggy_19.sol(108)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |    }
    |function bug_unchk_send22() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    // either settled or refunded. All funds are transferred to contract owner.
  at buggy_19.sol(122)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |    }
    |function bug_unchk_send12() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    
  at buggy_19.sol(132)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |    }
    |function bug_unchk_send11() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function joinFixed() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  at buggy_19.sol(144)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |    }
    |function bug_unchk_send1() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function staticBonus() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  at buggy_19.sol(151)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |    }
    |function bug_unchk_send2() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function activeBonus() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  at buggy_19.sol(158)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |    }
    |function bug_unchk_send17() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function teamAddBonus() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  at buggy_19.sol(165)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |    }
    |function bug_unchk_send3() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function staticBonusCacl() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  at buggy_19.sol(172)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |    }
    |function bug_unchk_send9() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function activeBonusCacl_1() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  at buggy_19.sol(179)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |    }
    |function bug_unchk_send25() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function activeBonusCacl_2() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  at buggy_19.sol(186)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |    }
    |function bug_unchk_send19() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function activeBonusCacl_3() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  at buggy_19.sol(193)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |    }
    |function bug_unchk_send26() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function activeBonusCacl_4() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  at buggy_19.sol(200)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |    }
    |function bug_unchk_send20() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function activeBonusCacl_5() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  at buggy_19.sol(207)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |    }
    |function bug_unchk_send32() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function activeBonusCacl_6() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  at buggy_19.sol(214)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |    }
    |function bug_unchk_send4() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function activeBonusCacl_7() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  at buggy_19.sol(221)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |    }
    |function bug_unchk_send7() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function activeBonusCacl_8() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  at buggy_19.sol(228)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |    }
    |function bug_unchk_send23() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function activeBonusCacl_9() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  at buggy_19.sol(235)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |    }
    |function bug_unchk_send14() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function teamAddBonusCacl() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  at buggy_19.sol(242)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |    }
    |function bug_unchk_send30() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function caclTeamPerformance() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  at buggy_19.sol(249)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |    }
    |function bug_unchk_send8() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function releaStaticBonus() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  at buggy_19.sol(256)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |    }
    |function bug_unchk_send27() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function releaActiveBonus() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  at buggy_19.sol(263)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |    }
    |function bug_unchk_send31() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function releaTeamAddBonus() onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  at buggy_19.sol(270)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |    }
    |function bug_unchk_send13() payable public{
  > |      msg.sender.transfer(1 ether);}
    |}
  at buggy_19.sol(277)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |    function withdrawForUser(address payable _address,uint amount) onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method");
  > |        _address.transfer(amount);
    |    }
    |function bug_unchk_send21() payable public{
  at buggy_19.sol(98)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ethBank':
    |    function moveBrick(uint amount) onlyOwner public{
    |        require(msg.sender == owner, "only owner can use this method"); 
  > |        msg.sender.transfer(amount);
    |    }
    |function bug_unchk_send10() payable public{
  at buggy_19.sol(105)

[33mWarning[0m for UnrestrictedWrite in contract 'ethBank':
    |    function transferOwnership(address newOwner) onlyOwner public {
    |        require(newOwner != address(0));
  > |        owner = newOwner;
    |    }
    |function bug_unchk_send15() payable public{
  at buggy_19.sol(84)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'owned':
    |contract owned {
    |  function bug_unchk_send24() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  address public owner;
    |    /**
  at buggy_19.sol(59)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'owned':
    |    }
    |function bug_unchk_send5() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    /**
  at buggy_19.sol(69)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'owned':
    |    }
    |function bug_unchk_send15() payable public{
  > |      msg.sender.transfer(1 ether);}
    |}
    |
  at buggy_19.sol(87)

[33mWarning[0m for UnrestrictedWrite in contract 'owned':
    |    function transferOwnership(address newOwner) onlyOwner public {
    |        require(newOwner != address(0));
  > |        owner = newOwner;
    |    }
    |function bug_unchk_send15() payable public{
  at buggy_19.sol(84)

