Processing contract: buggy_47.sol:AcunarIEO
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_47.sol:AcunarToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_47.sol:ERC20Interface
[33mWarning[0m for TODAmount in contract 'AcunarIEO':
    |        balances[founder] -= tokens;
    |        
  > |        deposit.transfer(msg.value);//transfer eth to the deposit address
    |        
    |        //emit event
  at buggy_47.sol(246)

[31mViolation[0m for TODReceiver in contract 'AcunarIEO':
    |        balances[founder] -= tokens;
    |        
  > |        deposit.transfer(msg.value);//transfer eth to the deposit address
    |        
    |        //emit event
  at buggy_47.sol(246)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    function totalSupply() public view returns (uint);
    |function bug_unchk_send21() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function balanceOf(address tokenOwner) public view returns (uint balance);
    |function bug_unchk_send10() payable public{
  at buggy_47.sol(14)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    function balanceOf(address tokenOwner) public view returns (uint balance);
    |function bug_unchk_send10() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function transfer(address to, uint tokens) public returns (bool success);
    |function bug_unchk_send22() payable public{
  at buggy_47.sol(17)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    function transfer(address to, uint tokens) public returns (bool success);
    |function bug_unchk_send22() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    
  at buggy_47.sol(20)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    function allowance(address tokenOwner, address spender) public view returns (uint remaining);
    |function bug_unchk_send12() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function approve(address spender, uint tokens) public returns (bool success);
    |function bug_unchk_send11() payable public{
  at buggy_47.sol(25)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    function approve(address spender, uint tokens) public returns (bool success);
    |function bug_unchk_send11() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function transferFrom(address from, address to, uint tokens) public returns (bool success);
    |function bug_unchk_send1() payable public{
  at buggy_47.sol(28)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    function transferFrom(address from, address to, uint tokens) public returns (bool success);
    |function bug_unchk_send1() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    event Transfer(address indexed from, address indexed to, uint tokens);
  at buggy_47.sol(31)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    }
    |function bug_unchk_send2() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    
  at buggy_47.sol(62)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    }
    |function bug_unchk_send17() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    
  at buggy_47.sol(69)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    }
    |function bug_unchk_send3() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    //transfer tokens from the  owner account to the account that calls the function
  at buggy_47.sol(82)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    }
    |function bug_unchk_send9() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    function totalSupply() public view returns (uint){
  at buggy_47.sol(98)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    }
    |function bug_unchk_send25() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    function balanceOf(address tokenOwner) public view returns (uint balance){
  at buggy_47.sol(104)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |     }
    |function bug_unchk_send19() payable public{
  > |      msg.sender.transfer(1 ether);}
    |     
    |     
  at buggy_47.sol(110)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |     }
    |function bug_unchk_send26() payable public{
  > |      msg.sender.transfer(1 ether);}
    |}
    |
  at buggy_47.sol(122)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    //it's mandatory to declare the variable payable
    |  function bug_unchk_send18() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  address payable public deposit;
    |    
  at buggy_47.sol(133)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    //token price in wei: 1 ACN = 0.0001 ETHER, 1 ETHER = 10000 ACN
    |  function bug_unchk_send29() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  uint tokenPrice = 0.0001 ether;
    |    
  at buggy_47.sol(138)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    //300 Ether in wei
    |  function bug_unchk_send6() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  uint public hardCap =21000 ether;
    |    
  at buggy_47.sol(143)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    
    |  function bug_unchk_send16() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  uint public raisedAmount;
    |    
  at buggy_47.sol(147)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    
    |  function bug_unchk_send24() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  uint public saleStart = now;
    |    uint public saleEnd = now + 14515200; //24 week
  at buggy_47.sol(151)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    
    |  function bug_unchk_send5() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  uint public maxInvestment = 30 ether;
    |  function bug_unchk_send15() payable public{
  at buggy_47.sol(157)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |  uint public maxInvestment = 30 ether;
    |  function bug_unchk_send15() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  uint public minInvestment = 0.1 ether;
    |    
  at buggy_47.sol(160)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    enum State { beforeStart, running, afterEnd, halted}
    |  function bug_unchk_send28() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  State public ieoState;
    |    
  at buggy_47.sol(165)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    
    |  function bug_unchk_send13() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event Invest(address investor, uint value, uint tokens);
    |    
  at buggy_47.sol(175)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    }
    |function bug_unchk_send20() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    //emergency stop
  at buggy_47.sol(186)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    }
    |function bug_unchk_send32() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    //restart 
  at buggy_47.sol(193)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    }
    |function bug_unchk_send4() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    
  at buggy_47.sol(200)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    }
    |function bug_unchk_send7() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    
  at buggy_47.sol(209)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    }
    |function bug_unchk_send23() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    
  at buggy_47.sol(225)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    }
    |function bug_unchk_send14() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    //the payable function must be declared external in solidity versions > 0.5.0
  at buggy_47.sol(256)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    }
    |function bug_unchk_send30() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    
  at buggy_47.sol(263)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    }
    |function bug_unchk_send8() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    
  at buggy_47.sol(274)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    }
    |function bug_unchk_send27() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    function transferFrom(address _from, address _to, uint _value) public returns(bool){
  at buggy_47.sol(282)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    }
    |function bug_unchk_send31() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |}
  at buggy_47.sol(289)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |        balances[founder] -= tokens;
    |        
  > |        deposit.transfer(msg.value);//transfer eth to the deposit address
    |        
    |        //emit event
  at buggy_47.sol(246)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarIEO':
    |        require(balances[from] >= tokens);
    |        
  > |        balances[from] -= tokens;
    |        balances[to] += tokens;
    |        
  at buggy_47.sol(89)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarIEO':
    |        
    |        balances[from] -= tokens;
  > |        balances[to] += tokens;
    |        
    |        
  at buggy_47.sol(90)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarIEO':
    |        
    |        
  > |        allowed[from][to] -= tokens;
    |        
    |        return true;
  at buggy_47.sol(93)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarIEO':
    |         require(balances[msg.sender] >= tokens && tokens > 0);
    |         
  > |         balances[to] += tokens;
    |         balances[msg.sender] -= tokens;
    |         emit Transfer(msg.sender, to, tokens);
  at buggy_47.sol(116)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarIEO':
    |    function invest() payable public returns(bool){
    |        //invest only in running
  > |        ieoState = getCurrentState();
    |        require(ieoState == State.running);
    |        
  at buggy_47.sol(230)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarIEO':
    |        require(raisedAmount + msg.value <= hardCap);
    |        
  > |        raisedAmount += msg.value;
    |        
    |        //add tokens to investor balance from founder balance
  at buggy_47.sol(240)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarIEO':
    |        //add tokens to investor balance from founder balance
    |        balances[msg.sender] += tokens;
  > |        balances[founder] -= tokens;
    |        
    |        deposit.transfer(msg.value);//transfer eth to the deposit address
  at buggy_47.sol(244)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarIEO':
    |    
    |    function burn() public returns(bool){
  > |        ieoState = getCurrentState();
    |        require(ieoState == State.afterEnd);
    |        balances[founder] = 0;
  at buggy_47.sol(268)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarIEO':
    |        ieoState = getCurrentState();
    |        require(ieoState == State.afterEnd);
  > |        balances[founder] = 0;
    |        
    |    }
  at buggy_47.sol(270)

[33mWarning[0m for UnrestrictedWrite in contract 'AcunarIEO':
    |    //emergency stop
    |    function halt() public onlyAdmin{
  > |        ieoState = State.halted;
    |    }
    |function bug_unchk_send32() payable public{
  at buggy_47.sol(190)

[33mWarning[0m for UnrestrictedWrite in contract 'AcunarIEO':
    |    //restart 
    |    function unhalt() public onlyAdmin{
  > |        ieoState = State.running;
    |    }
    |function bug_unchk_send4() payable public{
  at buggy_47.sol(197)

[33mWarning[0m for UnrestrictedWrite in contract 'AcunarIEO':
    |    //in solidity version > 0.5.0 the deposit argument must be payable
    |    function changeDepositAddress(address payable newDeposit) public onlyAdmin{
  > |        deposit = newDeposit;
    |    }
    |function bug_unchk_send7() payable public{
  at buggy_47.sol(206)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |    function totalSupply() public view returns (uint);
    |function bug_unchk_send21() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function balanceOf(address tokenOwner) public view returns (uint balance);
    |function bug_unchk_send10() payable public{
  at buggy_47.sol(14)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |    function balanceOf(address tokenOwner) public view returns (uint balance);
    |function bug_unchk_send10() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function transfer(address to, uint tokens) public returns (bool success);
    |function bug_unchk_send22() payable public{
  at buggy_47.sol(17)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |    function transfer(address to, uint tokens) public returns (bool success);
    |function bug_unchk_send22() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    
  at buggy_47.sol(20)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |    function allowance(address tokenOwner, address spender) public view returns (uint remaining);
    |function bug_unchk_send12() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function approve(address spender, uint tokens) public returns (bool success);
    |function bug_unchk_send11() payable public{
  at buggy_47.sol(25)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |    function approve(address spender, uint tokens) public returns (bool success);
    |function bug_unchk_send11() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function transferFrom(address from, address to, uint tokens) public returns (bool success);
    |function bug_unchk_send1() payable public{
  at buggy_47.sol(28)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |    function transferFrom(address from, address to, uint tokens) public returns (bool success);
    |function bug_unchk_send1() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    event Transfer(address indexed from, address indexed to, uint tokens);
  at buggy_47.sol(31)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |    }
    |function bug_unchk_send2() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    
  at buggy_47.sol(62)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |    }
    |function bug_unchk_send17() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    
  at buggy_47.sol(69)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |    }
    |function bug_unchk_send3() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    //transfer tokens from the  owner account to the account that calls the function
  at buggy_47.sol(82)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |    }
    |function bug_unchk_send9() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    function totalSupply() public view returns (uint){
  at buggy_47.sol(98)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |    }
    |function bug_unchk_send25() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    function balanceOf(address tokenOwner) public view returns (uint balance){
  at buggy_47.sol(104)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |     }
    |function bug_unchk_send19() payable public{
  > |      msg.sender.transfer(1 ether);}
    |     
    |     
  at buggy_47.sol(110)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |     }
    |function bug_unchk_send26() payable public{
  > |      msg.sender.transfer(1 ether);}
    |}
    |
  at buggy_47.sol(122)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarToken':
    |        require(balances[from] >= tokens);
    |        
  > |        balances[from] -= tokens;
    |        balances[to] += tokens;
    |        
  at buggy_47.sol(89)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarToken':
    |        
    |        balances[from] -= tokens;
  > |        balances[to] += tokens;
    |        
    |        
  at buggy_47.sol(90)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarToken':
    |        
    |        
  > |        allowed[from][to] -= tokens;
    |        
    |        return true;
  at buggy_47.sol(93)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarToken':
    |         require(balances[msg.sender] >= tokens && tokens > 0);
    |         
  > |         balances[to] += tokens;
    |         balances[msg.sender] -= tokens;
    |         emit Transfer(msg.sender, to, tokens);
  at buggy_47.sol(116)

