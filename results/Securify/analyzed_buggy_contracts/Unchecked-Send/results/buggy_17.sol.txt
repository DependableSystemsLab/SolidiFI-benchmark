Processing contract: buggy_17.sol:AZT
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_17.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_17.sol:TokenERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_17.sol:owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_17.sol:tokenRecipient
[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |contract owned {
    |function bug_unchk_send6() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  address public owner;
    |
  at buggy_17.sol(50)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |  }
    |function bug_unchk_send17() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |  modifier onlyOwner {
  at buggy_17.sol(57)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |  }
    |function bug_unchk_send3() payable public{
  > |      msg.sender.transfer(1 ether);}
    |}
    |
  at buggy_17.sol(68)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |  using SafeMath for uint256;
    |function bug_unchk_send16() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  string public name;
    |function bug_unchk_send24() payable public{
  at buggy_17.sol(79)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |  string public name;
    |function bug_unchk_send24() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  string public symbol;
    |function bug_unchk_send5() payable public{
  at buggy_17.sol(82)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |  string public symbol;
    |function bug_unchk_send5() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  uint8 public decimals;
    |function bug_unchk_send15() payable public{
  at buggy_17.sol(85)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |  uint8 public decimals;
    |function bug_unchk_send15() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  uint256 public totalSupply;
    |
  at buggy_17.sol(88)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |
    |function bug_unchk_send28() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  mapping (address => uint256) public balanceOf;
    |function bug_unchk_send21() payable public{
  at buggy_17.sol(92)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |  mapping (address => uint256) public balanceOf;
    |function bug_unchk_send21() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  mapping (address => mapping (address => uint256)) public allowance;
    |
  at buggy_17.sol(95)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |
    |function bug_unchk_send27() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event Transfer(address indexed from, address indexed to, uint256 value);
    |
  at buggy_17.sol(99)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |
    |function bug_unchk_send31() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event Approval(address indexed _owner, address indexed _spender, uint256 _value);
    |
  at buggy_17.sol(103)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |
    |function bug_unchk_send13() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event Burn(address indexed from, uint256 value);
    |
  at buggy_17.sol(107)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |  }
    |function bug_unchk_send9() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |  function _transfer(address _from, address _to, uint _value) internal {
  at buggy_17.sol(117)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |  }
    |function bug_unchk_send25() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |  function transfer(address _to, uint256 _value) public returns (bool success) {
  at buggy_17.sol(126)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |  }
    |function bug_unchk_send19() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |
  at buggy_17.sol(133)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |  }
    |function bug_unchk_send26() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |
  at buggy_17.sol(142)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |  }
    |function bug_unchk_send20() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |
  at buggy_17.sol(151)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |  }
    |function bug_unchk_send32() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |}
  at buggy_17.sol(162)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |contract AZT is owned, TokenERC20  {
    |function bug_unchk_send10() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |	string _tokenName = "AZ FundChain";  function bug_unchk_send22() payable public{
  at buggy_17.sol(173)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |
    |	string _tokenName = "AZ FundChain";  function bug_unchk_send22() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |	string _tokenSymbol = "AZT";
  at buggy_17.sol(176)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |	string _tokenSymbol = "AZT";
    |function bug_unchk_send12() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  uint8 _decimals = 18;
    |
  at buggy_17.sol(180)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |
    |function bug_unchk_send11() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  address[] public frozenAddresses;
    |function bug_unchk_send1() payable public{
  at buggy_17.sol(184)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |  address[] public frozenAddresses;
    |function bug_unchk_send1() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  bool public tokenFrozen;
    |
  at buggy_17.sol(187)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |
    |function bug_unchk_send2() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  mapping (address => frozenWallet) public frozenWallets;
    |
  at buggy_17.sol(198)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |  }
    |function bug_unchk_send4() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |  function _transfer(address _from, address _to, uint _value) internal {
  at buggy_17.sol(220)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |  }
    |function bug_unchk_send7() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |  function checkFrozenWallet(address _from, uint _value) public view returns (bool) {
  at buggy_17.sol(230)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |  }
    |function bug_unchk_send23() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |
  at buggy_17.sol(242)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |  }
    |function bug_unchk_send14() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |  function burnFrom(address _from, uint256 _value) public returns (bool success) {
  at buggy_17.sol(252)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |  }
    |function bug_unchk_send30() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |  function freezeToken(bool freeze) onlyOwner public {
  at buggy_17.sol(262)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |  }
    |function bug_unchk_send8() payable public{
  > |      msg.sender.transfer(1 ether);}
    |}
  at buggy_17.sol(268)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |  using SafeMath for uint256;
    |function bug_unchk_send16() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  string public name;
    |function bug_unchk_send24() payable public{
  at buggy_17.sol(79)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |  string public name;
    |function bug_unchk_send24() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  string public symbol;
    |function bug_unchk_send5() payable public{
  at buggy_17.sol(82)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |  string public symbol;
    |function bug_unchk_send5() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  uint8 public decimals;
    |function bug_unchk_send15() payable public{
  at buggy_17.sol(85)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |  uint8 public decimals;
    |function bug_unchk_send15() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  uint256 public totalSupply;
    |
  at buggy_17.sol(88)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |
    |function bug_unchk_send28() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  mapping (address => uint256) public balanceOf;
    |function bug_unchk_send21() payable public{
  at buggy_17.sol(92)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |  mapping (address => uint256) public balanceOf;
    |function bug_unchk_send21() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  mapping (address => mapping (address => uint256)) public allowance;
    |
  at buggy_17.sol(95)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |
    |function bug_unchk_send27() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event Transfer(address indexed from, address indexed to, uint256 value);
    |
  at buggy_17.sol(99)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |
    |function bug_unchk_send31() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event Approval(address indexed _owner, address indexed _spender, uint256 _value);
    |
  at buggy_17.sol(103)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |
    |function bug_unchk_send13() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event Burn(address indexed from, uint256 value);
    |
  at buggy_17.sol(107)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |  }
    |function bug_unchk_send9() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |  function _transfer(address _from, address _to, uint _value) internal {
  at buggy_17.sol(117)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |  }
    |function bug_unchk_send25() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |  function transfer(address _to, uint256 _value) public returns (bool success) {
  at buggy_17.sol(126)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |  }
    |function bug_unchk_send19() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |
  at buggy_17.sol(133)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |  }
    |function bug_unchk_send26() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |
  at buggy_17.sol(142)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |  }
    |function bug_unchk_send20() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |
  at buggy_17.sol(151)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |  }
    |function bug_unchk_send32() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |}
  at buggy_17.sol(162)

[31mViolation[0m for MissingInputValidation in contract 'owned':
    |  }
    |
  > |  function transferOwnership(address newOwner) onlyOwner public {
    |    owner = newOwner;
    |  }
  at buggy_17.sol(64)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'owned':
    |contract owned {
    |function bug_unchk_send6() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  address public owner;
    |
  at buggy_17.sol(50)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'owned':
    |  }
    |function bug_unchk_send17() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |  modifier onlyOwner {
  at buggy_17.sol(57)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'owned':
    |  }
    |function bug_unchk_send3() payable public{
  > |      msg.sender.transfer(1 ether);}
    |}
    |
  at buggy_17.sol(68)

[33mWarning[0m for UnrestrictedWrite in contract 'owned':
    |
    |  function transferOwnership(address newOwner) onlyOwner public {
  > |    owner = newOwner;
    |  }
    |function bug_unchk_send3() payable public{
  at buggy_17.sol(65)

