Processing contract: buggy_16.sol:ERC20Interface
Processing contract: buggy_16.sol:ExclusivePlatform
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_16.sol:Owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_16.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for TODAmount in contract 'ExclusivePlatform':
    |    function withdrawFund() onlyOwner public {
    |        uint256 balance = address(this).balance;
  > |        owner.transfer(balance);
    |    }
    |function bug_unchk_send32() payable public{
  at buggy_16.sol(278)

[31mViolation[0m for TODReceiver in contract 'ExclusivePlatform':
    |    function withdrawFund() onlyOwner public {
    |        uint256 balance = address(this).balance;
  > |        owner.transfer(balance);
    |    }
    |function bug_unchk_send32() payable public{
  at buggy_16.sol(278)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |    function balanceOf(address tokenOwner) public view returns (uint256 balance);
    |function bug_unchk_send18() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function allowance(address tokenOwner, address spender) public view returns (uint256 remaining);
    |function bug_unchk_send29() payable public{
  at buggy_16.sol(54)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |    function allowance(address tokenOwner, address spender) public view returns (uint256 remaining);
    |function bug_unchk_send29() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function transfer(address to, uint256 tokens) public returns (bool success);
    |function bug_unchk_send6() payable public{
  at buggy_16.sol(57)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |    function transfer(address to, uint256 tokens) public returns (bool success);
    |function bug_unchk_send6() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function approve(address spender, uint256 tokens) public returns (bool success);
    |function bug_unchk_send16() payable public{
  at buggy_16.sol(60)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |    function approve(address spender, uint256 tokens) public returns (bool success);
    |function bug_unchk_send16() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    function transferFrom(address from, address to, uint256 tokens) public returns (bool success);
    |function bug_unchk_send24() payable public{
  at buggy_16.sol(63)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |    function transferFrom(address from, address to, uint256 tokens) public returns (bool success);
    |function bug_unchk_send24() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |  function bug_unchk_send14() payable public{
  at buggy_16.sol(66)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |
    |  function bug_unchk_send14() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event Transfer(address indexed from, address indexed to, uint256 tokens);
    |  function bug_unchk_send30() payable public{
  at buggy_16.sol(69)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |  event Transfer(address indexed from, address indexed to, uint256 tokens);
    |  function bug_unchk_send30() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event Approval(address indexed tokenOwner, address indexed spender, uint256 tokens);
    |}
  at buggy_16.sol(72)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |    address payable public owner;
    |  function bug_unchk_send8() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);
    |
  at buggy_16.sol(80)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |    }
    |function bug_unchk_send5() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    /**
  at buggy_16.sol(91)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |    }
    |function bug_unchk_send15() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |}
  at buggy_16.sol(111)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |    }
    |function bug_unchk_send28() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  
    |    function totalSupply() public view returns (uint256) {
  at buggy_16.sol(144)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |    }
    |function bug_unchk_send21() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    function updateXPLPerEther(uint _XPLPerEther) public onlyOwner {        
  at buggy_16.sol(150)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |    }
    |function bug_unchk_send10() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    function switchCrowdsale() public onlyOwner {
  at buggy_16.sol(157)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |    }
    |function bug_unchk_send22() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  
    |    function getBonus(uint256 _amount) internal view returns (uint256) {
  at buggy_16.sol(163)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |    }
    |function bug_unchk_send12() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  
    |    function () payable external {
  at buggy_16.sol(180)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |    }
    |function bug_unchk_send11() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    function distribute(address[] calldata _addresses, uint256 _amount) external {        
  at buggy_16.sol(191)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |    }
    |function bug_unchk_send1() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    function distributeWithAmount(address[] calldata _addresses, uint256[] calldata _amounts) external {
  at buggy_16.sol(197)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |    }
    |function bug_unchk_send2() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    /// @dev This is the actual transfer function in the token contract, it can
    |    ///  only be called by other functions in this contract.
  at buggy_16.sol(204)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |    }
    |function bug_unchk_send17() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    function balanceOf(address _owner) view public returns (uint256) {
  at buggy_16.sol(220)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |    }
    |function bug_unchk_send3() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    function transfer(address _to, uint256 _amount) onlyPayloadSize(2 * 32) public returns (bool success) {
  at buggy_16.sol(226)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |    }
    |function bug_unchk_send9() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    /// @return The balance of `_owner`
    |    function transferFrom(address _from, address _to, uint256 _amount) onlyPayloadSize(3 * 32) public returns (bool success) {
  at buggy_16.sol(233)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |    }
    |function bug_unchk_send25() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    /// @notice `msg.sender` approves `_spender` to spend `_amount` tokens on
    |    ///  its behalf. This is a modified version of the ERC20 approve function
  at buggy_16.sol(242)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |    }
    |function bug_unchk_send19() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    function allowance(address _owner, address _spender) view public returns (uint256) {
  at buggy_16.sol(260)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |    }
    |function bug_unchk_send26() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    function transferEther(address payable _receiver, uint256 _amount) public onlyOwner {
  at buggy_16.sol(266)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |    }
    |function bug_unchk_send20() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    function withdrawFund() onlyOwner public {
  at buggy_16.sol(274)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |    }
    |function bug_unchk_send32() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    function burn(uint256 _value) onlyOwner public {
  at buggy_16.sol(281)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |    }
    |function bug_unchk_send4() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    
  at buggy_16.sol(291)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |    }
    |function bug_unchk_send7() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    function withdrawForeignTokens(address tokenAddress) onlyOwner public returns (bool) {
  at buggy_16.sol(300)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |    }
    |function bug_unchk_send23() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |  function bug_unchk_send27() payable public{
  at buggy_16.sol(308)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |    
    |  function bug_unchk_send27() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event TransferEther(address indexed _from, address indexed _to, uint256 _value);
    |  function bug_unchk_send31() payable public{
  at buggy_16.sol(311)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |  event TransferEther(address indexed _from, address indexed _to, uint256 _value);
    |  function bug_unchk_send31() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event NewPrice(address indexed _changer, uint256 _lastPrice, uint256 _newPrice);
    |  function bug_unchk_send13() payable public{
  at buggy_16.sol(314)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |  event NewPrice(address indexed _changer, uint256 _lastPrice, uint256 _newPrice);
    |  function bug_unchk_send13() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event Burn(address indexed _burner, uint256 value);
    |
  at buggy_16.sol(317)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ExclusivePlatform':
    |        require(_amount <= address(this).balance);
    |        emit TransferEther(address(this), _receiver, _amount);
  > |        _receiver.transfer(_amount);
    |    }
    |function bug_unchk_send20() payable public{
  at buggy_16.sol(271)

[33mWarning[0m for UnrestrictedWrite in contract 'ExclusivePlatform':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |function bug_unchk_send15() payable public{
  at buggy_16.sol(108)

[33mWarning[0m for UnrestrictedWrite in contract 'ExclusivePlatform':
    |    function updateXPLPerEther(uint _XPLPerEther) public onlyOwner {        
    |        emit NewPrice(owner, XPLPerEther, _XPLPerEther);
  > |        XPLPerEther = _XPLPerEther;
    |    }
    |function bug_unchk_send10() payable public{
  at buggy_16.sol(154)

[33mWarning[0m for UnrestrictedWrite in contract 'ExclusivePlatform':
    |
    |    function switchCrowdsale() public onlyOwner {
  > |        crowdsaleIsOn = !(crowdsaleIsOn);
    |    }
    |function bug_unchk_send22() payable public{
  at buggy_16.sol(160)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'Owned':
    |    address payable public owner;
    |  function bug_unchk_send8() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);
    |
  at buggy_16.sol(80)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'Owned':
    |    }
    |function bug_unchk_send5() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    /**
  at buggy_16.sol(91)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'Owned':
    |    }
    |function bug_unchk_send15() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |}
  at buggy_16.sol(111)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(newOwner != address(0));
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |function bug_unchk_send15() payable public{
  at buggy_16.sol(108)

