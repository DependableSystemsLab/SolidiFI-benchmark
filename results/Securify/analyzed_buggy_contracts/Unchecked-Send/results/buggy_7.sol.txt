Processing contract: buggy_7.sol:AccountWallet
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_7.sol:Ownable
[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |{
    |  function bug_unchk_send29() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  bool private stopped;
    |  function bug_unchk_send6() payable public{
  at buggy_7.sol(10)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |  bool private stopped;
    |  function bug_unchk_send6() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  address private _owner;
    |  function bug_unchk_send16() payable public{
  at buggy_7.sol(13)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |  address private _owner;
    |  function bug_unchk_send16() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  address private _master;
    |
  at buggy_7.sol(16)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |
    |  function bug_unchk_send23() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event Stopped();
    |  function bug_unchk_send14() payable public{
  at buggy_7.sol(20)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |  event Stopped();
    |  function bug_unchk_send14() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event Started();
    |  function bug_unchk_send30() payable public{
  at buggy_7.sol(23)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |  event Started();
    |  function bug_unchk_send30() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);
    |  function bug_unchk_send8() payable public{
  at buggy_7.sol(26)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);
    |  function bug_unchk_send8() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event MasterRoleTransferred(address indexed previousMaster, address indexed newMaster);
    |
  at buggy_7.sol(29)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |    }
    |function bug_unchk_send15() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    function owner() public view returns (address)
  at buggy_7.sol(41)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |    }
    |function bug_unchk_send28() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    function master() public view returns (address)
  at buggy_7.sol(48)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |    }
    |function bug_unchk_send21() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    modifier onlyOwner()
  at buggy_7.sol(55)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |    }
    |function bug_unchk_send10() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    function isMaster() public view returns (bool)
  at buggy_7.sol(80)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |    }
    |function bug_unchk_send22() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    function transferOwnership(address newOwner) external onlyOwner
  at buggy_7.sol(87)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |    }
    |function bug_unchk_send12() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    function transferMasterRole(address newMaster) external onlyOwner
  at buggy_7.sol(94)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |    }
    |function bug_unchk_send11() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    function isStopped() public view returns (bool)
  at buggy_7.sol(101)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |    }
    |function bug_unchk_send1() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    function stop() public onlyOwner
  at buggy_7.sol(108)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |    }
    |function bug_unchk_send2() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    function start() public onlyOwner
  at buggy_7.sol(115)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |    }
    |function bug_unchk_send17() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    function _transferOwnership(address newOwner) internal
  at buggy_7.sol(122)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |    }
    |function bug_unchk_send3() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    function _transferMasterRole(address newMaster) internal
  at buggy_7.sol(131)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |    }
    |function bug_unchk_send9() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    function _stop() internal
  at buggy_7.sol(140)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |    }
    |function bug_unchk_send25() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    function _start() internal
  at buggy_7.sol(148)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |    }
    |function bug_unchk_send19() payable public{
  > |      msg.sender.transfer(1 ether);}
    |}
    |
  at buggy_7.sol(156)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |{
    |  function bug_unchk_send24() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  mapping(string => string) private btc;
    |  function bug_unchk_send5() payable public{
  at buggy_7.sol(162)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |  mapping(string => string) private btc;
    |  function bug_unchk_send5() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  mapping(string => address) private eth;
    |
  at buggy_7.sol(165)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |
    |  function bug_unchk_send27() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event SetAddress(string account, string btcAddress, address ethAddress);
    |  function bug_unchk_send31() payable public{
  at buggy_7.sol(169)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |  event SetAddress(string account, string btcAddress, address ethAddress);
    |  function bug_unchk_send31() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event UpdateAddress(string from, string to);
    |  function bug_unchk_send13() payable public{
  at buggy_7.sol(172)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |  event UpdateAddress(string from, string to);
    |  function bug_unchk_send13() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event DeleteAddress(string account);
    |
  at buggy_7.sol(175)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |    }
    |function bug_unchk_send26() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    function getAddress(string calldata account) external view returns (string memory, address)
  at buggy_7.sol(183)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |    }
    |function bug_unchk_send20() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    function setAddress(string calldata account, string calldata btcAddress, address ethAddress) external onlyMaster onlyWhenNotStopped
  at buggy_7.sol(190)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |    }
    |function bug_unchk_send32() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    function updateAccount(string calldata from, string calldata to) external onlyMaster onlyWhenNotStopped
  at buggy_7.sol(202)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |    }
    |function bug_unchk_send4() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    function deleteAccount(string calldata account) external onlyMaster onlyWhenNotStopped
  at buggy_7.sol(218)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |    }
    |function bug_unchk_send7() payable public{
  > |      msg.sender.transfer(1 ether);}
    |}
  at buggy_7.sol(230)

[33mWarning[0m for UnrestrictedWrite in contract 'AccountWallet':
    |}
    |
  > |contract AccountWallet is Ownable
    |{
    |  function bug_unchk_send24() payable public{
  at buggy_7.sol(159)

[33mWarning[0m for UnrestrictedWrite in contract 'AccountWallet':
    |
    |        btc[account] = btcAddress;
  > |        eth[account] = ethAddress;
    |
    |        emit SetAddress(account, btcAddress, ethAddress);
  at buggy_7.sol(197)

[33mWarning[0m for UnrestrictedWrite in contract 'AccountWallet':
    |
    |        btc[to] = btc[from];
  > |        eth[to] = eth[from];
    |
    |        btc[from] = '';
  at buggy_7.sol(210)

[33mWarning[0m for UnrestrictedWrite in contract 'AccountWallet':
    |
    |        btc[from] = '';
  > |        eth[from] = address(0);
    |
    |        emit UpdateAddress(from, to);
  at buggy_7.sol(213)

[33mWarning[0m for UnrestrictedWrite in contract 'AccountWallet':
    |
    |        btc[account] = '';
  > |        eth[account] = address(0);
    |
    |        emit DeleteAddress(account);
  at buggy_7.sol(225)

