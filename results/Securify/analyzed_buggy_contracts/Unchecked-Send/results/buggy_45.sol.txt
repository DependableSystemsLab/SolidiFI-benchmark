Processing contract: buggy_45.sol:StockBet
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for TODAmount in contract 'StockBet':
    |        if(guesses[result].players[msg.sender] == PaidStatus.NOT_PAID){
    |            guesses[result].players[msg.sender] = PaidStatus.PAID;
  > |            msg.sender.transfer(splitJackpot);
    |        } else revert();
    |    }
  at buggy_45.sol(204)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |    
    |  function bug_unchk_send7() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event GameCreated(uint bet);
    |  function bug_unchk_send23() payable public{
  at buggy_45.sol(10)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |  event GameCreated(uint bet);
    |  function bug_unchk_send23() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event GameOpened(uint256 initialPrice);
    |  function bug_unchk_send14() payable public{
  at buggy_45.sol(13)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |  event GameOpened(uint256 initialPrice);
    |  function bug_unchk_send14() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event GameClosed();
    |  function bug_unchk_send30() payable public{
  at buggy_45.sol(16)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |  event GameClosed();
    |  function bug_unchk_send30() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event OracleSet(address oracle);
    |  function bug_unchk_send8() payable public{
  at buggy_45.sol(19)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |  event OracleSet(address oracle);
    |  function bug_unchk_send8() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event FinalPriceSet(uint256 finalPrice);
    |  function bug_unchk_send27() payable public{
  at buggy_45.sol(22)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |  event FinalPriceSet(uint256 finalPrice);
    |  function bug_unchk_send27() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event PlayerBet(address player, uint guess);
    |    
  at buggy_45.sol(25)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |    
    |  function bug_unchk_send31() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event PlayersWin(uint result, uint256 splitJackpot);
    |  function bug_unchk_send13() payable public{
  at buggy_45.sol(29)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |  event PlayersWin(uint result, uint256 splitJackpot);
    |  function bug_unchk_send13() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  event OwnerWins(address owner);
    |    
  at buggy_45.sol(32)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |    
    |  function bug_unchk_send24() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  address payable public owner;
    |  function bug_unchk_send5() payable public{
  at buggy_45.sol(51)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |  address payable public owner;
    |  function bug_unchk_send5() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  address public oracle;
    |  function bug_unchk_send15() payable public{
  at buggy_45.sol(54)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |  address public oracle;
    |  function bug_unchk_send15() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  State public state;
    |
  at buggy_45.sol(57)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |
    |  function bug_unchk_send28() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  mapping (uint => Guess) public guesses;
    |
  at buggy_45.sol(61)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |
    |  function bug_unchk_send21() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  uint256 public bet;
    |    uint256 splitJackpot;
  at buggy_45.sol(65)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |    uint256 splitJackpot;
    |  function bug_unchk_send10() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  uint public result;
    |  function bug_unchk_send22() payable public{
  at buggy_45.sol(69)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |  uint public result;
    |  function bug_unchk_send22() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  uint256 public initialPrice;
    |  function bug_unchk_send12() payable public{
  at buggy_45.sol(72)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |  uint256 public initialPrice;
    |  function bug_unchk_send12() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  uint256 public finalPrice;
    |
  at buggy_45.sol(75)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |
    |  function bug_unchk_send11() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  uint constant UP = 1;
    |  function bug_unchk_send1() payable public{
  at buggy_45.sol(79)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |  uint constant UP = 1;
    |  function bug_unchk_send1() payable public{
  > |      msg.sender.transfer(1 ether);}
    |  uint constant DOWN = 0;
    |    
  at buggy_45.sol(82)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |    }
    |function bug_unchk_send2() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    function setOracle(address _oracle) public payable byOwner inState(State.SETUP) {
  at buggy_45.sol(119)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |    }
    |function bug_unchk_send17() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    function setInitialPrice(uint256 _value) public payable byOracle inState(State.SETUP) {
  at buggy_45.sol(127)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |    }
    |function bug_unchk_send3() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    function closeGame() public byOwner inState(State.OPEN){
  at buggy_45.sol(136)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |    }
    |function bug_unchk_send9() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    function betUp() public payable byPlayer inState(State.OPEN){
  at buggy_45.sol(144)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |    }
    |function bug_unchk_send25() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    function betDown() public payable byPlayer inState(State.OPEN){
  at buggy_45.sol(155)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |    }
    |function bug_unchk_send19() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    
  at buggy_45.sol(166)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |    }
    |function bug_unchk_send26() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    function collectOwnerWinnings() public byOwner inState(State.OWNER_WIN){
  at buggy_45.sol(193)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |    }
    |function bug_unchk_send20() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |    function collectPlayerWinnings() public byPlayer inState(State.PLAYERS_WIN){
  at buggy_45.sol(199)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |    }
    |function bug_unchk_send32() payable public{
  > |      msg.sender.transfer(1 ether);}
    |
    |    function getBalance() private view returns (uint256){
  at buggy_45.sol(208)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |    }
    |function bug_unchk_send4() payable public{
  > |      msg.sender.transfer(1 ether);}
    |    
    |}
  at buggy_45.sol(214)

[33mWarning[0m for UnrestrictedWrite in contract 'StockBet':
    |    
    |    function setOracle(address _oracle) public payable byOwner inState(State.SETUP) {
  > |        oracle = _oracle;
    |        
    |        emit OracleSet(oracle);
  at buggy_45.sol(122)

[33mWarning[0m for UnrestrictedWrite in contract 'StockBet':
    |    
    |    function setInitialPrice(uint256 _value) public payable byOracle inState(State.SETUP) {
  > |        initialPrice = _value;
    |        state = State.OPEN;
    |        
  at buggy_45.sol(130)

[33mWarning[0m for UnrestrictedWrite in contract 'StockBet':
    |    function setInitialPrice(uint256 _value) public payable byOracle inState(State.SETUP) {
    |        initialPrice = _value;
  > |        state = State.OPEN;
    |        
    |        emit GameOpened(initialPrice);
  at buggy_45.sol(131)

[33mWarning[0m for UnrestrictedWrite in contract 'StockBet':
    |
    |    function closeGame() public byOwner inState(State.OPEN){
  > |        state = State.CLOSED;
    |
    |        emit GameClosed();
  at buggy_45.sol(139)

[33mWarning[0m for UnrestrictedWrite in contract 'StockBet':
    |        require(msg.value == (bet*0.001 ether));
    |
  > |        guesses[UP].guesses_number++;
    |        guesses[UP].players[msg.sender] = PaidStatus.NOT_PAID;
    |
  at buggy_45.sol(149)

[33mWarning[0m for UnrestrictedWrite in contract 'StockBet':
    |        require(msg.value == (bet*0.001 ether));
    |
  > |        guesses[DOWN].guesses_number++;
    |        guesses[DOWN].players[msg.sender] = PaidStatus.NOT_PAID;
    |        
  at buggy_45.sol(160)

[33mWarning[0m for UnrestrictedWrite in contract 'StockBet':
    |        // require(isValidNumber(_result));
    |        
  > |        finalPrice = _value;
    |        
    |        emit FinalPriceSet(finalPrice);
  at buggy_45.sol(172)

[33mWarning[0m for UnrestrictedWrite in contract 'StockBet':
    |        
    |        if(finalPrice > initialPrice){
  > |            result = UP;
    |        }else{
    |            result = DOWN;
  at buggy_45.sol(177)

[33mWarning[0m for UnrestrictedWrite in contract 'StockBet':
    |            result = UP;
    |        }else{
  > |            result = DOWN;
    |        }
    |        
  at buggy_45.sol(179)

[33mWarning[0m for UnrestrictedWrite in contract 'StockBet':
    |        
    |        if(guesses[result].guesses_number > 0){
  > |            state = State.PLAYERS_WIN;
    |            splitJackpot = getBalance()/guesses[result].guesses_number;
    |            emit PlayersWin(result, splitJackpot);
  at buggy_45.sol(184)

[33mWarning[0m for UnrestrictedWrite in contract 'StockBet':
    |        if(guesses[result].guesses_number > 0){
    |            state = State.PLAYERS_WIN;
  > |            splitJackpot = getBalance()/guesses[result].guesses_number;
    |            emit PlayersWin(result, splitJackpot);
    |        }else{
  at buggy_45.sol(185)

[33mWarning[0m for UnrestrictedWrite in contract 'StockBet':
    |            emit PlayersWin(result, splitJackpot);
    |        }else{
  > |            state = State.OWNER_WIN;
    |            emit OwnerWins(owner);
    |        }
  at buggy_45.sol(188)

