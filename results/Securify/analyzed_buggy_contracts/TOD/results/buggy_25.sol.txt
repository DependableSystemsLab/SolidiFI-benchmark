Processing contract: buggy_25.sol:WhiteBetting
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for DAOConstantGas in contract 'WhiteBetting':
    |
    |        require(msg.sender == owner_TOD36);
  > |        owner_TOD36.transfer(reward_TOD36);
    |        reward_TOD36 = msg.value;
    |    }
  at buggy_25.sol(92)

[31mViolation[0m for DAOConstantGas in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_25.sol(100)

[31mViolation[0m for DAOConstantGas in contract 'WhiteBetting':
    |
    |        require(msg.sender == owner_TOD40);
  > |        owner_TOD40.transfer(reward_TOD40);
    |        reward_TOD40 = msg.value;
    |    }
  at buggy_25.sol(125)

[31mViolation[0m for DAOConstantGas in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_25.sol(133)

[31mViolation[0m for DAOConstantGas in contract 'WhiteBetting':
    |
    |        require(msg.sender == owner_TOD26);
  > |        owner_TOD26.transfer(reward_TOD26);
    |        reward_TOD26 = msg.value;
    |    }
  at buggy_25.sol(205)

[31mViolation[0m for DAOConstantGas in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD26);
    |        claimed_TOD26 = true;
    |    }
  at buggy_25.sol(213)

[31mViolation[0m for DAOConstantGas in contract 'WhiteBetting':
    |
    |        require(msg.sender == owner_TOD20);
  > |        owner_TOD20.transfer(reward_TOD20);
    |        reward_TOD20 = msg.value;
    |    }
  at buggy_25.sol(228)

[31mViolation[0m for DAOConstantGas in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD20);
    |        claimed_TOD20 = true;
    |    }
  at buggy_25.sol(236)

[31mViolation[0m for DAOConstantGas in contract 'WhiteBetting':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_25.sol(259)

[31mViolation[0m for DAOConstantGas in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_25.sol(267)

[31mViolation[0m for DAOConstantGas in contract 'WhiteBetting':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_25.sol(293)

[31mViolation[0m for DAOConstantGas in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_25.sol(301)

[31mViolation[0m for DAOConstantGas in contract 'WhiteBetting':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_25.sol(351)

[31mViolation[0m for DAOConstantGas in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_25.sol(359)

[31mViolation[0m for DAOConstantGas in contract 'WhiteBetting':
    |
    |        require(msg.sender == owner_TOD14);
  > |        owner_TOD14.transfer(reward_TOD14);
    |        reward_TOD14 = msg.value;
    |    }
  at buggy_25.sol(445)

[31mViolation[0m for DAOConstantGas in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD14);
    |        claimed_TOD14 = true;
    |    }
  at buggy_25.sol(453)

[31mViolation[0m for DAOConstantGas in contract 'WhiteBetting':
    |
    |        require(msg.sender == owner_TOD30);
  > |        owner_TOD30.transfer(reward_TOD30);
    |        reward_TOD30 = msg.value;
    |    }
  at buggy_25.sol(468)

[31mViolation[0m for DAOConstantGas in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD30);
    |        claimed_TOD30 = true;
    |    }
  at buggy_25.sol(476)

[31mViolation[0m for DAOConstantGas in contract 'WhiteBetting':
    |
    |        require(msg.sender == owner_TOD8);
  > |        owner_TOD8.transfer(reward_TOD8);
    |        reward_TOD8 = msg.value;
    |    }
  at buggy_25.sol(491)

[31mViolation[0m for DAOConstantGas in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD8);
    |        claimed_TOD8 = true;
    |    }
  at buggy_25.sol(499)

[33mWarning[0m for DAOConstantGas in contract 'WhiteBetting':
    |        || (selectedTeam == 8 && ( _homeDrawAway == 3 || _homeDrawAway == 2) ) 
    |        ){ 
  > |        betList[_fixtureId][i].player.transfer(returnEth);
    |      }
    |    }
  at buggy_25.sol(385)

[31mViolation[0m for TODAmount in contract 'WhiteBetting':
    |
    |        require(msg.sender == owner_TOD36);
  > |        owner_TOD36.transfer(reward_TOD36);
    |        reward_TOD36 = msg.value;
    |    }
  at buggy_25.sol(92)

[31mViolation[0m for TODAmount in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_25.sol(100)

[31mViolation[0m for TODAmount in contract 'WhiteBetting':
    |
    |        require(msg.sender == owner_TOD40);
  > |        owner_TOD40.transfer(reward_TOD40);
    |        reward_TOD40 = msg.value;
    |    }
  at buggy_25.sol(125)

[31mViolation[0m for TODAmount in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_25.sol(133)

[31mViolation[0m for TODAmount in contract 'WhiteBetting':
    |
    |        require(msg.sender == owner_TOD26);
  > |        owner_TOD26.transfer(reward_TOD26);
    |        reward_TOD26 = msg.value;
    |    }
  at buggy_25.sol(205)

[31mViolation[0m for TODAmount in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD26);
    |        claimed_TOD26 = true;
    |    }
  at buggy_25.sol(213)

[31mViolation[0m for TODAmount in contract 'WhiteBetting':
    |
    |        require(msg.sender == owner_TOD20);
  > |        owner_TOD20.transfer(reward_TOD20);
    |        reward_TOD20 = msg.value;
    |    }
  at buggy_25.sol(228)

[31mViolation[0m for TODAmount in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD20);
    |        claimed_TOD20 = true;
    |    }
  at buggy_25.sol(236)

[31mViolation[0m for TODAmount in contract 'WhiteBetting':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_25.sol(259)

[31mViolation[0m for TODAmount in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_25.sol(267)

[31mViolation[0m for TODAmount in contract 'WhiteBetting':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_25.sol(293)

[31mViolation[0m for TODAmount in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_25.sol(301)

[31mViolation[0m for TODAmount in contract 'WhiteBetting':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_25.sol(351)

[31mViolation[0m for TODAmount in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_25.sol(359)

[31mViolation[0m for TODAmount in contract 'WhiteBetting':
    |
    |        require(msg.sender == owner_TOD14);
  > |        owner_TOD14.transfer(reward_TOD14);
    |        reward_TOD14 = msg.value;
    |    }
  at buggy_25.sol(445)

[31mViolation[0m for TODAmount in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD14);
    |        claimed_TOD14 = true;
    |    }
  at buggy_25.sol(453)

[31mViolation[0m for TODAmount in contract 'WhiteBetting':
    |
    |        require(msg.sender == owner_TOD30);
  > |        owner_TOD30.transfer(reward_TOD30);
    |        reward_TOD30 = msg.value;
    |    }
  at buggy_25.sol(468)

[31mViolation[0m for TODAmount in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD30);
    |        claimed_TOD30 = true;
    |    }
  at buggy_25.sol(476)

[31mViolation[0m for TODAmount in contract 'WhiteBetting':
    |
    |        require(msg.sender == owner_TOD8);
  > |        owner_TOD8.transfer(reward_TOD8);
    |        reward_TOD8 = msg.value;
    |    }
  at buggy_25.sol(491)

[31mViolation[0m for TODAmount in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD8);
    |        claimed_TOD8 = true;
    |    }
  at buggy_25.sol(499)

[33mWarning[0m for TODAmount in contract 'WhiteBetting':
    |function getReward_TOD9() payable public{
    |     
  > |       winner_TOD9.transfer(msg.value);
    |    }
    |  address payable public owner;
  at buggy_25.sol(24)

[33mWarning[0m for TODAmount in contract 'WhiteBetting':
    |function getReward_TOD25() payable public{
    |     
  > |       winner_TOD25.transfer(msg.value);
    |    }
    |  mapping(uint64 => GameInfo) public gameList;
  at buggy_25.sol(57)

[33mWarning[0m for TODAmount in contract 'WhiteBetting':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |  mapping(uint64 => BetFixture[]) public betList;
  at buggy_25.sol(80)

[33mWarning[0m for TODAmount in contract 'WhiteBetting':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |  event Deposit(address sender, uint256 eth);
  at buggy_25.sol(115)

[33mWarning[0m for TODAmount in contract 'WhiteBetting':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |  event NewStake(address player, uint64 fixtureId, uint16 selectedTeam, uint256 stake, uint256 odd );
  at buggy_25.sol(148)

[33mWarning[0m for TODAmount in contract 'WhiteBetting':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |  event SetGame(uint64 _fixtureId, uint256 _timestamp, uint32 _odd_homeTeam, uint32 _odd_drawTeam, uint32 _odd_awayTeam, uint32 _odd_over, uint32 _odd_under, uint32 _odd_homeTeamAndDraw, uint32 _odd_homeAndAwayTeam , uint32 _odd_awayTeamAndDraw, uint8 _open_status);
  at buggy_25.sol(162)

[33mWarning[0m for TODAmount in contract 'WhiteBetting':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event ChangeOdd (uint64 _fixtureId, uint32 _odd_homeTeam, uint32 _odd_drawTeam, uint32 _odd_awayTeam, uint32 _odd_over, uint32 _odd_under, uint32 _odd_homeTeamAndDraw, uint32 _odd_homeAndAwayTeam , uint32 _odd_awayTeamAndDraw);
  at buggy_25.sol(176)

[33mWarning[0m for TODAmount in contract 'WhiteBetting':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event GivePrizeMoney(uint64 _fixtureId, uint8 _homeDrawAway, uint8 _overUnder);
  at buggy_25.sol(190)

[33mWarning[0m for TODAmount in contract 'WhiteBetting':
    |        || (selectedTeam == 8 && ( _homeDrawAway == 3 || _homeDrawAway == 2) ) 
    |        ){ 
  > |        betList[_fixtureId][i].player.transfer(returnEth);
    |      }
    |    }
  at buggy_25.sol(385)

[33mWarning[0m for TODAmount in contract 'WhiteBetting':
    |function getReward_TOD7() payable public{
    |     
  > |       winner_TOD7.transfer(msg.value);
    |    }
    |
  at buggy_25.sol(407)

[33mWarning[0m for TODAmount in contract 'WhiteBetting':
    |function getReward_TOD23() payable public{
    |     
  > |       winner_TOD23.transfer(msg.value);
    |    }
    |
  at buggy_25.sol(431)

[33mWarning[0m for TODAmount in contract 'WhiteBetting':
    |  // Fallback function
    |  function () external payable{
  > |    owner.transfer(msg.value);    
    |  }
    |bool claimed_TOD8 = false;
  at buggy_25.sol(482)

[33mWarning[0m for TODAmount in contract 'WhiteBetting':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |
  at buggy_25.sol(520)

[31mViolation[0m for TODReceiver in contract 'WhiteBetting':
    |function getReward_TOD9() payable public{
    |     
  > |       winner_TOD9.transfer(msg.value);
    |    }
    |  address payable public owner;
  at buggy_25.sol(24)

[31mViolation[0m for TODReceiver in contract 'WhiteBetting':
    |function getReward_TOD25() payable public{
    |     
  > |       winner_TOD25.transfer(msg.value);
    |    }
    |  mapping(uint64 => GameInfo) public gameList;
  at buggy_25.sol(57)

[31mViolation[0m for TODReceiver in contract 'WhiteBetting':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |  mapping(uint64 => BetFixture[]) public betList;
  at buggy_25.sol(80)

[31mViolation[0m for TODReceiver in contract 'WhiteBetting':
    |
    |        require(msg.sender == owner_TOD36);
  > |        owner_TOD36.transfer(reward_TOD36);
    |        reward_TOD36 = msg.value;
    |    }
  at buggy_25.sol(92)

[31mViolation[0m for TODReceiver in contract 'WhiteBetting':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |  event Deposit(address sender, uint256 eth);
  at buggy_25.sol(115)

[31mViolation[0m for TODReceiver in contract 'WhiteBetting':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |  event NewStake(address player, uint64 fixtureId, uint16 selectedTeam, uint256 stake, uint256 odd );
  at buggy_25.sol(148)

[31mViolation[0m for TODReceiver in contract 'WhiteBetting':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |  event SetGame(uint64 _fixtureId, uint256 _timestamp, uint32 _odd_homeTeam, uint32 _odd_drawTeam, uint32 _odd_awayTeam, uint32 _odd_over, uint32 _odd_under, uint32 _odd_homeTeamAndDraw, uint32 _odd_homeAndAwayTeam , uint32 _odd_awayTeamAndDraw, uint8 _open_status);
  at buggy_25.sol(162)

[31mViolation[0m for TODReceiver in contract 'WhiteBetting':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event ChangeOdd (uint64 _fixtureId, uint32 _odd_homeTeam, uint32 _odd_drawTeam, uint32 _odd_awayTeam, uint32 _odd_over, uint32 _odd_under, uint32 _odd_homeTeamAndDraw, uint32 _odd_homeAndAwayTeam , uint32 _odd_awayTeamAndDraw);
  at buggy_25.sol(176)

[31mViolation[0m for TODReceiver in contract 'WhiteBetting':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event GivePrizeMoney(uint64 _fixtureId, uint8 _homeDrawAway, uint8 _overUnder);
  at buggy_25.sol(190)

[31mViolation[0m for TODReceiver in contract 'WhiteBetting':
    |
    |        require(msg.sender == owner_TOD20);
  > |        owner_TOD20.transfer(reward_TOD20);
    |        reward_TOD20 = msg.value;
    |    }
  at buggy_25.sol(228)

[31mViolation[0m for TODReceiver in contract 'WhiteBetting':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_25.sol(259)

[31mViolation[0m for TODReceiver in contract 'WhiteBetting':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_25.sol(293)

[31mViolation[0m for TODReceiver in contract 'WhiteBetting':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_25.sol(351)

[31mViolation[0m for TODReceiver in contract 'WhiteBetting':
    |function getReward_TOD7() payable public{
    |     
  > |       winner_TOD7.transfer(msg.value);
    |    }
    |
  at buggy_25.sol(407)

[31mViolation[0m for TODReceiver in contract 'WhiteBetting':
    |function getReward_TOD23() payable public{
    |     
  > |       winner_TOD23.transfer(msg.value);
    |    }
    |
  at buggy_25.sol(431)

[31mViolation[0m for TODReceiver in contract 'WhiteBetting':
    |
    |        require(msg.sender == owner_TOD30);
  > |        owner_TOD30.transfer(reward_TOD30);
    |        reward_TOD30 = msg.value;
    |    }
  at buggy_25.sol(468)

[31mViolation[0m for TODReceiver in contract 'WhiteBetting':
    |  // Fallback function
    |  function () external payable{
  > |    owner.transfer(msg.value);    
    |  }
    |bool claimed_TOD8 = false;
  at buggy_25.sol(482)

[31mViolation[0m for TODReceiver in contract 'WhiteBetting':
    |
    |        require(msg.sender == owner_TOD8);
  > |        owner_TOD8.transfer(reward_TOD8);
    |        reward_TOD8 = msg.value;
    |    }
  at buggy_25.sol(491)

[31mViolation[0m for TODReceiver in contract 'WhiteBetting':
    |  function withdraw(uint256 _amount) external payable onlyOwner {
    |    require(_amount > 0 && _amount <= address(this).balance );
  > |    owner.transfer(_amount);
    |    emit Withdraw(owner, _amount);
    |  }
  at buggy_25.sol(506)

[31mViolation[0m for TODReceiver in contract 'WhiteBetting':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |
  at buggy_25.sol(520)

[33mWarning[0m for TODReceiver in contract 'WhiteBetting':
    |        || (selectedTeam == 8 && ( _homeDrawAway == 3 || _homeDrawAway == 2) ) 
    |        ){ 
  > |        betList[_fixtureId][i].player.transfer(returnEth);
    |      }
    |    }
  at buggy_25.sol(385)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'WhiteBetting':
    |function getReward_TOD9() payable public{
    |     
  > |       winner_TOD9.transfer(msg.value);
    |    }
    |  address payable public owner;
  at buggy_25.sol(24)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'WhiteBetting':
    |function getReward_TOD25() payable public{
    |     
  > |       winner_TOD25.transfer(msg.value);
    |    }
    |  mapping(uint64 => GameInfo) public gameList;
  at buggy_25.sol(57)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'WhiteBetting':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |  mapping(uint64 => BetFixture[]) public betList;
  at buggy_25.sol(80)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_25.sol(100)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'WhiteBetting':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |  event Deposit(address sender, uint256 eth);
  at buggy_25.sol(115)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_25.sol(133)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'WhiteBetting':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |  event NewStake(address player, uint64 fixtureId, uint16 selectedTeam, uint256 stake, uint256 odd );
  at buggy_25.sol(148)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'WhiteBetting':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |  event SetGame(uint64 _fixtureId, uint256 _timestamp, uint32 _odd_homeTeam, uint32 _odd_drawTeam, uint32 _odd_awayTeam, uint32 _odd_over, uint32 _odd_under, uint32 _odd_homeTeamAndDraw, uint32 _odd_homeAndAwayTeam , uint32 _odd_awayTeamAndDraw, uint8 _open_status);
  at buggy_25.sol(162)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'WhiteBetting':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event ChangeOdd (uint64 _fixtureId, uint32 _odd_homeTeam, uint32 _odd_drawTeam, uint32 _odd_awayTeam, uint32 _odd_over, uint32 _odd_under, uint32 _odd_homeTeamAndDraw, uint32 _odd_homeAndAwayTeam , uint32 _odd_awayTeamAndDraw);
  at buggy_25.sol(176)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'WhiteBetting':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event GivePrizeMoney(uint64 _fixtureId, uint8 _homeDrawAway, uint8 _overUnder);
  at buggy_25.sol(190)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD26);
    |        claimed_TOD26 = true;
    |    }
  at buggy_25.sol(213)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD20);
    |        claimed_TOD20 = true;
    |    }
  at buggy_25.sol(236)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_25.sol(267)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_25.sol(301)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_25.sol(359)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'WhiteBetting':
    |        || (selectedTeam == 8 && ( _homeDrawAway == 3 || _homeDrawAway == 2) ) 
    |        ){ 
  > |        betList[_fixtureId][i].player.transfer(returnEth);
    |      }
    |    }
  at buggy_25.sol(385)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'WhiteBetting':
    |function getReward_TOD7() payable public{
    |     
  > |       winner_TOD7.transfer(msg.value);
    |    }
    |
  at buggy_25.sol(407)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'WhiteBetting':
    |function getReward_TOD23() payable public{
    |     
  > |       winner_TOD23.transfer(msg.value);
    |    }
    |
  at buggy_25.sol(431)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD14);
    |        claimed_TOD14 = true;
    |    }
  at buggy_25.sol(453)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD30);
    |        claimed_TOD30 = true;
    |    }
  at buggy_25.sol(476)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'WhiteBetting':
    |  // Fallback function
    |  function () external payable{
  > |    owner.transfer(msg.value);    
    |  }
    |bool claimed_TOD8 = false;
  at buggy_25.sol(482)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'WhiteBetting':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD8);
    |        claimed_TOD8 = true;
    |    }
  at buggy_25.sol(499)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'WhiteBetting':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |
  at buggy_25.sol(520)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'WhiteBetting':
    |  function withdraw(uint256 _amount) external payable onlyOwner {
    |    require(_amount > 0 && _amount <= address(this).balance );
  > |    owner.transfer(_amount);
    |    emit Withdraw(owner, _amount);
    |  }
  at buggy_25.sol(506)

[31mViolation[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |/**
  > | *Submitted for verification at Etherscan.io on 2019-09-24
    |*/
    |
  at buggy_25.sol(2)

[31mViolation[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD9 = msg.sender;
    |        }
    |    }
  at buggy_25.sol(18)

[31mViolation[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD25 = msg.sender;
    |        }
    |    }
  at buggy_25.sol(51)

[31mViolation[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD19 = msg.sender;
    |        }
    |    }
  at buggy_25.sol(74)

[31mViolation[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |
    |        msg.sender.transfer(reward_TOD36);
  > |        claimed_TOD36 = true;
    |    }
    |  event Success(uint256 odd);
  at buggy_25.sol(101)

[31mViolation[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD35 = msg.sender;
    |        }
    |    }
  at buggy_25.sol(109)

[31mViolation[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |
    |        msg.sender.transfer(reward_TOD40);
  > |        claimed_TOD40 = true;
    |    }
    |  event Withdraw(address receiver, uint256 eth);
  at buggy_25.sol(134)

[31mViolation[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD33 = msg.sender;
    |        }
    |    }
  at buggy_25.sol(142)

[31mViolation[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD27 = msg.sender;
    |        }
    |    }
  at buggy_25.sol(156)

[31mViolation[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD31 = msg.sender;
    |        }
    |    }
  at buggy_25.sol(170)

[31mViolation[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD13 = msg.sender;
    |        }
    |    }
  at buggy_25.sol(184)

[31mViolation[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |
    |        msg.sender.transfer(reward_TOD26);
  > |        claimed_TOD26 = true;
    |    }
    |
  at buggy_25.sol(214)

[31mViolation[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |
    |        msg.sender.transfer(reward_TOD20);
  > |        claimed_TOD20 = true;
    |    }
    |
  at buggy_25.sol(237)

[31mViolation[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |
    |        msg.sender.transfer(reward_TOD32);
  > |        claimed_TOD32 = true;
    |    }
    |
  at buggy_25.sol(268)

[31mViolation[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |
    |        msg.sender.transfer(reward_TOD38);
  > |        claimed_TOD38 = true;
    |    }
    |
  at buggy_25.sol(302)

[31mViolation[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |
    |    // Save the betting information
  > |    betList[_fixtureId].push(BetFixture( msg.sender, stake,  _odd, _selectedTeam));
    |    emit NewStake(msg.sender, _fixtureId, _selectedTeam, stake, _odd );
    |
  at buggy_25.sol(340)

[31mViolation[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |
    |        msg.sender.transfer(reward_TOD4);
  > |        claimed_TOD4 = true;
    |    }
    |
  at buggy_25.sol(360)

[31mViolation[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |
    |    // Change the game status.
  > |    gameList[_fixtureId].open_status = 5;
    |    // It was paid.
    |    gameList[_fixtureId].isDone = true; // 보상을 마쳤으므로 true로 변경.
  at buggy_25.sol(390)

[31mViolation[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |    gameList[_fixtureId].open_status = 5;
    |    // It was paid.
  > |    gameList[_fixtureId].isDone = true; // 보상을 마쳤으므로 true로 변경.
    |
    |    emit GivePrizeMoney( _fixtureId,  _homeDrawAway,  _overUnder);
  at buggy_25.sol(392)

[31mViolation[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD7 = msg.sender;
    |        }
    |    }
  at buggy_25.sol(401)

[31mViolation[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD23 = msg.sender;
    |        }
    |    }
  at buggy_25.sol(425)

[31mViolation[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |
    |        msg.sender.transfer(reward_TOD14);
  > |        claimed_TOD14 = true;
    |    }
    |
  at buggy_25.sol(454)

[31mViolation[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |
    |        msg.sender.transfer(reward_TOD30);
  > |        claimed_TOD30 = true;
    |    }
    |
  at buggy_25.sol(477)

[31mViolation[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |
    |        msg.sender.transfer(reward_TOD8);
  > |        claimed_TOD8 = true;
    |    }
    |
  at buggy_25.sol(500)

[31mViolation[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD39 = msg.sender;
    |        }
    |    }
  at buggy_25.sol(514)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |        require(msg.sender == owner_TOD36);
    |        owner_TOD36.transfer(reward_TOD36);
  > |        reward_TOD36 = msg.value;
    |    }
    |
  at buggy_25.sol(93)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |        require(msg.sender == owner_TOD40);
    |        owner_TOD40.transfer(reward_TOD40);
  > |        reward_TOD40 = msg.value;
    |    }
    |
  at buggy_25.sol(126)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |        require(msg.sender == owner_TOD26);
    |        owner_TOD26.transfer(reward_TOD26);
  > |        reward_TOD26 = msg.value;
    |    }
    |
  at buggy_25.sol(206)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |  // Change the game status
    |  function setOpenStatus(uint64 _fixtureId, uint8 _open_status) external onlyOwner {
  > |    gameList[_fixtureId].open_status = _open_status;
    |  }
    |bool claimed_TOD20 = false;
  at buggy_25.sol(219)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |        require(msg.sender == owner_TOD20);
    |        owner_TOD20.transfer(reward_TOD20);
  > |        reward_TOD20 = msg.value;
    |    }
    |
  at buggy_25.sol(229)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |  // Refresh the game odd
    |  function changeOdd (uint64 _fixtureId, uint32 _odd_homeTeam, uint32 _odd_drawTeam, uint32 _odd_awayTeam, uint32 _odd_over, uint32 _odd_under, uint32 _odd_homeTeamAndDraw, uint32 _odd_homeAndAwayTeam , uint32 _odd_awayTeamAndDraw ) external onlyOwner {
  > |    gameList[_fixtureId].odd_homeTeam        = _odd_homeTeam;
    |    gameList[_fixtureId].odd_drawTeam        = _odd_drawTeam;
    |    gameList[_fixtureId].odd_awayTeam        = _odd_awayTeam;
  at buggy_25.sol(242)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |  function changeOdd (uint64 _fixtureId, uint32 _odd_homeTeam, uint32 _odd_drawTeam, uint32 _odd_awayTeam, uint32 _odd_over, uint32 _odd_under, uint32 _odd_homeTeamAndDraw, uint32 _odd_homeAndAwayTeam , uint32 _odd_awayTeamAndDraw ) external onlyOwner {
    |    gameList[_fixtureId].odd_homeTeam        = _odd_homeTeam;
  > |    gameList[_fixtureId].odd_drawTeam        = _odd_drawTeam;
    |    gameList[_fixtureId].odd_awayTeam        = _odd_awayTeam;
    |    gameList[_fixtureId].odd_over            = _odd_over;
  at buggy_25.sol(243)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |    gameList[_fixtureId].odd_homeTeam        = _odd_homeTeam;
    |    gameList[_fixtureId].odd_drawTeam        = _odd_drawTeam;
  > |    gameList[_fixtureId].odd_awayTeam        = _odd_awayTeam;
    |    gameList[_fixtureId].odd_over            = _odd_over;
    |    gameList[_fixtureId].odd_under           = _odd_under;
  at buggy_25.sol(244)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |    gameList[_fixtureId].odd_drawTeam        = _odd_drawTeam;
    |    gameList[_fixtureId].odd_awayTeam        = _odd_awayTeam;
  > |    gameList[_fixtureId].odd_over            = _odd_over;
    |    gameList[_fixtureId].odd_under           = _odd_under;
    |    gameList[_fixtureId].odd_homeTeamAndDraw = _odd_homeTeamAndDraw;
  at buggy_25.sol(245)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |    gameList[_fixtureId].odd_awayTeam        = _odd_awayTeam;
    |    gameList[_fixtureId].odd_over            = _odd_over;
  > |    gameList[_fixtureId].odd_under           = _odd_under;
    |    gameList[_fixtureId].odd_homeTeamAndDraw = _odd_homeTeamAndDraw;
    |    gameList[_fixtureId].odd_homeAndAwayTeam = _odd_homeAndAwayTeam;
  at buggy_25.sol(246)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |    gameList[_fixtureId].odd_over            = _odd_over;
    |    gameList[_fixtureId].odd_under           = _odd_under;
  > |    gameList[_fixtureId].odd_homeTeamAndDraw = _odd_homeTeamAndDraw;
    |    gameList[_fixtureId].odd_homeAndAwayTeam = _odd_homeAndAwayTeam;
    |    gameList[_fixtureId].odd_awayTeamAndDraw = _odd_awayTeamAndDraw;
  at buggy_25.sol(247)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |    gameList[_fixtureId].odd_under           = _odd_under;
    |    gameList[_fixtureId].odd_homeTeamAndDraw = _odd_homeTeamAndDraw;
  > |    gameList[_fixtureId].odd_homeAndAwayTeam = _odd_homeAndAwayTeam;
    |    gameList[_fixtureId].odd_awayTeamAndDraw = _odd_awayTeamAndDraw;
    |    emit ChangeOdd (_fixtureId, _odd_homeTeam, _odd_drawTeam, _odd_awayTeam, _odd_over, _odd_under, _odd_homeTeamAndDraw, _odd_homeAndAwayTeam , _odd_awayTeamAndDraw);
  at buggy_25.sol(248)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |    gameList[_fixtureId].odd_homeTeamAndDraw = _odd_homeTeamAndDraw;
    |    gameList[_fixtureId].odd_homeAndAwayTeam = _odd_homeAndAwayTeam;
  > |    gameList[_fixtureId].odd_awayTeamAndDraw = _odd_awayTeamAndDraw;
    |    emit ChangeOdd (_fixtureId, _odd_homeTeam, _odd_drawTeam, _odd_awayTeam, _odd_over, _odd_under, _odd_homeTeamAndDraw, _odd_homeAndAwayTeam , _odd_awayTeamAndDraw);
    |  }
  at buggy_25.sol(249)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |        require(msg.sender == owner_TOD32);
    |        owner_TOD32.transfer(reward_TOD32);
  > |        reward_TOD32 = msg.value;
    |    }
    |
  at buggy_25.sol(260)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |  // Save the game information
    |  function setGameInfo (uint64 _fixtureId, uint256 _timestamp, uint32 _odd_homeTeam, uint32 _odd_drawTeam, uint32 _odd_awayTeam, uint32 _odd_over, uint32 _odd_under, uint32 _odd_homeTeamAndDraw, uint32 _odd_homeAndAwayTeam , uint32 _odd_awayTeamAndDraw, uint8 _open_status ) external onlyOwner {
  > |    gameList[_fixtureId].timestamp           = _timestamp;
    |    gameList[_fixtureId].odd_homeTeam        = _odd_homeTeam;
    |    gameList[_fixtureId].odd_drawTeam        = _odd_drawTeam;
  at buggy_25.sol(273)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |  function setGameInfo (uint64 _fixtureId, uint256 _timestamp, uint32 _odd_homeTeam, uint32 _odd_drawTeam, uint32 _odd_awayTeam, uint32 _odd_over, uint32 _odd_under, uint32 _odd_homeTeamAndDraw, uint32 _odd_homeAndAwayTeam , uint32 _odd_awayTeamAndDraw, uint8 _open_status ) external onlyOwner {
    |    gameList[_fixtureId].timestamp           = _timestamp;
  > |    gameList[_fixtureId].odd_homeTeam        = _odd_homeTeam;
    |    gameList[_fixtureId].odd_drawTeam        = _odd_drawTeam;
    |    gameList[_fixtureId].odd_awayTeam        = _odd_awayTeam;
  at buggy_25.sol(274)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |    gameList[_fixtureId].timestamp           = _timestamp;
    |    gameList[_fixtureId].odd_homeTeam        = _odd_homeTeam;
  > |    gameList[_fixtureId].odd_drawTeam        = _odd_drawTeam;
    |    gameList[_fixtureId].odd_awayTeam        = _odd_awayTeam;
    |    gameList[_fixtureId].odd_over            = _odd_over;
  at buggy_25.sol(275)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |    gameList[_fixtureId].odd_homeTeam        = _odd_homeTeam;
    |    gameList[_fixtureId].odd_drawTeam        = _odd_drawTeam;
  > |    gameList[_fixtureId].odd_awayTeam        = _odd_awayTeam;
    |    gameList[_fixtureId].odd_over            = _odd_over;
    |    gameList[_fixtureId].odd_under           = _odd_under;
  at buggy_25.sol(276)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |    gameList[_fixtureId].odd_drawTeam        = _odd_drawTeam;
    |    gameList[_fixtureId].odd_awayTeam        = _odd_awayTeam;
  > |    gameList[_fixtureId].odd_over            = _odd_over;
    |    gameList[_fixtureId].odd_under           = _odd_under;
    |    gameList[_fixtureId].odd_homeTeamAndDraw = _odd_homeTeamAndDraw;
  at buggy_25.sol(277)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |    gameList[_fixtureId].odd_awayTeam        = _odd_awayTeam;
    |    gameList[_fixtureId].odd_over            = _odd_over;
  > |    gameList[_fixtureId].odd_under           = _odd_under;
    |    gameList[_fixtureId].odd_homeTeamAndDraw = _odd_homeTeamAndDraw;
    |    gameList[_fixtureId].odd_homeAndAwayTeam = _odd_homeAndAwayTeam;
  at buggy_25.sol(278)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |    gameList[_fixtureId].odd_over            = _odd_over;
    |    gameList[_fixtureId].odd_under           = _odd_under;
  > |    gameList[_fixtureId].odd_homeTeamAndDraw = _odd_homeTeamAndDraw;
    |    gameList[_fixtureId].odd_homeAndAwayTeam = _odd_homeAndAwayTeam;
    |    gameList[_fixtureId].odd_awayTeamAndDraw = _odd_awayTeamAndDraw;
  at buggy_25.sol(279)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |    gameList[_fixtureId].odd_under           = _odd_under;
    |    gameList[_fixtureId].odd_homeTeamAndDraw = _odd_homeTeamAndDraw;
  > |    gameList[_fixtureId].odd_homeAndAwayTeam = _odd_homeAndAwayTeam;
    |    gameList[_fixtureId].odd_awayTeamAndDraw = _odd_awayTeamAndDraw;
    |    gameList[_fixtureId].open_status         = _open_status;
  at buggy_25.sol(280)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |    gameList[_fixtureId].odd_homeTeamAndDraw = _odd_homeTeamAndDraw;
    |    gameList[_fixtureId].odd_homeAndAwayTeam = _odd_homeAndAwayTeam;
  > |    gameList[_fixtureId].odd_awayTeamAndDraw = _odd_awayTeamAndDraw;
    |    gameList[_fixtureId].open_status         = _open_status;
    |    gameList[_fixtureId].isDone              = false;
  at buggy_25.sol(281)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |    gameList[_fixtureId].odd_homeAndAwayTeam = _odd_homeAndAwayTeam;
    |    gameList[_fixtureId].odd_awayTeamAndDraw = _odd_awayTeamAndDraw;
  > |    gameList[_fixtureId].open_status         = _open_status;
    |    gameList[_fixtureId].isDone              = false;
    |    emit SetGame(_fixtureId, _timestamp, _odd_homeTeam, _odd_drawTeam, _odd_awayTeam, _odd_over, _odd_under, _odd_homeTeamAndDraw, _odd_homeAndAwayTeam , _odd_awayTeamAndDraw, _open_status);
  at buggy_25.sol(282)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |    gameList[_fixtureId].odd_awayTeamAndDraw = _odd_awayTeamAndDraw;
    |    gameList[_fixtureId].open_status         = _open_status;
  > |    gameList[_fixtureId].isDone              = false;
    |    emit SetGame(_fixtureId, _timestamp, _odd_homeTeam, _odd_drawTeam, _odd_awayTeam, _odd_over, _odd_under, _odd_homeTeamAndDraw, _odd_homeAndAwayTeam , _odd_awayTeamAndDraw, _open_status);
    |  }
  at buggy_25.sol(283)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |        require(msg.sender == owner_TOD38);
    |        owner_TOD38.transfer(reward_TOD38);
  > |        reward_TOD38 = msg.value;
    |    }
    |
  at buggy_25.sol(294)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |        require(msg.sender == owner_TOD4);
    |        owner_TOD4.transfer(reward_TOD4);
  > |        reward_TOD4 = msg.value;
    |    }
    |
  at buggy_25.sol(352)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |        require(msg.sender == owner_TOD14);
    |        owner_TOD14.transfer(reward_TOD14);
  > |        reward_TOD14 = msg.value;
    |    }
    |
  at buggy_25.sol(446)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |  // Change Owner
    |  function changeOwner(address payable _newOwner ) external onlyOwner {
  > |    owner = _newOwner;
    |  }
    |bool claimed_TOD30 = false;
  at buggy_25.sol(459)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |        require(msg.sender == owner_TOD30);
    |        owner_TOD30.transfer(reward_TOD30);
  > |        reward_TOD30 = msg.value;
    |    }
    |
  at buggy_25.sol(469)

[33mWarning[0m for UnrestrictedWrite in contract 'WhiteBetting':
    |        require(msg.sender == owner_TOD8);
    |        owner_TOD8.transfer(reward_TOD8);
  > |        reward_TOD8 = msg.value;
    |    }
    |
  at buggy_25.sol(492)

