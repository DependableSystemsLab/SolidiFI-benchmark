Processing contract: buggy_37.sol:ApproveAndCallFallBack
Processing contract: buggy_37.sol:AugustCoin
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_37.sol:ERC20Interface
Processing contract: buggy_37.sol:Owned
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_37.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD2);
  > |        owner_TOD2.transfer(reward_TOD2);
    |        reward_TOD2 = msg.value;
    |    }
  at buggy_37.sol(71)

[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD2);
    |        claimed_TOD2 = true;
    |    }
  at buggy_37.sol(79)

[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD26);
  > |        owner_TOD26.transfer(reward_TOD26);
    |        reward_TOD26 = msg.value;
    |    }
  at buggy_37.sol(185)

[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD26);
    |        claimed_TOD26 = true;
    |    }
  at buggy_37.sol(193)

[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_37.sol(314)

[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_37.sol(322)

[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_37.sol(341)

[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_37.sol(349)

[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_37.sol(365)

[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_37.sol(373)

[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD28);
  > |        owner_TOD28.transfer(reward_TOD28);
    |        reward_TOD28 = msg.value;
    |    }
  at buggy_37.sol(391)

[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD28);
    |        claimed_TOD28 = true;
    |    }
  at buggy_37.sol(399)

[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD34);
  > |        owner_TOD34.transfer(reward_TOD34);
    |        reward_TOD34 = msg.value;
    |    }
  at buggy_37.sol(410)

[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD34);
    |        claimed_TOD34 = true;
    |    }
  at buggy_37.sol(418)

[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD10);
  > |        owner_TOD10.transfer(reward_TOD10);
    |        reward_TOD10 = msg.value;
    |    }
  at buggy_37.sol(443)

[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD10);
    |        claimed_TOD10 = true;
    |    }
  at buggy_37.sol(451)

[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD22);
  > |        owner_TOD22.transfer(reward_TOD22);
    |        reward_TOD22 = msg.value;
    |    }
  at buggy_37.sol(463)

[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD22);
    |        claimed_TOD22 = true;
    |    }
  at buggy_37.sol(471)

[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD12);
  > |        owner_TOD12.transfer(reward_TOD12);
    |        reward_TOD12 = msg.value;
    |    }
  at buggy_37.sol(482)

[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD12);
    |        claimed_TOD12 = true;
    |    }
  at buggy_37.sol(490)

[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD14);
  > |        owner_TOD14.transfer(reward_TOD14);
    |        reward_TOD14 = msg.value;
    |    }
  at buggy_37.sol(556)

[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD14);
    |        claimed_TOD14 = true;
    |    }
  at buggy_37.sol(564)

[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD30);
  > |        owner_TOD30.transfer(reward_TOD30);
    |        reward_TOD30 = msg.value;
    |    }
  at buggy_37.sol(587)

[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD30);
    |        claimed_TOD30 = true;
    |    }
  at buggy_37.sol(595)

[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD8);
  > |        owner_TOD8.transfer(reward_TOD8);
    |        reward_TOD8 = msg.value;
    |    }
  at buggy_37.sol(620)

[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD8);
    |        claimed_TOD8 = true;
    |    }
  at buggy_37.sol(628)

[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD36);
  > |        owner_TOD36.transfer(reward_TOD36);
    |        reward_TOD36 = msg.value;
    |    }
  at buggy_37.sol(678)

[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_37.sol(686)

[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD40);
  > |        owner_TOD40.transfer(reward_TOD40);
    |        reward_TOD40 = msg.value;
    |    }
  at buggy_37.sol(730)

[31mViolation[0m for DAOConstantGas in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_37.sol(738)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD2);
  > |        owner_TOD2.transfer(reward_TOD2);
    |        reward_TOD2 = msg.value;
    |    }
  at buggy_37.sol(71)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD2);
    |        claimed_TOD2 = true;
    |    }
  at buggy_37.sol(79)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD26);
  > |        owner_TOD26.transfer(reward_TOD26);
    |        reward_TOD26 = msg.value;
    |    }
  at buggy_37.sol(185)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD26);
    |        claimed_TOD26 = true;
    |    }
  at buggy_37.sol(193)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_37.sol(314)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_37.sol(322)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_37.sol(341)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_37.sol(349)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_37.sol(365)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_37.sol(373)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD28);
  > |        owner_TOD28.transfer(reward_TOD28);
    |        reward_TOD28 = msg.value;
    |    }
  at buggy_37.sol(391)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD28);
    |        claimed_TOD28 = true;
    |    }
  at buggy_37.sol(399)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD34);
  > |        owner_TOD34.transfer(reward_TOD34);
    |        reward_TOD34 = msg.value;
    |    }
  at buggy_37.sol(410)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD34);
    |        claimed_TOD34 = true;
    |    }
  at buggy_37.sol(418)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD10);
  > |        owner_TOD10.transfer(reward_TOD10);
    |        reward_TOD10 = msg.value;
    |    }
  at buggy_37.sol(443)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD10);
    |        claimed_TOD10 = true;
    |    }
  at buggy_37.sol(451)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD22);
  > |        owner_TOD22.transfer(reward_TOD22);
    |        reward_TOD22 = msg.value;
    |    }
  at buggy_37.sol(463)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD22);
    |        claimed_TOD22 = true;
    |    }
  at buggy_37.sol(471)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD12);
  > |        owner_TOD12.transfer(reward_TOD12);
    |        reward_TOD12 = msg.value;
    |    }
  at buggy_37.sol(482)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD12);
    |        claimed_TOD12 = true;
    |    }
  at buggy_37.sol(490)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD14);
  > |        owner_TOD14.transfer(reward_TOD14);
    |        reward_TOD14 = msg.value;
    |    }
  at buggy_37.sol(556)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD14);
    |        claimed_TOD14 = true;
    |    }
  at buggy_37.sol(564)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD30);
  > |        owner_TOD30.transfer(reward_TOD30);
    |        reward_TOD30 = msg.value;
    |    }
  at buggy_37.sol(587)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD30);
    |        claimed_TOD30 = true;
    |    }
  at buggy_37.sol(595)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD8);
  > |        owner_TOD8.transfer(reward_TOD8);
    |        reward_TOD8 = msg.value;
    |    }
  at buggy_37.sol(620)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD8);
    |        claimed_TOD8 = true;
    |    }
  at buggy_37.sol(628)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD36);
  > |        owner_TOD36.transfer(reward_TOD36);
    |        reward_TOD36 = msg.value;
    |    }
  at buggy_37.sol(678)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_37.sol(686)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD40);
  > |        owner_TOD40.transfer(reward_TOD40);
    |        reward_TOD40 = msg.value;
    |    }
  at buggy_37.sol(730)

[31mViolation[0m for TODAmount in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_37.sol(738)

[33mWarning[0m for TODAmount in contract 'AugustCoin':
    |function getReward_TOD11() payable public{
    |     
  > |       winner_TOD11.transfer(msg.value);
    |    }
    |    function safeSub(uint a, uint b) public pure returns (uint c) {
  at buggy_37.sol(41)

[33mWarning[0m for TODAmount in contract 'AugustCoin':
    |function getReward_TOD1() payable public{
    |     
  > |       winner_TOD1.transfer(msg.value);
    |    }
    |    function safeMul(uint a, uint b) public pure returns (uint c) {
  at buggy_37.sol(58)

[33mWarning[0m for TODAmount in contract 'AugustCoin':
    |function getReward_TOD17() payable public{
    |     
  > |       winner_TOD17.transfer(msg.value);
    |    }
    |}
  at buggy_37.sol(97)

[33mWarning[0m for TODAmount in contract 'AugustCoin':
    |function getReward_TOD37() payable public{
    |     
  > |       winner_TOD37.transfer(msg.value);
    |    }
    |    function balanceOf(address tokenOwner) public view returns (uint balance);
  at buggy_37.sol(119)

[33mWarning[0m for TODAmount in contract 'AugustCoin':
    |function getReward_TOD3() payable public{
    |     
  > |       winner_TOD3.transfer(msg.value);
    |    }
    |    function allowance(address tokenOwner, address spender) public view returns (uint remaining);
  at buggy_37.sol(133)

[33mWarning[0m for TODAmount in contract 'AugustCoin':
    |function getReward_TOD9() payable public{
    |     
  > |       winner_TOD9.transfer(msg.value);
    |    }
    |    function transfer(address to, uint tokens) public returns (bool success);
  at buggy_37.sol(147)

[33mWarning[0m for TODAmount in contract 'AugustCoin':
    |function getReward_TOD25() payable public{
    |     
  > |       winner_TOD25.transfer(msg.value);
    |    }
    |    function approve(address spender, uint tokens) public returns (bool success);
  at buggy_37.sol(161)

[33mWarning[0m for TODAmount in contract 'AugustCoin':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |    function transferFrom(address from, address to, uint tokens) public returns (bool success);
  at buggy_37.sol(175)

[33mWarning[0m for TODAmount in contract 'AugustCoin':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |  event Transfer(address indexed from, address indexed to, uint tokens);
  at buggy_37.sol(208)

[33mWarning[0m for TODAmount in contract 'AugustCoin':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event Approval(address indexed tokenOwner, address indexed spender, uint tokens);
  at buggy_37.sol(222)

[33mWarning[0m for TODAmount in contract 'AugustCoin':
    |function getReward_TOD5() payable public{
    |     
  > |       winner_TOD5.transfer(msg.value);
    |    }
    |  address public owner;
  at buggy_37.sol(271)

[33mWarning[0m for TODAmount in contract 'AugustCoin':
    |function getReward_TOD15() payable public{
    |     
  > |       winner_TOD15.transfer(msg.value);
    |    }
    |  address public newOwner;
  at buggy_37.sol(285)

[33mWarning[0m for TODAmount in contract 'AugustCoin':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event OwnershipTransferred(address indexed _from, address indexed _to);
  at buggy_37.sol(300)

[33mWarning[0m for TODAmount in contract 'AugustCoin':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |  uint8 public decimals;
  at buggy_37.sol(433)

[33mWarning[0m for TODAmount in contract 'AugustCoin':
    |function getReward_TOD7() payable public{
    |     
  > |       winner_TOD7.transfer(msg.value);
    |    }
    |
  at buggy_37.sol(518)

[33mWarning[0m for TODAmount in contract 'AugustCoin':
    |function getReward_TOD23() payable public{
    |     
  > |       winner_TOD23.transfer(msg.value);
    |    }
    |
  at buggy_37.sol(539)

[33mWarning[0m for TODAmount in contract 'AugustCoin':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |
  at buggy_37.sol(660)

[33mWarning[0m for TODAmount in contract 'AugustCoin':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |
  at buggy_37.sol(713)

[33mWarning[0m for TODAmount in contract 'AugustCoin':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |}
  at buggy_37.sol(760)

[31mViolation[0m for TODReceiver in contract 'AugustCoin':
    |function getReward_TOD11() payable public{
    |     
  > |       winner_TOD11.transfer(msg.value);
    |    }
    |    function safeSub(uint a, uint b) public pure returns (uint c) {
  at buggy_37.sol(41)

[31mViolation[0m for TODReceiver in contract 'AugustCoin':
    |function getReward_TOD1() payable public{
    |     
  > |       winner_TOD1.transfer(msg.value);
    |    }
    |    function safeMul(uint a, uint b) public pure returns (uint c) {
  at buggy_37.sol(58)

[31mViolation[0m for TODReceiver in contract 'AugustCoin':
    |function getReward_TOD17() payable public{
    |     
  > |       winner_TOD17.transfer(msg.value);
    |    }
    |}
  at buggy_37.sol(97)

[31mViolation[0m for TODReceiver in contract 'AugustCoin':
    |function getReward_TOD37() payable public{
    |     
  > |       winner_TOD37.transfer(msg.value);
    |    }
    |    function balanceOf(address tokenOwner) public view returns (uint balance);
  at buggy_37.sol(119)

[31mViolation[0m for TODReceiver in contract 'AugustCoin':
    |function getReward_TOD3() payable public{
    |     
  > |       winner_TOD3.transfer(msg.value);
    |    }
    |    function allowance(address tokenOwner, address spender) public view returns (uint remaining);
  at buggy_37.sol(133)

[31mViolation[0m for TODReceiver in contract 'AugustCoin':
    |function getReward_TOD9() payable public{
    |     
  > |       winner_TOD9.transfer(msg.value);
    |    }
    |    function transfer(address to, uint tokens) public returns (bool success);
  at buggy_37.sol(147)

[31mViolation[0m for TODReceiver in contract 'AugustCoin':
    |function getReward_TOD25() payable public{
    |     
  > |       winner_TOD25.transfer(msg.value);
    |    }
    |    function approve(address spender, uint tokens) public returns (bool success);
  at buggy_37.sol(161)

[31mViolation[0m for TODReceiver in contract 'AugustCoin':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |    function transferFrom(address from, address to, uint tokens) public returns (bool success);
  at buggy_37.sol(175)

[31mViolation[0m for TODReceiver in contract 'AugustCoin':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |  event Transfer(address indexed from, address indexed to, uint tokens);
  at buggy_37.sol(208)

[31mViolation[0m for TODReceiver in contract 'AugustCoin':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event Approval(address indexed tokenOwner, address indexed spender, uint tokens);
  at buggy_37.sol(222)

[31mViolation[0m for TODReceiver in contract 'AugustCoin':
    |function getReward_TOD5() payable public{
    |     
  > |       winner_TOD5.transfer(msg.value);
    |    }
    |  address public owner;
  at buggy_37.sol(271)

[31mViolation[0m for TODReceiver in contract 'AugustCoin':
    |function getReward_TOD15() payable public{
    |     
  > |       winner_TOD15.transfer(msg.value);
    |    }
    |  address public newOwner;
  at buggy_37.sol(285)

[31mViolation[0m for TODReceiver in contract 'AugustCoin':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event OwnershipTransferred(address indexed _from, address indexed _to);
  at buggy_37.sol(300)

[31mViolation[0m for TODReceiver in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_37.sol(341)

[31mViolation[0m for TODReceiver in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_37.sol(365)

[31mViolation[0m for TODReceiver in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD34);
  > |        owner_TOD34.transfer(reward_TOD34);
    |        reward_TOD34 = msg.value;
    |    }
  at buggy_37.sol(410)

[31mViolation[0m for TODReceiver in contract 'AugustCoin':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |  uint8 public decimals;
  at buggy_37.sol(433)

[31mViolation[0m for TODReceiver in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD22);
  > |        owner_TOD22.transfer(reward_TOD22);
    |        reward_TOD22 = msg.value;
    |    }
  at buggy_37.sol(463)

[31mViolation[0m for TODReceiver in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD12);
  > |        owner_TOD12.transfer(reward_TOD12);
    |        reward_TOD12 = msg.value;
    |    }
  at buggy_37.sol(482)

[31mViolation[0m for TODReceiver in contract 'AugustCoin':
    |function getReward_TOD7() payable public{
    |     
  > |       winner_TOD7.transfer(msg.value);
    |    }
    |
  at buggy_37.sol(518)

[31mViolation[0m for TODReceiver in contract 'AugustCoin':
    |function getReward_TOD23() payable public{
    |     
  > |       winner_TOD23.transfer(msg.value);
    |    }
    |
  at buggy_37.sol(539)

[31mViolation[0m for TODReceiver in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD30);
  > |        owner_TOD30.transfer(reward_TOD30);
    |        reward_TOD30 = msg.value;
    |    }
  at buggy_37.sol(587)

[31mViolation[0m for TODReceiver in contract 'AugustCoin':
    |
    |        require(msg.sender == owner_TOD8);
  > |        owner_TOD8.transfer(reward_TOD8);
    |        reward_TOD8 = msg.value;
    |    }
  at buggy_37.sol(620)

[31mViolation[0m for TODReceiver in contract 'AugustCoin':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |
  at buggy_37.sol(660)

[31mViolation[0m for TODReceiver in contract 'AugustCoin':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |
  at buggy_37.sol(713)

[31mViolation[0m for TODReceiver in contract 'AugustCoin':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |}
  at buggy_37.sol(760)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |function getReward_TOD11() payable public{
    |     
  > |       winner_TOD11.transfer(msg.value);
    |    }
    |    function safeSub(uint a, uint b) public pure returns (uint c) {
  at buggy_37.sol(41)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |function getReward_TOD1() payable public{
    |     
  > |       winner_TOD1.transfer(msg.value);
    |    }
    |    function safeMul(uint a, uint b) public pure returns (uint c) {
  at buggy_37.sol(58)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD2);
    |        claimed_TOD2 = true;
    |    }
  at buggy_37.sol(79)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |function getReward_TOD17() payable public{
    |     
  > |       winner_TOD17.transfer(msg.value);
    |    }
    |}
  at buggy_37.sol(97)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |function getReward_TOD37() payable public{
    |     
  > |       winner_TOD37.transfer(msg.value);
    |    }
    |    function balanceOf(address tokenOwner) public view returns (uint balance);
  at buggy_37.sol(119)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |function getReward_TOD3() payable public{
    |     
  > |       winner_TOD3.transfer(msg.value);
    |    }
    |    function allowance(address tokenOwner, address spender) public view returns (uint remaining);
  at buggy_37.sol(133)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |function getReward_TOD9() payable public{
    |     
  > |       winner_TOD9.transfer(msg.value);
    |    }
    |    function transfer(address to, uint tokens) public returns (bool success);
  at buggy_37.sol(147)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |function getReward_TOD25() payable public{
    |     
  > |       winner_TOD25.transfer(msg.value);
    |    }
    |    function approve(address spender, uint tokens) public returns (bool success);
  at buggy_37.sol(161)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |    function transferFrom(address from, address to, uint tokens) public returns (bool success);
  at buggy_37.sol(175)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD26);
    |        claimed_TOD26 = true;
    |    }
  at buggy_37.sol(193)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |  event Transfer(address indexed from, address indexed to, uint tokens);
  at buggy_37.sol(208)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event Approval(address indexed tokenOwner, address indexed spender, uint tokens);
  at buggy_37.sol(222)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |function getReward_TOD5() payable public{
    |     
  > |       winner_TOD5.transfer(msg.value);
    |    }
    |  address public owner;
  at buggy_37.sol(271)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |function getReward_TOD15() payable public{
    |     
  > |       winner_TOD15.transfer(msg.value);
    |    }
    |  address public newOwner;
  at buggy_37.sol(285)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event OwnershipTransferred(address indexed _from, address indexed _to);
  at buggy_37.sol(300)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_37.sol(322)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_37.sol(349)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_37.sol(373)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD28);
    |        claimed_TOD28 = true;
    |    }
  at buggy_37.sol(399)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD34);
    |        claimed_TOD34 = true;
    |    }
  at buggy_37.sol(418)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |  uint8 public decimals;
  at buggy_37.sol(433)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD10);
    |        claimed_TOD10 = true;
    |    }
  at buggy_37.sol(451)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD22);
    |        claimed_TOD22 = true;
    |    }
  at buggy_37.sol(471)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD12);
    |        claimed_TOD12 = true;
    |    }
  at buggy_37.sol(490)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |function getReward_TOD7() payable public{
    |     
  > |       winner_TOD7.transfer(msg.value);
    |    }
    |
  at buggy_37.sol(518)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |function getReward_TOD23() payable public{
    |     
  > |       winner_TOD23.transfer(msg.value);
    |    }
    |
  at buggy_37.sol(539)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD14);
    |        claimed_TOD14 = true;
    |    }
  at buggy_37.sol(564)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD30);
    |        claimed_TOD30 = true;
    |    }
  at buggy_37.sol(595)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD8);
    |        claimed_TOD8 = true;
    |    }
  at buggy_37.sol(628)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |
  at buggy_37.sol(660)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_37.sol(686)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |
  at buggy_37.sol(713)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_37.sol(738)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AugustCoin':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |}
  at buggy_37.sol(760)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD11 = msg.sender;
    |        }
    |    }
  at buggy_37.sol(35)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD1 = msg.sender;
    |        }
    |    }
  at buggy_37.sol(52)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |
    |        msg.sender.transfer(reward_TOD2);
  > |        claimed_TOD2 = true;
    |    }
    |    function safeDiv(uint a, uint b) public pure returns (uint c) {
  at buggy_37.sol(80)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD17 = msg.sender;
    |        }
    |    }
  at buggy_37.sol(91)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD37 = msg.sender;
    |        }
    |    }
  at buggy_37.sol(113)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD3 = msg.sender;
    |        }
    |    }
  at buggy_37.sol(127)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD9 = msg.sender;
    |        }
    |    }
  at buggy_37.sol(141)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD25 = msg.sender;
    |        }
    |    }
  at buggy_37.sol(155)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD19 = msg.sender;
    |        }
    |    }
  at buggy_37.sol(169)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |
    |        msg.sender.transfer(reward_TOD26);
  > |        claimed_TOD26 = true;
    |    }
    |
  at buggy_37.sol(194)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD27 = msg.sender;
    |        }
    |    }
  at buggy_37.sol(202)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD31 = msg.sender;
    |        }
    |    }
  at buggy_37.sol(216)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD5 = msg.sender;
    |        }
    |    }
  at buggy_37.sol(265)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD15 = msg.sender;
    |        }
    |    }
  at buggy_37.sol(279)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD13 = msg.sender;
    |        }
    |    }
  at buggy_37.sol(294)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |
    |        msg.sender.transfer(reward_TOD32);
  > |        claimed_TOD32 = true;
    |    }
    |
  at buggy_37.sol(323)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |
    |        msg.sender.transfer(reward_TOD38);
  > |        claimed_TOD38 = true;
    |    }
    |    function acceptOwnership() public {
  at buggy_37.sol(350)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |
    |        msg.sender.transfer(reward_TOD4);
  > |        claimed_TOD4 = true;
    |    }
    |}
  at buggy_37.sol(374)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |
    |        msg.sender.transfer(reward_TOD28);
  > |        claimed_TOD28 = true;
    |    }
    |  string public symbol;
  at buggy_37.sol(400)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |
    |        msg.sender.transfer(reward_TOD34);
  > |        claimed_TOD34 = true;
    |    }
    |  string public  name;
  at buggy_37.sol(419)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD21 = msg.sender;
    |        }
    |    }
  at buggy_37.sol(427)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |
    |        msg.sender.transfer(reward_TOD10);
  > |        claimed_TOD10 = true;
    |    }
    |  uint public _totalSupply;
  at buggy_37.sol(452)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |
    |        msg.sender.transfer(reward_TOD22);
  > |        claimed_TOD22 = true;
    |    }
    |  mapping(address => uint) balances;
  at buggy_37.sol(472)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |
    |        msg.sender.transfer(reward_TOD12);
  > |        claimed_TOD12 = true;
    |    }
    |  mapping(address => mapping(address => uint)) allowed;
  at buggy_37.sol(491)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD7 = msg.sender;
    |        }
    |    }
  at buggy_37.sol(512)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD23 = msg.sender;
    |        }
    |    }
  at buggy_37.sol(533)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |
    |        msg.sender.transfer(reward_TOD14);
  > |        claimed_TOD14 = true;
    |    }
    |
  at buggy_37.sol(565)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |    function transfer(address to, uint tokens) public returns (bool success) {
    |        balances[msg.sender] = safeSub(balances[msg.sender], tokens);
  > |        balances[to] = safeAdd(balances[to], tokens);
    |        emit Transfer(msg.sender, to, tokens);
    |        return true;
  at buggy_37.sol(576)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |
    |        msg.sender.transfer(reward_TOD30);
  > |        claimed_TOD30 = true;
    |    }
    |
  at buggy_37.sol(596)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |
    |        msg.sender.transfer(reward_TOD8);
  > |        claimed_TOD8 = true;
    |    }
    |
  at buggy_37.sol(629)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |    // ------------------------------------------------------------------------
    |    function transferFrom(address from, address to, uint tokens) public returns (bool success) {
  > |        balances[from] = safeSub(balances[from], tokens);
    |        allowed[from][msg.sender] = safeSub(allowed[from][msg.sender], tokens);
    |        balances[to] = safeAdd(balances[to], tokens);
  at buggy_37.sol(643)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |        balances[from] = safeSub(balances[from], tokens);
    |        allowed[from][msg.sender] = safeSub(allowed[from][msg.sender], tokens);
  > |        balances[to] = safeAdd(balances[to], tokens);
    |        emit Transfer(from, to, tokens);
    |        return true;
  at buggy_37.sol(645)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD39 = msg.sender;
    |        }
    |    }
  at buggy_37.sol(654)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |
    |        msg.sender.transfer(reward_TOD36);
  > |        claimed_TOD36 = true;
    |    }
    |
  at buggy_37.sol(687)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD35 = msg.sender;
    |        }
    |    }
  at buggy_37.sol(707)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |
    |        msg.sender.transfer(reward_TOD40);
  > |        claimed_TOD40 = true;
    |    }
    |
  at buggy_37.sol(739)

[31mViolation[0m for UnrestrictedWrite in contract 'AugustCoin':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD33 = msg.sender;
    |        }
    |    }
  at buggy_37.sol(754)

[33mWarning[0m for UnrestrictedWrite in contract 'AugustCoin':
    |        require(msg.sender == owner_TOD2);
    |        owner_TOD2.transfer(reward_TOD2);
  > |        reward_TOD2 = msg.value;
    |    }
    |
  at buggy_37.sol(72)

[33mWarning[0m for UnrestrictedWrite in contract 'AugustCoin':
    |        require(msg.sender == owner_TOD26);
    |        owner_TOD26.transfer(reward_TOD26);
  > |        reward_TOD26 = msg.value;
    |    }
    |
  at buggy_37.sol(186)

[33mWarning[0m for UnrestrictedWrite in contract 'AugustCoin':
    |        require(msg.sender == owner_TOD32);
    |        owner_TOD32.transfer(reward_TOD32);
  > |        reward_TOD32 = msg.value;
    |    }
    |
  at buggy_37.sol(315)

[33mWarning[0m for UnrestrictedWrite in contract 'AugustCoin':
    |
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |bool claimed_TOD38 = false;
  at buggy_37.sol(332)

[33mWarning[0m for UnrestrictedWrite in contract 'AugustCoin':
    |        require(msg.sender == owner_TOD38);
    |        owner_TOD38.transfer(reward_TOD38);
  > |        reward_TOD38 = msg.value;
    |    }
    |
  at buggy_37.sol(342)

[33mWarning[0m for UnrestrictedWrite in contract 'AugustCoin':
    |        require(msg.sender == newOwner);
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |        newOwner = address(0);
    |    }
  at buggy_37.sol(355)

[33mWarning[0m for UnrestrictedWrite in contract 'AugustCoin':
    |        emit OwnershipTransferred(owner, newOwner);
    |        owner = newOwner;
  > |        newOwner = address(0);
    |    }
    |bool claimed_TOD4 = false;
  at buggy_37.sol(356)

[33mWarning[0m for UnrestrictedWrite in contract 'AugustCoin':
    |        require(msg.sender == owner_TOD4);
    |        owner_TOD4.transfer(reward_TOD4);
  > |        reward_TOD4 = msg.value;
    |    }
    |
  at buggy_37.sol(366)

[33mWarning[0m for UnrestrictedWrite in contract 'AugustCoin':
    |        require(msg.sender == owner_TOD28);
    |        owner_TOD28.transfer(reward_TOD28);
  > |        reward_TOD28 = msg.value;
    |    }
    |
  at buggy_37.sol(392)

[33mWarning[0m for UnrestrictedWrite in contract 'AugustCoin':
    |        require(msg.sender == owner_TOD34);
    |        owner_TOD34.transfer(reward_TOD34);
  > |        reward_TOD34 = msg.value;
    |    }
    |
  at buggy_37.sol(411)

[33mWarning[0m for UnrestrictedWrite in contract 'AugustCoin':
    |        require(msg.sender == owner_TOD10);
    |        owner_TOD10.transfer(reward_TOD10);
  > |        reward_TOD10 = msg.value;
    |    }
    |
  at buggy_37.sol(444)

[33mWarning[0m for UnrestrictedWrite in contract 'AugustCoin':
    |        require(msg.sender == owner_TOD22);
    |        owner_TOD22.transfer(reward_TOD22);
  > |        reward_TOD22 = msg.value;
    |    }
    |
  at buggy_37.sol(464)

[33mWarning[0m for UnrestrictedWrite in contract 'AugustCoin':
    |        require(msg.sender == owner_TOD12);
    |        owner_TOD12.transfer(reward_TOD12);
  > |        reward_TOD12 = msg.value;
    |    }
    |
  at buggy_37.sol(483)

[33mWarning[0m for UnrestrictedWrite in contract 'AugustCoin':
    |        require(msg.sender == owner_TOD14);
    |        owner_TOD14.transfer(reward_TOD14);
  > |        reward_TOD14 = msg.value;
    |    }
    |
  at buggy_37.sol(557)

[33mWarning[0m for UnrestrictedWrite in contract 'AugustCoin':
    |        require(msg.sender == owner_TOD30);
    |        owner_TOD30.transfer(reward_TOD30);
  > |        reward_TOD30 = msg.value;
    |    }
    |
  at buggy_37.sol(588)

[33mWarning[0m for UnrestrictedWrite in contract 'AugustCoin':
    |        require(msg.sender == owner_TOD8);
    |        owner_TOD8.transfer(reward_TOD8);
  > |        reward_TOD8 = msg.value;
    |    }
    |
  at buggy_37.sol(621)

[33mWarning[0m for UnrestrictedWrite in contract 'AugustCoin':
    |        require(msg.sender == owner_TOD36);
    |        owner_TOD36.transfer(reward_TOD36);
  > |        reward_TOD36 = msg.value;
    |    }
    |
  at buggy_37.sol(679)

[33mWarning[0m for UnrestrictedWrite in contract 'AugustCoin':
    |        require(msg.sender == owner_TOD40);
    |        owner_TOD40.transfer(reward_TOD40);
  > |        reward_TOD40 = msg.value;
    |    }
    |
  at buggy_37.sol(731)

[31mViolation[0m for DAOConstantGas in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_37.sol(314)

[31mViolation[0m for DAOConstantGas in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_37.sol(322)

[31mViolation[0m for DAOConstantGas in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_37.sol(341)

[31mViolation[0m for DAOConstantGas in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_37.sol(349)

[31mViolation[0m for DAOConstantGas in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_37.sol(365)

[31mViolation[0m for DAOConstantGas in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_37.sol(373)

[31mViolation[0m for TODAmount in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_37.sol(314)

[31mViolation[0m for TODAmount in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_37.sol(322)

[31mViolation[0m for TODAmount in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_37.sol(341)

[31mViolation[0m for TODAmount in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_37.sol(349)

[31mViolation[0m for TODAmount in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_37.sol(365)

[31mViolation[0m for TODAmount in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_37.sol(373)

[33mWarning[0m for TODAmount in contract 'Owned':
    |function getReward_TOD5() payable public{
    |     
  > |       winner_TOD5.transfer(msg.value);
    |    }
    |  address public owner;
  at buggy_37.sol(271)

[33mWarning[0m for TODAmount in contract 'Owned':
    |function getReward_TOD15() payable public{
    |     
  > |       winner_TOD15.transfer(msg.value);
    |    }
    |  address public newOwner;
  at buggy_37.sol(285)

[33mWarning[0m for TODAmount in contract 'Owned':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event OwnershipTransferred(address indexed _from, address indexed _to);
  at buggy_37.sol(300)

[31mViolation[0m for TODReceiver in contract 'Owned':
    |function getReward_TOD5() payable public{
    |     
  > |       winner_TOD5.transfer(msg.value);
    |    }
    |  address public owner;
  at buggy_37.sol(271)

[31mViolation[0m for TODReceiver in contract 'Owned':
    |function getReward_TOD15() payable public{
    |     
  > |       winner_TOD15.transfer(msg.value);
    |    }
    |  address public newOwner;
  at buggy_37.sol(285)

[31mViolation[0m for TODReceiver in contract 'Owned':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event OwnershipTransferred(address indexed _from, address indexed _to);
  at buggy_37.sol(300)

[31mViolation[0m for TODReceiver in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_37.sol(341)

[31mViolation[0m for TODReceiver in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_37.sol(365)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Owned':
    |function getReward_TOD5() payable public{
    |     
  > |       winner_TOD5.transfer(msg.value);
    |    }
    |  address public owner;
  at buggy_37.sol(271)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Owned':
    |function getReward_TOD15() payable public{
    |     
  > |       winner_TOD15.transfer(msg.value);
    |    }
    |  address public newOwner;
  at buggy_37.sol(285)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Owned':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event OwnershipTransferred(address indexed _from, address indexed _to);
  at buggy_37.sol(300)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_37.sol(322)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_37.sol(349)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_37.sol(373)

[31mViolation[0m for UnrestrictedWrite in contract 'Owned':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD5 = msg.sender;
    |        }
    |    }
  at buggy_37.sol(265)

[31mViolation[0m for UnrestrictedWrite in contract 'Owned':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD15 = msg.sender;
    |        }
    |    }
  at buggy_37.sol(279)

[31mViolation[0m for UnrestrictedWrite in contract 'Owned':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD13 = msg.sender;
    |        }
    |    }
  at buggy_37.sol(294)

[31mViolation[0m for UnrestrictedWrite in contract 'Owned':
    |
    |        msg.sender.transfer(reward_TOD32);
  > |        claimed_TOD32 = true;
    |    }
    |
  at buggy_37.sol(323)

[31mViolation[0m for UnrestrictedWrite in contract 'Owned':
    |
    |        msg.sender.transfer(reward_TOD38);
  > |        claimed_TOD38 = true;
    |    }
    |    function acceptOwnership() public {
  at buggy_37.sol(350)

[31mViolation[0m for UnrestrictedWrite in contract 'Owned':
    |
    |        msg.sender.transfer(reward_TOD4);
  > |        claimed_TOD4 = true;
    |    }
    |}
  at buggy_37.sol(374)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(msg.sender == owner_TOD32);
    |        owner_TOD32.transfer(reward_TOD32);
  > |        reward_TOD32 = msg.value;
    |    }
    |
  at buggy_37.sol(315)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |bool claimed_TOD38 = false;
  at buggy_37.sol(332)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(msg.sender == owner_TOD38);
    |        owner_TOD38.transfer(reward_TOD38);
  > |        reward_TOD38 = msg.value;
    |    }
    |
  at buggy_37.sol(342)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(msg.sender == newOwner);
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |        newOwner = address(0);
    |    }
  at buggy_37.sol(355)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        emit OwnershipTransferred(owner, newOwner);
    |        owner = newOwner;
  > |        newOwner = address(0);
    |    }
    |bool claimed_TOD4 = false;
  at buggy_37.sol(356)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(msg.sender == owner_TOD4);
    |        owner_TOD4.transfer(reward_TOD4);
  > |        reward_TOD4 = msg.value;
    |    }
    |
  at buggy_37.sol(366)

[31mViolation[0m for DAOConstantGas in contract 'SafeMath':
    |
    |        require(msg.sender == owner_TOD2);
  > |        owner_TOD2.transfer(reward_TOD2);
    |        reward_TOD2 = msg.value;
    |    }
  at buggy_37.sol(71)

[31mViolation[0m for DAOConstantGas in contract 'SafeMath':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD2);
    |        claimed_TOD2 = true;
    |    }
  at buggy_37.sol(79)

[31mViolation[0m for TODAmount in contract 'SafeMath':
    |
    |        require(msg.sender == owner_TOD2);
  > |        owner_TOD2.transfer(reward_TOD2);
    |        reward_TOD2 = msg.value;
    |    }
  at buggy_37.sol(71)

[31mViolation[0m for TODAmount in contract 'SafeMath':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD2);
    |        claimed_TOD2 = true;
    |    }
  at buggy_37.sol(79)

[33mWarning[0m for TODAmount in contract 'SafeMath':
    |function getReward_TOD11() payable public{
    |     
  > |       winner_TOD11.transfer(msg.value);
    |    }
    |    function safeSub(uint a, uint b) public pure returns (uint c) {
  at buggy_37.sol(41)

[33mWarning[0m for TODAmount in contract 'SafeMath':
    |function getReward_TOD1() payable public{
    |     
  > |       winner_TOD1.transfer(msg.value);
    |    }
    |    function safeMul(uint a, uint b) public pure returns (uint c) {
  at buggy_37.sol(58)

[33mWarning[0m for TODAmount in contract 'SafeMath':
    |function getReward_TOD17() payable public{
    |     
  > |       winner_TOD17.transfer(msg.value);
    |    }
    |}
  at buggy_37.sol(97)

[31mViolation[0m for TODReceiver in contract 'SafeMath':
    |function getReward_TOD11() payable public{
    |     
  > |       winner_TOD11.transfer(msg.value);
    |    }
    |    function safeSub(uint a, uint b) public pure returns (uint c) {
  at buggy_37.sol(41)

[31mViolation[0m for TODReceiver in contract 'SafeMath':
    |function getReward_TOD1() payable public{
    |     
  > |       winner_TOD1.transfer(msg.value);
    |    }
    |    function safeMul(uint a, uint b) public pure returns (uint c) {
  at buggy_37.sol(58)

[31mViolation[0m for TODReceiver in contract 'SafeMath':
    |function getReward_TOD17() payable public{
    |     
  > |       winner_TOD17.transfer(msg.value);
    |    }
    |}
  at buggy_37.sol(97)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'SafeMath':
    |function getReward_TOD11() payable public{
    |     
  > |       winner_TOD11.transfer(msg.value);
    |    }
    |    function safeSub(uint a, uint b) public pure returns (uint c) {
  at buggy_37.sol(41)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'SafeMath':
    |function getReward_TOD1() payable public{
    |     
  > |       winner_TOD1.transfer(msg.value);
    |    }
    |    function safeMul(uint a, uint b) public pure returns (uint c) {
  at buggy_37.sol(58)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'SafeMath':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD2);
    |        claimed_TOD2 = true;
    |    }
  at buggy_37.sol(79)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'SafeMath':
    |function getReward_TOD17() payable public{
    |     
  > |       winner_TOD17.transfer(msg.value);
    |    }
    |}
  at buggy_37.sol(97)

[31mViolation[0m for UnrestrictedWrite in contract 'SafeMath':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD11 = msg.sender;
    |        }
    |    }
  at buggy_37.sol(35)

[31mViolation[0m for UnrestrictedWrite in contract 'SafeMath':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD1 = msg.sender;
    |        }
    |    }
  at buggy_37.sol(52)

[31mViolation[0m for UnrestrictedWrite in contract 'SafeMath':
    |
    |        msg.sender.transfer(reward_TOD2);
  > |        claimed_TOD2 = true;
    |    }
    |    function safeDiv(uint a, uint b) public pure returns (uint c) {
  at buggy_37.sol(80)

[31mViolation[0m for UnrestrictedWrite in contract 'SafeMath':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD17 = msg.sender;
    |        }
    |    }
  at buggy_37.sol(91)

[33mWarning[0m for UnrestrictedWrite in contract 'SafeMath':
    |        require(msg.sender == owner_TOD2);
    |        owner_TOD2.transfer(reward_TOD2);
  > |        reward_TOD2 = msg.value;
    |    }
    |
  at buggy_37.sol(72)

