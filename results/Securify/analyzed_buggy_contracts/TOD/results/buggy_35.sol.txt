Processing contract: buggy_35.sol:BitpayerDEX
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_35.sol:ERC20Essential
Processing contract: buggy_35.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_35.sol:owned
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for DAOConstantGas in contract 'owned':
    |
    |        require(msg.sender == owner_TOD28);
  > |        owner_TOD28.transfer(reward_TOD28);
    |        reward_TOD28 = msg.value;
    |    }
  at buggy_35.sol(157)

[31mViolation[0m for DAOConstantGas in contract 'owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD28);
    |        claimed_TOD28 = true;
    |    }
  at buggy_35.sol(165)

[31mViolation[0m for DAOConstantGas in contract 'owned':
    |
    |        require(msg.sender == owner_TOD36);
  > |        owner_TOD36.transfer(reward_TOD36);
    |        reward_TOD36 = msg.value;
    |    }
  at buggy_35.sol(178)

[31mViolation[0m for DAOConstantGas in contract 'owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_35.sol(186)

[31mViolation[0m for DAOConstantGas in contract 'owned':
    |
    |        require(msg.sender == owner_TOD2);
  > |        owner_TOD2.transfer(reward_TOD2);
    |        reward_TOD2 = msg.value;
    |    }
  at buggy_35.sol(224)

[31mViolation[0m for DAOConstantGas in contract 'owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD2);
    |        claimed_TOD2 = true;
    |    }
  at buggy_35.sol(232)

[31mViolation[0m for TODAmount in contract 'owned':
    |
    |        require(msg.sender == owner_TOD28);
  > |        owner_TOD28.transfer(reward_TOD28);
    |        reward_TOD28 = msg.value;
    |    }
  at buggy_35.sol(157)

[31mViolation[0m for TODAmount in contract 'owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD28);
    |        claimed_TOD28 = true;
    |    }
  at buggy_35.sol(165)

[31mViolation[0m for TODAmount in contract 'owned':
    |
    |        require(msg.sender == owner_TOD36);
  > |        owner_TOD36.transfer(reward_TOD36);
    |        reward_TOD36 = msg.value;
    |    }
  at buggy_35.sol(178)

[31mViolation[0m for TODAmount in contract 'owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_35.sol(186)

[31mViolation[0m for TODAmount in contract 'owned':
    |
    |        require(msg.sender == owner_TOD2);
  > |        owner_TOD2.transfer(reward_TOD2);
    |        reward_TOD2 = msg.value;
    |    }
  at buggy_35.sol(224)

[31mViolation[0m for TODAmount in contract 'owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD2);
    |        claimed_TOD2 = true;
    |    }
  at buggy_35.sol(232)

[33mWarning[0m for TODAmount in contract 'owned':
    |function getReward_TOD15() payable public{
    |     
  > |       winner_TOD15.transfer(msg.value);
    |    }
    |  address public owner;
  at buggy_35.sol(147)

[33mWarning[0m for TODAmount in contract 'owned':
    |function getReward_TOD1() payable public{
    |     
  > |       winner_TOD1.transfer(msg.value);
    |    }
    |
  at buggy_35.sol(205)

[33mWarning[0m for TODAmount in contract 'owned':
    |function getReward_TOD17() payable public{
    |     
  > |       winner_TOD17.transfer(msg.value);
    |    }
    |}
  at buggy_35.sol(254)

[31mViolation[0m for TODReceiver in contract 'owned':
    |function getReward_TOD15() payable public{
    |     
  > |       winner_TOD15.transfer(msg.value);
    |    }
    |  address public owner;
  at buggy_35.sol(147)

[31mViolation[0m for TODReceiver in contract 'owned':
    |function getReward_TOD1() payable public{
    |     
  > |       winner_TOD1.transfer(msg.value);
    |    }
    |
  at buggy_35.sol(205)

[31mViolation[0m for TODReceiver in contract 'owned':
    |function getReward_TOD17() payable public{
    |     
  > |       winner_TOD17.transfer(msg.value);
    |    }
    |}
  at buggy_35.sol(254)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'owned':
    |function getReward_TOD15() payable public{
    |     
  > |       winner_TOD15.transfer(msg.value);
    |    }
    |  address public owner;
  at buggy_35.sol(147)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD28);
    |        claimed_TOD28 = true;
    |    }
  at buggy_35.sol(165)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_35.sol(186)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'owned':
    |function getReward_TOD1() payable public{
    |     
  > |       winner_TOD1.transfer(msg.value);
    |    }
    |
  at buggy_35.sol(205)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD2);
    |        claimed_TOD2 = true;
    |    }
  at buggy_35.sol(232)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'owned':
    |function getReward_TOD17() payable public{
    |     
  > |       winner_TOD17.transfer(msg.value);
    |    }
    |}
  at buggy_35.sol(254)

[31mViolation[0m for UnrestrictedWrite in contract 'owned':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD15 = msg.sender;
    |        }
    |    }
  at buggy_35.sol(141)

[31mViolation[0m for UnrestrictedWrite in contract 'owned':
    |
    |        msg.sender.transfer(reward_TOD28);
  > |        claimed_TOD28 = true;
    |    }
    |  address private newOwner;
  at buggy_35.sol(166)

[31mViolation[0m for UnrestrictedWrite in contract 'owned':
    |
    |        msg.sender.transfer(reward_TOD36);
  > |        claimed_TOD36 = true;
    |    }
    |  event OwnershipTransferred(uint256 curTime, address indexed _from, address indexed _to);
  at buggy_35.sol(187)

[31mViolation[0m for UnrestrictedWrite in contract 'owned':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD1 = msg.sender;
    |        }
    |    }
  at buggy_35.sol(199)

[31mViolation[0m for UnrestrictedWrite in contract 'owned':
    |
    |        msg.sender.transfer(reward_TOD2);
  > |        claimed_TOD2 = true;
    |    }
    |
  at buggy_35.sol(233)

[31mViolation[0m for UnrestrictedWrite in contract 'owned':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD17 = msg.sender;
    |        }
    |    }
  at buggy_35.sol(248)

[33mWarning[0m for UnrestrictedWrite in contract 'owned':
    |        require(msg.sender == owner_TOD28);
    |        owner_TOD28.transfer(reward_TOD28);
  > |        reward_TOD28 = msg.value;
    |    }
    |
  at buggy_35.sol(158)

[33mWarning[0m for UnrestrictedWrite in contract 'owned':
    |        require(msg.sender == owner_TOD36);
    |        owner_TOD36.transfer(reward_TOD36);
  > |        reward_TOD36 = msg.value;
    |    }
    |
  at buggy_35.sol(179)

[33mWarning[0m for UnrestrictedWrite in contract 'owned':
    |
    |    function onlyOwnerTransferOwnership(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |bool claimed_TOD2 = false;
  at buggy_35.sol(215)

[33mWarning[0m for UnrestrictedWrite in contract 'owned':
    |        require(msg.sender == owner_TOD2);
    |        owner_TOD2.transfer(reward_TOD2);
  > |        reward_TOD2 = msg.value;
    |    }
    |
  at buggy_35.sol(225)

[33mWarning[0m for UnrestrictedWrite in contract 'owned':
    |        require(msg.sender == newOwner);
    |        emit OwnershipTransferred(now, owner, newOwner);
  > |        owner = newOwner;
    |        newOwner = address(0);
    |    }
  at buggy_35.sol(240)

[33mWarning[0m for UnrestrictedWrite in contract 'owned':
    |        emit OwnershipTransferred(now, owner, newOwner);
    |        owner = newOwner;
  > |        newOwner = address(0);
    |    }
    |address payable winner_TOD17;
  at buggy_35.sol(241)

