Processing contract: buggy_48.sol:ApproveAndCallFallBack
Processing contract: buggy_48.sol:ERC20Interface
Processing contract: buggy_48.sol:Owned
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_48.sol:QurasToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_48.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for DAOConstantGas in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD34);
  > |        owner_TOD34.transfer(reward_TOD34);
    |        reward_TOD34 = msg.value;
    |    }
  at buggy_48.sol(202)

[31mViolation[0m for DAOConstantGas in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD34);
    |        claimed_TOD34 = true;
    |    }
  at buggy_48.sol(210)

[31mViolation[0m for DAOConstantGas in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD20);
  > |        owner_TOD20.transfer(reward_TOD20);
    |        reward_TOD20 = msg.value;
    |    }
  at buggy_48.sol(254)

[31mViolation[0m for DAOConstantGas in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD20);
    |        claimed_TOD20 = true;
    |    }
  at buggy_48.sol(262)

[31mViolation[0m for DAOConstantGas in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_48.sol(281)

[31mViolation[0m for DAOConstantGas in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_48.sol(289)

[31mViolation[0m for DAOConstantGas in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_48.sol(305)

[31mViolation[0m for DAOConstantGas in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_48.sol(313)

[31mViolation[0m for TODAmount in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD34);
  > |        owner_TOD34.transfer(reward_TOD34);
    |        reward_TOD34 = msg.value;
    |    }
  at buggy_48.sol(202)

[31mViolation[0m for TODAmount in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD34);
    |        claimed_TOD34 = true;
    |    }
  at buggy_48.sol(210)

[31mViolation[0m for TODAmount in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD20);
  > |        owner_TOD20.transfer(reward_TOD20);
    |        reward_TOD20 = msg.value;
    |    }
  at buggy_48.sol(254)

[31mViolation[0m for TODAmount in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD20);
    |        claimed_TOD20 = true;
    |    }
  at buggy_48.sol(262)

[31mViolation[0m for TODAmount in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_48.sol(281)

[31mViolation[0m for TODAmount in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_48.sol(289)

[31mViolation[0m for TODAmount in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_48.sol(305)

[31mViolation[0m for TODAmount in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_48.sol(313)

[33mWarning[0m for TODAmount in contract 'Owned':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |  address public newOwner;
  at buggy_48.sol(225)

[33mWarning[0m for TODAmount in contract 'Owned':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event OwnershipTransferred(address indexed _from, address indexed _to);
  at buggy_48.sol(240)

[31mViolation[0m for TODReceiver in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD34);
  > |        owner_TOD34.transfer(reward_TOD34);
    |        reward_TOD34 = msg.value;
    |    }
  at buggy_48.sol(202)

[31mViolation[0m for TODReceiver in contract 'Owned':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |  address public newOwner;
  at buggy_48.sol(225)

[31mViolation[0m for TODReceiver in contract 'Owned':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event OwnershipTransferred(address indexed _from, address indexed _to);
  at buggy_48.sol(240)

[31mViolation[0m for TODReceiver in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_48.sol(281)

[31mViolation[0m for TODReceiver in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_48.sol(305)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD34);
    |        claimed_TOD34 = true;
    |    }
  at buggy_48.sol(210)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Owned':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |  address public newOwner;
  at buggy_48.sol(225)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Owned':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event OwnershipTransferred(address indexed _from, address indexed _to);
  at buggy_48.sol(240)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD20);
    |        claimed_TOD20 = true;
    |    }
  at buggy_48.sol(262)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_48.sol(289)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_48.sol(313)

[31mViolation[0m for UnrestrictedWrite in contract 'Owned':
    |
    |        msg.sender.transfer(reward_TOD34);
  > |        claimed_TOD34 = true;
    |    }
    |  address public owner;
  at buggy_48.sol(211)

[31mViolation[0m for UnrestrictedWrite in contract 'Owned':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD21 = msg.sender;
    |        }
    |    }
  at buggy_48.sol(219)

[31mViolation[0m for UnrestrictedWrite in contract 'Owned':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD13 = msg.sender;
    |        }
    |    }
  at buggy_48.sol(234)

[31mViolation[0m for UnrestrictedWrite in contract 'Owned':
    |
    |        msg.sender.transfer(reward_TOD20);
  > |        claimed_TOD20 = true;
    |    }
    |
  at buggy_48.sol(263)

[31mViolation[0m for UnrestrictedWrite in contract 'Owned':
    |
    |        msg.sender.transfer(reward_TOD32);
  > |        claimed_TOD32 = true;
    |    }
    |    function acceptOwnership() public {
  at buggy_48.sol(290)

[31mViolation[0m for UnrestrictedWrite in contract 'Owned':
    |
    |        msg.sender.transfer(reward_TOD38);
  > |        claimed_TOD38 = true;
    |    }
    |}
  at buggy_48.sol(314)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(msg.sender == owner_TOD34);
    |        owner_TOD34.transfer(reward_TOD34);
  > |        reward_TOD34 = msg.value;
    |    }
    |
  at buggy_48.sol(203)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(msg.sender == owner_TOD20);
    |        owner_TOD20.transfer(reward_TOD20);
  > |        reward_TOD20 = msg.value;
    |    }
    |
  at buggy_48.sol(255)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |bool claimed_TOD32 = false;
  at buggy_48.sol(272)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(msg.sender == owner_TOD32);
    |        owner_TOD32.transfer(reward_TOD32);
  > |        reward_TOD32 = msg.value;
    |    }
    |
  at buggy_48.sol(282)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(msg.sender == newOwner);
    |        emit OwnershipTransferred(owner, newOwner);	//add emit : compiler version up
  > |        owner = newOwner;
    |        newOwner = address(0);
    |    }
  at buggy_48.sol(295)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        emit OwnershipTransferred(owner, newOwner);	//add emit : compiler version up
    |        owner = newOwner;
  > |        newOwner = address(0);
    |    }
    |bool claimed_TOD38 = false;
  at buggy_48.sol(296)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(msg.sender == owner_TOD38);
    |        owner_TOD38.transfer(reward_TOD38);
  > |        reward_TOD38 = msg.value;
    |    }
    |
  at buggy_48.sol(306)

[31mViolation[0m for DAOConstantGas in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD34);
  > |        owner_TOD34.transfer(reward_TOD34);
    |        reward_TOD34 = msg.value;
    |    }
  at buggy_48.sol(202)

[31mViolation[0m for DAOConstantGas in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD34);
    |        claimed_TOD34 = true;
    |    }
  at buggy_48.sol(210)

[31mViolation[0m for DAOConstantGas in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD20);
  > |        owner_TOD20.transfer(reward_TOD20);
    |        reward_TOD20 = msg.value;
    |    }
  at buggy_48.sol(254)

[31mViolation[0m for DAOConstantGas in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD20);
    |        claimed_TOD20 = true;
    |    }
  at buggy_48.sol(262)

[31mViolation[0m for DAOConstantGas in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_48.sol(281)

[31mViolation[0m for DAOConstantGas in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_48.sol(289)

[31mViolation[0m for DAOConstantGas in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_48.sol(305)

[31mViolation[0m for DAOConstantGas in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_48.sol(313)

[31mViolation[0m for DAOConstantGas in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD10);
  > |        owner_TOD10.transfer(reward_TOD10);
    |        reward_TOD10 = msg.value;
    |    }
  at buggy_48.sol(333)

[31mViolation[0m for DAOConstantGas in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD10);
    |        claimed_TOD10 = true;
    |    }
  at buggy_48.sol(341)

[31mViolation[0m for DAOConstantGas in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD22);
  > |        owner_TOD22.transfer(reward_TOD22);
    |        reward_TOD22 = msg.value;
    |    }
  at buggy_48.sol(352)

[31mViolation[0m for DAOConstantGas in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD22);
    |        claimed_TOD22 = true;
    |    }
  at buggy_48.sol(360)

[31mViolation[0m for DAOConstantGas in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD12);
  > |        owner_TOD12.transfer(reward_TOD12);
    |        reward_TOD12 = msg.value;
    |    }
  at buggy_48.sol(371)

[31mViolation[0m for DAOConstantGas in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD12);
    |        claimed_TOD12 = true;
    |    }
  at buggy_48.sol(379)

[31mViolation[0m for DAOConstantGas in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD2);
  > |        owner_TOD2.transfer(reward_TOD2);
    |        reward_TOD2 = msg.value;
    |    }
  at buggy_48.sol(419)

[31mViolation[0m for DAOConstantGas in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD2);
    |        claimed_TOD2 = true;
    |    }
  at buggy_48.sol(427)

[31mViolation[0m for DAOConstantGas in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_48.sol(451)

[31mViolation[0m for DAOConstantGas in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_48.sol(459)

[31mViolation[0m for DAOConstantGas in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD14);
  > |        owner_TOD14.transfer(reward_TOD14);
    |        reward_TOD14 = msg.value;
    |    }
  at buggy_48.sol(524)

[31mViolation[0m for DAOConstantGas in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD14);
    |        claimed_TOD14 = true;
    |    }
  at buggy_48.sol(532)

[31mViolation[0m for DAOConstantGas in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD30);
  > |        owner_TOD30.transfer(reward_TOD30);
    |        reward_TOD30 = msg.value;
    |    }
  at buggy_48.sol(549)

[31mViolation[0m for DAOConstantGas in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD30);
    |        claimed_TOD30 = true;
    |    }
  at buggy_48.sol(557)

[31mViolation[0m for DAOConstantGas in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD8);
  > |        owner_TOD8.transfer(reward_TOD8);
    |        reward_TOD8 = msg.value;
    |    }
  at buggy_48.sol(578)

[31mViolation[0m for DAOConstantGas in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD8);
    |        claimed_TOD8 = true;
    |    }
  at buggy_48.sol(586)

[31mViolation[0m for DAOConstantGas in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD36);
  > |        owner_TOD36.transfer(reward_TOD36);
    |        reward_TOD36 = msg.value;
    |    }
  at buggy_48.sol(642)

[31mViolation[0m for DAOConstantGas in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_48.sol(650)

[31mViolation[0m for DAOConstantGas in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD40);
  > |        owner_TOD40.transfer(reward_TOD40);
    |        reward_TOD40 = msg.value;
    |    }
  at buggy_48.sol(695)

[31mViolation[0m for DAOConstantGas in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_48.sol(703)

[31mViolation[0m for TODAmount in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD34);
  > |        owner_TOD34.transfer(reward_TOD34);
    |        reward_TOD34 = msg.value;
    |    }
  at buggy_48.sol(202)

[31mViolation[0m for TODAmount in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD34);
    |        claimed_TOD34 = true;
    |    }
  at buggy_48.sol(210)

[31mViolation[0m for TODAmount in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD20);
  > |        owner_TOD20.transfer(reward_TOD20);
    |        reward_TOD20 = msg.value;
    |    }
  at buggy_48.sol(254)

[31mViolation[0m for TODAmount in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD20);
    |        claimed_TOD20 = true;
    |    }
  at buggy_48.sol(262)

[31mViolation[0m for TODAmount in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_48.sol(281)

[31mViolation[0m for TODAmount in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_48.sol(289)

[31mViolation[0m for TODAmount in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_48.sol(305)

[31mViolation[0m for TODAmount in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_48.sol(313)

[31mViolation[0m for TODAmount in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD10);
  > |        owner_TOD10.transfer(reward_TOD10);
    |        reward_TOD10 = msg.value;
    |    }
  at buggy_48.sol(333)

[31mViolation[0m for TODAmount in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD10);
    |        claimed_TOD10 = true;
    |    }
  at buggy_48.sol(341)

[31mViolation[0m for TODAmount in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD22);
  > |        owner_TOD22.transfer(reward_TOD22);
    |        reward_TOD22 = msg.value;
    |    }
  at buggy_48.sol(352)

[31mViolation[0m for TODAmount in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD22);
    |        claimed_TOD22 = true;
    |    }
  at buggy_48.sol(360)

[31mViolation[0m for TODAmount in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD12);
  > |        owner_TOD12.transfer(reward_TOD12);
    |        reward_TOD12 = msg.value;
    |    }
  at buggy_48.sol(371)

[31mViolation[0m for TODAmount in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD12);
    |        claimed_TOD12 = true;
    |    }
  at buggy_48.sol(379)

[31mViolation[0m for TODAmount in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD2);
  > |        owner_TOD2.transfer(reward_TOD2);
    |        reward_TOD2 = msg.value;
    |    }
  at buggy_48.sol(419)

[31mViolation[0m for TODAmount in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD2);
    |        claimed_TOD2 = true;
    |    }
  at buggy_48.sol(427)

[31mViolation[0m for TODAmount in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_48.sol(451)

[31mViolation[0m for TODAmount in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_48.sol(459)

[31mViolation[0m for TODAmount in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD14);
  > |        owner_TOD14.transfer(reward_TOD14);
    |        reward_TOD14 = msg.value;
    |    }
  at buggy_48.sol(524)

[31mViolation[0m for TODAmount in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD14);
    |        claimed_TOD14 = true;
    |    }
  at buggy_48.sol(532)

[31mViolation[0m for TODAmount in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD30);
  > |        owner_TOD30.transfer(reward_TOD30);
    |        reward_TOD30 = msg.value;
    |    }
  at buggy_48.sol(549)

[31mViolation[0m for TODAmount in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD30);
    |        claimed_TOD30 = true;
    |    }
  at buggy_48.sol(557)

[31mViolation[0m for TODAmount in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD8);
  > |        owner_TOD8.transfer(reward_TOD8);
    |        reward_TOD8 = msg.value;
    |    }
  at buggy_48.sol(578)

[31mViolation[0m for TODAmount in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD8);
    |        claimed_TOD8 = true;
    |    }
  at buggy_48.sol(586)

[31mViolation[0m for TODAmount in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD36);
  > |        owner_TOD36.transfer(reward_TOD36);
    |        reward_TOD36 = msg.value;
    |    }
  at buggy_48.sol(642)

[31mViolation[0m for TODAmount in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_48.sol(650)

[31mViolation[0m for TODAmount in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD40);
  > |        owner_TOD40.transfer(reward_TOD40);
    |        reward_TOD40 = msg.value;
    |    }
  at buggy_48.sol(695)

[31mViolation[0m for TODAmount in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_48.sol(703)

[33mWarning[0m for TODAmount in contract 'QurasToken':
    |function getReward_TOD17() payable public{
    |     
  > |       winner_TOD17.transfer(msg.value);
    |    }							//constant -> view : compiler version up
    |    function balanceOf(address tokenOwner) public view returns (uint balance);
  at buggy_48.sol(59)

[33mWarning[0m for TODAmount in contract 'QurasToken':
    |function getReward_TOD37() payable public{
    |     
  > |       winner_TOD37.transfer(msg.value);
    |    }				//constant -> view : compiler version up
    |    function allowance(address tokenOwner, address spender) public view returns (uint remaining);
  at buggy_48.sol(73)

[33mWarning[0m for TODAmount in contract 'QurasToken':
    |function getReward_TOD3() payable public{
    |     
  > |       winner_TOD3.transfer(msg.value);
    |    }	//constant -> view : compiler version up
    |    function transfer(address to, uint tokens) public returns (bool success);
  at buggy_48.sol(87)

[33mWarning[0m for TODAmount in contract 'QurasToken':
    |function getReward_TOD9() payable public{
    |     
  > |       winner_TOD9.transfer(msg.value);
    |    }
    |    function approve(address spender, uint tokens) public returns (bool success);
  at buggy_48.sol(101)

[33mWarning[0m for TODAmount in contract 'QurasToken':
    |function getReward_TOD25() payable public{
    |     
  > |       winner_TOD25.transfer(msg.value);
    |    }
    |    function transferFrom(address from, address to, uint tokens) public returns (bool success);
  at buggy_48.sol(115)

[33mWarning[0m for TODAmount in contract 'QurasToken':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |
  at buggy_48.sol(129)

[33mWarning[0m for TODAmount in contract 'QurasToken':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |  event Transfer(address indexed from, address indexed to, uint tokens);
  at buggy_48.sol(143)

[33mWarning[0m for TODAmount in contract 'QurasToken':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event Approval(address indexed tokenOwner, address indexed spender, uint tokens);
  at buggy_48.sol(157)

[33mWarning[0m for TODAmount in contract 'QurasToken':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |  address public newOwner;
  at buggy_48.sol(225)

[33mWarning[0m for TODAmount in contract 'QurasToken':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event OwnershipTransferred(address indexed _from, address indexed _to);
  at buggy_48.sol(240)

[33mWarning[0m for TODAmount in contract 'QurasToken':
    |function getReward_TOD11() payable public{
    |     
  > |       winner_TOD11.transfer(msg.value);
    |    }
    |  uint _totalSupply;			//unit public -> uint : compiler version up
  at buggy_48.sol(394)

[33mWarning[0m for TODAmount in contract 'QurasToken':
    |function getReward_TOD1() payable public{
    |     
  > |       winner_TOD1.transfer(msg.value);
    |    }
    |  mapping(address => uint) balances;
  at buggy_48.sol(409)

[33mWarning[0m for TODAmount in contract 'QurasToken':
    |function getReward_TOD7() payable public{
    |     
  > |       winner_TOD7.transfer(msg.value);
    |    }
    |
  at buggy_48.sol(481)

[33mWarning[0m for TODAmount in contract 'QurasToken':
    |function getReward_TOD23() payable public{
    |     
  > |       winner_TOD23.transfer(msg.value);
    |    }
    |
  at buggy_48.sol(502)

[33mWarning[0m for TODAmount in contract 'QurasToken':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |
  at buggy_48.sol(615)

[33mWarning[0m for TODAmount in contract 'QurasToken':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |
  at buggy_48.sol(673)

[33mWarning[0m for TODAmount in contract 'QurasToken':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |}
  at buggy_48.sol(725)

[31mViolation[0m for TODReceiver in contract 'QurasToken':
    |function getReward_TOD17() payable public{
    |     
  > |       winner_TOD17.transfer(msg.value);
    |    }							//constant -> view : compiler version up
    |    function balanceOf(address tokenOwner) public view returns (uint balance);
  at buggy_48.sol(59)

[31mViolation[0m for TODReceiver in contract 'QurasToken':
    |function getReward_TOD37() payable public{
    |     
  > |       winner_TOD37.transfer(msg.value);
    |    }				//constant -> view : compiler version up
    |    function allowance(address tokenOwner, address spender) public view returns (uint remaining);
  at buggy_48.sol(73)

[31mViolation[0m for TODReceiver in contract 'QurasToken':
    |function getReward_TOD3() payable public{
    |     
  > |       winner_TOD3.transfer(msg.value);
    |    }	//constant -> view : compiler version up
    |    function transfer(address to, uint tokens) public returns (bool success);
  at buggy_48.sol(87)

[31mViolation[0m for TODReceiver in contract 'QurasToken':
    |function getReward_TOD9() payable public{
    |     
  > |       winner_TOD9.transfer(msg.value);
    |    }
    |    function approve(address spender, uint tokens) public returns (bool success);
  at buggy_48.sol(101)

[31mViolation[0m for TODReceiver in contract 'QurasToken':
    |function getReward_TOD25() payable public{
    |     
  > |       winner_TOD25.transfer(msg.value);
    |    }
    |    function transferFrom(address from, address to, uint tokens) public returns (bool success);
  at buggy_48.sol(115)

[31mViolation[0m for TODReceiver in contract 'QurasToken':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |
  at buggy_48.sol(129)

[31mViolation[0m for TODReceiver in contract 'QurasToken':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |  event Transfer(address indexed from, address indexed to, uint tokens);
  at buggy_48.sol(143)

[31mViolation[0m for TODReceiver in contract 'QurasToken':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event Approval(address indexed tokenOwner, address indexed spender, uint tokens);
  at buggy_48.sol(157)

[31mViolation[0m for TODReceiver in contract 'QurasToken':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |  address public newOwner;
  at buggy_48.sol(225)

[31mViolation[0m for TODReceiver in contract 'QurasToken':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event OwnershipTransferred(address indexed _from, address indexed _to);
  at buggy_48.sol(240)

[31mViolation[0m for TODReceiver in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_48.sol(281)

[31mViolation[0m for TODReceiver in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_48.sol(305)

[31mViolation[0m for TODReceiver in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD10);
  > |        owner_TOD10.transfer(reward_TOD10);
    |        reward_TOD10 = msg.value;
    |    }
  at buggy_48.sol(333)

[31mViolation[0m for TODReceiver in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD22);
  > |        owner_TOD22.transfer(reward_TOD22);
    |        reward_TOD22 = msg.value;
    |    }
  at buggy_48.sol(352)

[31mViolation[0m for TODReceiver in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD12);
  > |        owner_TOD12.transfer(reward_TOD12);
    |        reward_TOD12 = msg.value;
    |    }
  at buggy_48.sol(371)

[31mViolation[0m for TODReceiver in contract 'QurasToken':
    |function getReward_TOD11() payable public{
    |     
  > |       winner_TOD11.transfer(msg.value);
    |    }
    |  uint _totalSupply;			//unit public -> uint : compiler version up
  at buggy_48.sol(394)

[31mViolation[0m for TODReceiver in contract 'QurasToken':
    |function getReward_TOD1() payable public{
    |     
  > |       winner_TOD1.transfer(msg.value);
    |    }
    |  mapping(address => uint) balances;
  at buggy_48.sol(409)

[31mViolation[0m for TODReceiver in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD2);
  > |        owner_TOD2.transfer(reward_TOD2);
    |        reward_TOD2 = msg.value;
    |    }
  at buggy_48.sol(419)

[31mViolation[0m for TODReceiver in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_48.sol(451)

[31mViolation[0m for TODReceiver in contract 'QurasToken':
    |function getReward_TOD7() payable public{
    |     
  > |       winner_TOD7.transfer(msg.value);
    |    }
    |
  at buggy_48.sol(481)

[31mViolation[0m for TODReceiver in contract 'QurasToken':
    |function getReward_TOD23() payable public{
    |     
  > |       winner_TOD23.transfer(msg.value);
    |    }
    |
  at buggy_48.sol(502)

[31mViolation[0m for TODReceiver in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD30);
  > |        owner_TOD30.transfer(reward_TOD30);
    |        reward_TOD30 = msg.value;
    |    }
  at buggy_48.sol(549)

[31mViolation[0m for TODReceiver in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD8);
  > |        owner_TOD8.transfer(reward_TOD8);
    |        reward_TOD8 = msg.value;
    |    }
  at buggy_48.sol(578)

[31mViolation[0m for TODReceiver in contract 'QurasToken':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |
  at buggy_48.sol(615)

[31mViolation[0m for TODReceiver in contract 'QurasToken':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |
  at buggy_48.sol(673)

[31mViolation[0m for TODReceiver in contract 'QurasToken':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |}
  at buggy_48.sol(725)

[33mWarning[0m for TODReceiver in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD34);
  > |        owner_TOD34.transfer(reward_TOD34);
    |        reward_TOD34 = msg.value;
    |    }
  at buggy_48.sol(202)

[33mWarning[0m for TODReceiver in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD20);
  > |        owner_TOD20.transfer(reward_TOD20);
    |        reward_TOD20 = msg.value;
    |    }
  at buggy_48.sol(254)

[33mWarning[0m for TODReceiver in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD14);
  > |        owner_TOD14.transfer(reward_TOD14);
    |        reward_TOD14 = msg.value;
    |    }
  at buggy_48.sol(524)

[33mWarning[0m for TODReceiver in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD36);
  > |        owner_TOD36.transfer(reward_TOD36);
    |        reward_TOD36 = msg.value;
    |    }
  at buggy_48.sol(642)

[33mWarning[0m for TODReceiver in contract 'QurasToken':
    |
    |        require(msg.sender == owner_TOD40);
  > |        owner_TOD40.transfer(reward_TOD40);
    |        reward_TOD40 = msg.value;
    |    }
  at buggy_48.sol(695)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |function getReward_TOD17() payable public{
    |     
  > |       winner_TOD17.transfer(msg.value);
    |    }							//constant -> view : compiler version up
    |    function balanceOf(address tokenOwner) public view returns (uint balance);
  at buggy_48.sol(59)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |function getReward_TOD37() payable public{
    |     
  > |       winner_TOD37.transfer(msg.value);
    |    }				//constant -> view : compiler version up
    |    function allowance(address tokenOwner, address spender) public view returns (uint remaining);
  at buggy_48.sol(73)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |function getReward_TOD3() payable public{
    |     
  > |       winner_TOD3.transfer(msg.value);
    |    }	//constant -> view : compiler version up
    |    function transfer(address to, uint tokens) public returns (bool success);
  at buggy_48.sol(87)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |function getReward_TOD9() payable public{
    |     
  > |       winner_TOD9.transfer(msg.value);
    |    }
    |    function approve(address spender, uint tokens) public returns (bool success);
  at buggy_48.sol(101)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |function getReward_TOD25() payable public{
    |     
  > |       winner_TOD25.transfer(msg.value);
    |    }
    |    function transferFrom(address from, address to, uint tokens) public returns (bool success);
  at buggy_48.sol(115)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |
  at buggy_48.sol(129)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |  event Transfer(address indexed from, address indexed to, uint tokens);
  at buggy_48.sol(143)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event Approval(address indexed tokenOwner, address indexed spender, uint tokens);
  at buggy_48.sol(157)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD34);
    |        claimed_TOD34 = true;
    |    }
  at buggy_48.sol(210)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |  address public newOwner;
  at buggy_48.sol(225)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event OwnershipTransferred(address indexed _from, address indexed _to);
  at buggy_48.sol(240)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD20);
    |        claimed_TOD20 = true;
    |    }
  at buggy_48.sol(262)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_48.sol(289)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_48.sol(313)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD10);
    |        claimed_TOD10 = true;
    |    }
  at buggy_48.sol(341)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD22);
    |        claimed_TOD22 = true;
    |    }
  at buggy_48.sol(360)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD12);
    |        claimed_TOD12 = true;
    |    }
  at buggy_48.sol(379)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |function getReward_TOD11() payable public{
    |     
  > |       winner_TOD11.transfer(msg.value);
    |    }
    |  uint _totalSupply;			//unit public -> uint : compiler version up
  at buggy_48.sol(394)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |function getReward_TOD1() payable public{
    |     
  > |       winner_TOD1.transfer(msg.value);
    |    }
    |  mapping(address => uint) balances;
  at buggy_48.sol(409)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD2);
    |        claimed_TOD2 = true;
    |    }
  at buggy_48.sol(427)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_48.sol(459)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |function getReward_TOD7() payable public{
    |     
  > |       winner_TOD7.transfer(msg.value);
    |    }
    |
  at buggy_48.sol(481)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |function getReward_TOD23() payable public{
    |     
  > |       winner_TOD23.transfer(msg.value);
    |    }
    |
  at buggy_48.sol(502)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD14);
    |        claimed_TOD14 = true;
    |    }
  at buggy_48.sol(532)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD30);
    |        claimed_TOD30 = true;
    |    }
  at buggy_48.sol(557)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD8);
    |        claimed_TOD8 = true;
    |    }
  at buggy_48.sol(586)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |
  at buggy_48.sol(615)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_48.sol(650)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |
  at buggy_48.sol(673)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_48.sol(703)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'QurasToken':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |}
  at buggy_48.sol(725)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD17 = msg.sender;
    |        }
    |    }
  at buggy_48.sol(53)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD37 = msg.sender;
    |        }
    |    }
  at buggy_48.sol(67)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD3 = msg.sender;
    |        }
    |    }
  at buggy_48.sol(81)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD9 = msg.sender;
    |        }
    |    }
  at buggy_48.sol(95)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD25 = msg.sender;
    |        }
    |    }
  at buggy_48.sol(109)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD19 = msg.sender;
    |        }
    |    }
  at buggy_48.sol(123)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD27 = msg.sender;
    |        }
    |    }
  at buggy_48.sol(137)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD31 = msg.sender;
    |        }
    |    }
  at buggy_48.sol(151)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |
    |        msg.sender.transfer(reward_TOD34);
  > |        claimed_TOD34 = true;
    |    }
    |  address public owner;
  at buggy_48.sol(211)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD21 = msg.sender;
    |        }
    |    }
  at buggy_48.sol(219)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD13 = msg.sender;
    |        }
    |    }
  at buggy_48.sol(234)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |
    |        msg.sender.transfer(reward_TOD20);
  > |        claimed_TOD20 = true;
    |    }
    |
  at buggy_48.sol(263)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |
    |        msg.sender.transfer(reward_TOD32);
  > |        claimed_TOD32 = true;
    |    }
    |    function acceptOwnership() public {
  at buggy_48.sol(290)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |
    |        msg.sender.transfer(reward_TOD38);
  > |        claimed_TOD38 = true;
    |    }
    |}
  at buggy_48.sol(314)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |
    |        msg.sender.transfer(reward_TOD10);
  > |        claimed_TOD10 = true;
    |    }
    |  string public symbol;
  at buggy_48.sol(342)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |
    |        msg.sender.transfer(reward_TOD22);
  > |        claimed_TOD22 = true;
    |    }
    |  string public  name;
  at buggy_48.sol(361)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |
    |        msg.sender.transfer(reward_TOD12);
  > |        claimed_TOD12 = true;
    |    }
    |  uint8 public decimals;
  at buggy_48.sol(380)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD11 = msg.sender;
    |        }
    |    }
  at buggy_48.sol(388)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD1 = msg.sender;
    |        }
    |    }
  at buggy_48.sol(403)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |
    |        msg.sender.transfer(reward_TOD2);
  > |        claimed_TOD2 = true;
    |    }
    |  mapping(address => mapping(address => uint)) allowed;
  at buggy_48.sol(428)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |
    |        msg.sender.transfer(reward_TOD4);
  > |        claimed_TOD4 = true;
    |    }
    |
  at buggy_48.sol(460)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD7 = msg.sender;
    |        }
    |    }
  at buggy_48.sol(475)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD23 = msg.sender;
    |        }
    |    }
  at buggy_48.sol(496)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |    function transfer(address to, uint tokens) public returns (bool success) {
    |        balances[msg.sender] = balances[msg.sender].sub(tokens);
  > |        balances[to] = balances[to].add(tokens);
    |        emit Transfer(msg.sender, to, tokens);		//add emit : compiler version up
    |        return true;
  at buggy_48.sol(513)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |
    |        msg.sender.transfer(reward_TOD14);
  > |        claimed_TOD14 = true;
    |    }
    |
  at buggy_48.sol(533)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |
    |        msg.sender.transfer(reward_TOD30);
  > |        claimed_TOD30 = true;
    |    }
    |    
  at buggy_48.sol(558)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |
    |        msg.sender.transfer(reward_TOD8);
  > |        claimed_TOD8 = true;
    |    }
    |    
  at buggy_48.sol(587)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD39 = msg.sender;
    |        }
    |    }
  at buggy_48.sol(609)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |    // ------------------------------------------------------------------------
    |    function transferFrom(address from, address to, uint tokens) public returns (bool success) {
  > |        balances[from] = balances[from].sub(tokens);
    |        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);
    |        balances[to] = balances[to].add(tokens);
  at buggy_48.sol(629)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |        balances[from] = balances[from].sub(tokens);
    |        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);
  > |        balances[to] = balances[to].add(tokens);
    |        emit Transfer(from, to, tokens);		//add emit : compiler version up
    |        return true;
  at buggy_48.sol(631)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |
    |        msg.sender.transfer(reward_TOD36);
  > |        claimed_TOD36 = true;
    |    }
    |
  at buggy_48.sol(651)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD35 = msg.sender;
    |        }
    |    }
  at buggy_48.sol(667)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |
    |        msg.sender.transfer(reward_TOD40);
  > |        claimed_TOD40 = true;
    |    }
    |
  at buggy_48.sol(704)

[33mWarning[0m for UnrestrictedWrite in contract 'QurasToken':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD33 = msg.sender;
    |        }
    |    }
  at buggy_48.sol(719)

