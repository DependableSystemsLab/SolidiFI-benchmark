Processing contract: buggy_10.sol:DocumentSigner
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for DAOConstantGas in contract 'DocumentSigner':
    |
    |        require(msg.sender == owner_TOD36);
  > |        owner_TOD36.transfer(reward_TOD36);
    |        reward_TOD36 = msg.value;
    |    }
  at buggy_10.sol(29)

[31mViolation[0m for DAOConstantGas in contract 'DocumentSigner':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_10.sol(37)

[31mViolation[0m for DAOConstantGas in contract 'DocumentSigner':
    |
    |        require(msg.sender == owner_TOD40);
  > |        owner_TOD40.transfer(reward_TOD40);
    |        reward_TOD40 = msg.value;
    |    }
  at buggy_10.sol(111)

[31mViolation[0m for DAOConstantGas in contract 'DocumentSigner':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_10.sol(119)

[31mViolation[0m for TODAmount in contract 'DocumentSigner':
    |
    |        require(msg.sender == owner_TOD36);
  > |        owner_TOD36.transfer(reward_TOD36);
    |        reward_TOD36 = msg.value;
    |    }
  at buggy_10.sol(29)

[31mViolation[0m for TODAmount in contract 'DocumentSigner':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_10.sol(37)

[31mViolation[0m for TODAmount in contract 'DocumentSigner':
    |
    |        require(msg.sender == owner_TOD40);
  > |        owner_TOD40.transfer(reward_TOD40);
    |        reward_TOD40 = msg.value;
    |    }
  at buggy_10.sol(111)

[31mViolation[0m for TODAmount in contract 'DocumentSigner':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_10.sol(119)

[33mWarning[0m for TODAmount in contract 'DocumentSigner':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |  mapping(bytes32=>string) public docs;
  at buggy_10.sol(19)

[33mWarning[0m for TODAmount in contract 'DocumentSigner':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event Sign(bytes32 indexed _doc, address indexed _signer);
  at buggy_10.sol(58)

[33mWarning[0m for TODAmount in contract 'DocumentSigner':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event NewDocument(bytes32 _docHash);
  at buggy_10.sol(72)

[33mWarning[0m for TODAmount in contract 'DocumentSigner':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |
  at buggy_10.sol(94)

[33mWarning[0m for TODAmount in contract 'DocumentSigner':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |    
  at buggy_10.sol(138)

[33mWarning[0m for TODAmount in contract 'DocumentSigner':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |}
  at buggy_10.sol(155)

[31mViolation[0m for TODReceiver in contract 'DocumentSigner':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |  mapping(bytes32=>string) public docs;
  at buggy_10.sol(19)

[31mViolation[0m for TODReceiver in contract 'DocumentSigner':
    |
    |        require(msg.sender == owner_TOD36);
  > |        owner_TOD36.transfer(reward_TOD36);
    |        reward_TOD36 = msg.value;
    |    }
  at buggy_10.sol(29)

[31mViolation[0m for TODReceiver in contract 'DocumentSigner':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event Sign(bytes32 indexed _doc, address indexed _signer);
  at buggy_10.sol(58)

[31mViolation[0m for TODReceiver in contract 'DocumentSigner':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event NewDocument(bytes32 _docHash);
  at buggy_10.sol(72)

[31mViolation[0m for TODReceiver in contract 'DocumentSigner':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |
  at buggy_10.sol(94)

[31mViolation[0m for TODReceiver in contract 'DocumentSigner':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |    
  at buggy_10.sol(138)

[31mViolation[0m for TODReceiver in contract 'DocumentSigner':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |}
  at buggy_10.sol(155)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'DocumentSigner':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |  mapping(bytes32=>string) public docs;
  at buggy_10.sol(19)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'DocumentSigner':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_10.sol(37)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'DocumentSigner':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event Sign(bytes32 indexed _doc, address indexed _signer);
  at buggy_10.sol(58)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'DocumentSigner':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event NewDocument(bytes32 _docHash);
  at buggy_10.sol(72)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'DocumentSigner':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |
  at buggy_10.sol(94)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'DocumentSigner':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_10.sol(119)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'DocumentSigner':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |    
  at buggy_10.sol(138)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'DocumentSigner':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |}
  at buggy_10.sol(155)

[31mViolation[0m for UnrestrictedWrite in contract 'DocumentSigner':
    |pragma solidity >=0.4.21 < 0.6.0;
    |
  > |contract DocumentSigner {
    |  address payable winner_TOD39;
    |function play_TOD39(bytes32 guess) public{
  at buggy_10.sol(7)

[31mViolation[0m for UnrestrictedWrite in contract 'DocumentSigner':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD39 = msg.sender;
    |        }
    |    }
  at buggy_10.sol(13)

[31mViolation[0m for UnrestrictedWrite in contract 'DocumentSigner':
    |
    |        msg.sender.transfer(reward_TOD36);
  > |        claimed_TOD36 = true;
    |    }
    |  mapping(bytes32=>address[]) public signers;
  at buggy_10.sol(38)

[31mViolation[0m for UnrestrictedWrite in contract 'DocumentSigner':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD31 = msg.sender;
    |        }
    |    }
  at buggy_10.sol(52)

[31mViolation[0m for UnrestrictedWrite in contract 'DocumentSigner':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD13 = msg.sender;
    |        }
    |    }
  at buggy_10.sol(66)

[31mViolation[0m for UnrestrictedWrite in contract 'DocumentSigner':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD35 = msg.sender;
    |        }
    |    }
  at buggy_10.sol(88)

[31mViolation[0m for UnrestrictedWrite in contract 'DocumentSigner':
    |
    |        msg.sender.transfer(reward_TOD40);
  > |        claimed_TOD40 = true;
    |    }
    |    
  at buggy_10.sol(120)

[31mViolation[0m for UnrestrictedWrite in contract 'DocumentSigner':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD33 = msg.sender;
    |        }
    |    }
  at buggy_10.sol(132)

[31mViolation[0m for UnrestrictedWrite in contract 'DocumentSigner':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD27 = msg.sender;
    |        }
    |    }
  at buggy_10.sol(149)

[33mWarning[0m for UnrestrictedWrite in contract 'DocumentSigner':
    |        require(msg.sender == owner_TOD36);
    |        owner_TOD36.transfer(reward_TOD36);
  > |        reward_TOD36 = msg.value;
    |    }
    |
  at buggy_10.sol(30)

[33mWarning[0m for UnrestrictedWrite in contract 'DocumentSigner':
    |        require(msg.sender == owner_TOD40);
    |        owner_TOD40.transfer(reward_TOD40);
  > |        reward_TOD40 = msg.value;
    |    }
    |
  at buggy_10.sol(112)

