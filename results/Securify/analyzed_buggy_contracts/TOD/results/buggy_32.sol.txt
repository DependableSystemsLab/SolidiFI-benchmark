Processing contract: buggy_32.sol:AsseteGram
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_32.sol:ERC20Token
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_32.sol:ERC20TokenInterface
Processing contract: buggy_32.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_32.sol(56)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_32.sol(64)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |
    |        require(msg.sender == owner_TOD14);
  > |        owner_TOD14.transfer(reward_TOD14);
    |        reward_TOD14 = msg.value;
    |    }
  at buggy_32.sol(103)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD14);
    |        claimed_TOD14 = true;
    |    }
  at buggy_32.sol(111)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |
    |        require(msg.sender == owner_TOD30);
  > |        owner_TOD30.transfer(reward_TOD30);
    |        reward_TOD30 = msg.value;
    |    }
  at buggy_32.sol(122)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD30);
    |        claimed_TOD30 = true;
    |    }
  at buggy_32.sol(130)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |
    |        require(msg.sender == owner_TOD8);
  > |        owner_TOD8.transfer(reward_TOD8);
    |        reward_TOD8 = msg.value;
    |    }
  at buggy_32.sol(199)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD8);
    |        claimed_TOD8 = true;
    |    }
  at buggy_32.sol(207)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |
    |        require(msg.sender == owner_TOD36);
  > |        owner_TOD36.transfer(reward_TOD36);
    |        reward_TOD36 = msg.value;
    |    }
  at buggy_32.sol(256)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_32.sol(264)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |
    |        require(msg.sender == owner_TOD40);
  > |        owner_TOD40.transfer(reward_TOD40);
    |        reward_TOD40 = msg.value;
    |    }
  at buggy_32.sol(307)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_32.sol(315)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |
    |        require(msg.sender == owner_TOD26);
  > |        owner_TOD26.transfer(reward_TOD26);
    |        reward_TOD26 = msg.value;
    |    }
  at buggy_32.sol(364)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD26);
    |        claimed_TOD26 = true;
    |    }
  at buggy_32.sol(372)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |
    |        require(msg.sender == owner_TOD20);
  > |        owner_TOD20.transfer(reward_TOD20);
    |        reward_TOD20 = msg.value;
    |    }
  at buggy_32.sol(383)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD20);
    |        claimed_TOD20 = true;
    |    }
  at buggy_32.sol(391)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_32.sol(402)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_32.sol(410)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_32.sol(421)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_32.sol(429)

[31mViolation[0m for TODAmount in contract 'AsseteGram':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_32.sol(56)

[31mViolation[0m for TODAmount in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_32.sol(64)

[31mViolation[0m for TODAmount in contract 'AsseteGram':
    |
    |        require(msg.sender == owner_TOD14);
  > |        owner_TOD14.transfer(reward_TOD14);
    |        reward_TOD14 = msg.value;
    |    }
  at buggy_32.sol(103)

[31mViolation[0m for TODAmount in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD14);
    |        claimed_TOD14 = true;
    |    }
  at buggy_32.sol(111)

[31mViolation[0m for TODAmount in contract 'AsseteGram':
    |
    |        require(msg.sender == owner_TOD30);
  > |        owner_TOD30.transfer(reward_TOD30);
    |        reward_TOD30 = msg.value;
    |    }
  at buggy_32.sol(122)

[31mViolation[0m for TODAmount in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD30);
    |        claimed_TOD30 = true;
    |    }
  at buggy_32.sol(130)

[31mViolation[0m for TODAmount in contract 'AsseteGram':
    |
    |        require(msg.sender == owner_TOD8);
  > |        owner_TOD8.transfer(reward_TOD8);
    |        reward_TOD8 = msg.value;
    |    }
  at buggy_32.sol(199)

[31mViolation[0m for TODAmount in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD8);
    |        claimed_TOD8 = true;
    |    }
  at buggy_32.sol(207)

[31mViolation[0m for TODAmount in contract 'AsseteGram':
    |
    |        require(msg.sender == owner_TOD36);
  > |        owner_TOD36.transfer(reward_TOD36);
    |        reward_TOD36 = msg.value;
    |    }
  at buggy_32.sol(256)

[31mViolation[0m for TODAmount in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_32.sol(264)

[31mViolation[0m for TODAmount in contract 'AsseteGram':
    |
    |        require(msg.sender == owner_TOD40);
  > |        owner_TOD40.transfer(reward_TOD40);
    |        reward_TOD40 = msg.value;
    |    }
  at buggy_32.sol(307)

[31mViolation[0m for TODAmount in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_32.sol(315)

[31mViolation[0m for TODAmount in contract 'AsseteGram':
    |
    |        require(msg.sender == owner_TOD26);
  > |        owner_TOD26.transfer(reward_TOD26);
    |        reward_TOD26 = msg.value;
    |    }
  at buggy_32.sol(364)

[31mViolation[0m for TODAmount in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD26);
    |        claimed_TOD26 = true;
    |    }
  at buggy_32.sol(372)

[31mViolation[0m for TODAmount in contract 'AsseteGram':
    |
    |        require(msg.sender == owner_TOD20);
  > |        owner_TOD20.transfer(reward_TOD20);
    |        reward_TOD20 = msg.value;
    |    }
  at buggy_32.sol(383)

[31mViolation[0m for TODAmount in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD20);
    |        claimed_TOD20 = true;
    |    }
  at buggy_32.sol(391)

[31mViolation[0m for TODAmount in contract 'AsseteGram':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_32.sol(402)

[31mViolation[0m for TODAmount in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_32.sol(410)

[31mViolation[0m for TODAmount in contract 'AsseteGram':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_32.sol(421)

[31mViolation[0m for TODAmount in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_32.sol(429)

[33mWarning[0m for TODAmount in contract 'AsseteGram':
    |function getReward_TOD7() payable public{
    |     
  > |       winner_TOD7.transfer(msg.value);
    |    }
    |    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);
  at buggy_32.sol(79)

[33mWarning[0m for TODAmount in contract 'AsseteGram':
    |function getReward_TOD23() payable public{
    |     
  > |       winner_TOD23.transfer(msg.value);
    |    }
    |    function approve(address _spender, uint256 _value) public returns (bool success);
  at buggy_32.sol(93)

[33mWarning[0m for TODAmount in contract 'AsseteGram':
    |function getReward_TOD9() payable public{
    |     
  > |       winner_TOD9.transfer(msg.value);
    |    }
    |  uint256 public totalSupply;
  at buggy_32.sol(153)

[33mWarning[0m for TODAmount in contract 'AsseteGram':
    |function getReward_TOD25() payable public{
    |     
  > |       winner_TOD25.transfer(msg.value);
    |    }
    |  mapping (address => uint256) balances; //A mapping of all balances per address
  at buggy_32.sol(167)

[33mWarning[0m for TODAmount in contract 'AsseteGram':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |  mapping (address => mapping (address => uint256)) allowed; //A mapping of all allowances
  at buggy_32.sol(181)

[33mWarning[0m for TODAmount in contract 'AsseteGram':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |
  at buggy_32.sol(233)

[33mWarning[0m for TODAmount in contract 'AsseteGram':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |
  at buggy_32.sol(289)

[33mWarning[0m for TODAmount in contract 'AsseteGram':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event Transfer(address indexed _from, address indexed _to, uint256 _value);
  at buggy_32.sol(333)

[33mWarning[0m for TODAmount in contract 'AsseteGram':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event Approval(address indexed _owner, address indexed _spender, uint256 _value);
  at buggy_32.sol(347)

[33mWarning[0m for TODAmount in contract 'AsseteGram':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |
  at buggy_32.sol(451)

[33mWarning[0m for TODAmount in contract 'AsseteGram':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |
  at buggy_32.sol(471)

[31mViolation[0m for TODReceiver in contract 'AsseteGram':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_32.sol(56)

[31mViolation[0m for TODReceiver in contract 'AsseteGram':
    |function getReward_TOD7() payable public{
    |     
  > |       winner_TOD7.transfer(msg.value);
    |    }
    |    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);
  at buggy_32.sol(79)

[31mViolation[0m for TODReceiver in contract 'AsseteGram':
    |function getReward_TOD23() payable public{
    |     
  > |       winner_TOD23.transfer(msg.value);
    |    }
    |    function approve(address _spender, uint256 _value) public returns (bool success);
  at buggy_32.sol(93)

[31mViolation[0m for TODReceiver in contract 'AsseteGram':
    |
    |        require(msg.sender == owner_TOD30);
  > |        owner_TOD30.transfer(reward_TOD30);
    |        reward_TOD30 = msg.value;
    |    }
  at buggy_32.sol(122)

[31mViolation[0m for TODReceiver in contract 'AsseteGram':
    |function getReward_TOD9() payable public{
    |     
  > |       winner_TOD9.transfer(msg.value);
    |    }
    |  uint256 public totalSupply;
  at buggy_32.sol(153)

[31mViolation[0m for TODReceiver in contract 'AsseteGram':
    |function getReward_TOD25() payable public{
    |     
  > |       winner_TOD25.transfer(msg.value);
    |    }
    |  mapping (address => uint256) balances; //A mapping of all balances per address
  at buggy_32.sol(167)

[31mViolation[0m for TODReceiver in contract 'AsseteGram':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |  mapping (address => mapping (address => uint256)) allowed; //A mapping of all allowances
  at buggy_32.sol(181)

[31mViolation[0m for TODReceiver in contract 'AsseteGram':
    |
    |        require(msg.sender == owner_TOD8);
  > |        owner_TOD8.transfer(reward_TOD8);
    |        reward_TOD8 = msg.value;
    |    }
  at buggy_32.sol(199)

[31mViolation[0m for TODReceiver in contract 'AsseteGram':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |
  at buggy_32.sol(233)

[31mViolation[0m for TODReceiver in contract 'AsseteGram':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |
  at buggy_32.sol(289)

[31mViolation[0m for TODReceiver in contract 'AsseteGram':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event Transfer(address indexed _from, address indexed _to, uint256 _value);
  at buggy_32.sol(333)

[31mViolation[0m for TODReceiver in contract 'AsseteGram':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event Approval(address indexed _owner, address indexed _spender, uint256 _value);
  at buggy_32.sol(347)

[31mViolation[0m for TODReceiver in contract 'AsseteGram':
    |
    |        require(msg.sender == owner_TOD20);
  > |        owner_TOD20.transfer(reward_TOD20);
    |        reward_TOD20 = msg.value;
    |    }
  at buggy_32.sol(383)

[31mViolation[0m for TODReceiver in contract 'AsseteGram':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_32.sol(402)

[31mViolation[0m for TODReceiver in contract 'AsseteGram':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_32.sol(421)

[31mViolation[0m for TODReceiver in contract 'AsseteGram':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |
  at buggy_32.sol(451)

[31mViolation[0m for TODReceiver in contract 'AsseteGram':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |
  at buggy_32.sol(471)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_32.sol(64)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |function getReward_TOD7() payable public{
    |     
  > |       winner_TOD7.transfer(msg.value);
    |    }
    |    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);
  at buggy_32.sol(79)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |function getReward_TOD23() payable public{
    |     
  > |       winner_TOD23.transfer(msg.value);
    |    }
    |    function approve(address _spender, uint256 _value) public returns (bool success);
  at buggy_32.sol(93)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD14);
    |        claimed_TOD14 = true;
    |    }
  at buggy_32.sol(111)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD30);
    |        claimed_TOD30 = true;
    |    }
  at buggy_32.sol(130)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |function getReward_TOD9() payable public{
    |     
  > |       winner_TOD9.transfer(msg.value);
    |    }
    |  uint256 public totalSupply;
  at buggy_32.sol(153)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |function getReward_TOD25() payable public{
    |     
  > |       winner_TOD25.transfer(msg.value);
    |    }
    |  mapping (address => uint256) balances; //A mapping of all balances per address
  at buggy_32.sol(167)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |  mapping (address => mapping (address => uint256)) allowed; //A mapping of all allowances
  at buggy_32.sol(181)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD8);
    |        claimed_TOD8 = true;
    |    }
  at buggy_32.sol(207)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |
  at buggy_32.sol(233)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_32.sol(264)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |
  at buggy_32.sol(289)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_32.sol(315)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event Transfer(address indexed _from, address indexed _to, uint256 _value);
  at buggy_32.sol(333)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event Approval(address indexed _owner, address indexed _spender, uint256 _value);
  at buggy_32.sol(347)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD26);
    |        claimed_TOD26 = true;
    |    }
  at buggy_32.sol(372)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD20);
    |        claimed_TOD20 = true;
    |    }
  at buggy_32.sol(391)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_32.sol(410)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_32.sol(429)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |
  at buggy_32.sol(451)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |
  at buggy_32.sol(471)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |
    |        msg.sender.transfer(reward_TOD4);
  > |        claimed_TOD4 = true;
    |    }
    |    function transfer(address _to, uint256 _value) public returns (bool success);
  at buggy_32.sol(65)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD7 = msg.sender;
    |        }
    |    }
  at buggy_32.sol(73)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD23 = msg.sender;
    |        }
    |    }
  at buggy_32.sol(87)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |
    |        msg.sender.transfer(reward_TOD14);
  > |        claimed_TOD14 = true;
    |    }
    |    function allowance(address _owner, address _spender) public view returns (uint256 remaining);
  at buggy_32.sol(112)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |
    |        msg.sender.transfer(reward_TOD30);
  > |        claimed_TOD30 = true;
    |    }
    |
  at buggy_32.sol(131)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD9 = msg.sender;
    |        }
    |    }
  at buggy_32.sol(147)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD25 = msg.sender;
    |        }
    |    }
  at buggy_32.sol(161)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD19 = msg.sender;
    |        }
    |    }
  at buggy_32.sol(175)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |
    |        msg.sender.transfer(reward_TOD8);
  > |        claimed_TOD8 = true;
    |    }
    |
  at buggy_32.sol(208)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |    function transfer(address _to, uint256 _value) public returns (bool success) {
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at buggy_32.sol(218)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD39 = msg.sender;
    |        }
    |    }
  at buggy_32.sol(227)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(_from, _to, _value);
  at buggy_32.sol(244)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(_from, _to, _value);
    |        return true;
  at buggy_32.sol(245)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |
    |        msg.sender.transfer(reward_TOD36);
  > |        claimed_TOD36 = true;
    |    }
    |
  at buggy_32.sol(265)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD35 = msg.sender;
    |        }
    |    }
  at buggy_32.sol(283)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |
    |        msg.sender.transfer(reward_TOD40);
  > |        claimed_TOD40 = true;
    |    }
    |
  at buggy_32.sol(316)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD31 = msg.sender;
    |        }
    |    }
  at buggy_32.sol(327)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD13 = msg.sender;
    |        }
    |    }
  at buggy_32.sol(341)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |
    |        msg.sender.transfer(reward_TOD26);
  > |        claimed_TOD26 = true;
    |    }
    |  string public name = 'Electronic Gram';
  at buggy_32.sol(373)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |
    |        msg.sender.transfer(reward_TOD20);
  > |        claimed_TOD20 = true;
    |    }
    |  uint8 public decimals = 3;
  at buggy_32.sol(392)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |
    |        msg.sender.transfer(reward_TOD32);
  > |        claimed_TOD32 = true;
    |    }
    |  string public symbol = 'eGram';
  at buggy_32.sol(411)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |
    |        msg.sender.transfer(reward_TOD38);
  > |        claimed_TOD38 = true;
    |    }
    |  string public version = '2';
  at buggy_32.sol(430)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD33 = msg.sender;
    |        }
    |    }
  at buggy_32.sol(445)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD27 = msg.sender;
    |        }
    |    }
  at buggy_32.sol(465)

[33mWarning[0m for UnrestrictedWrite in contract 'AsseteGram':
    |        require(msg.sender == owner_TOD4);
    |        owner_TOD4.transfer(reward_TOD4);
  > |        reward_TOD4 = msg.value;
    |    }
    |
  at buggy_32.sol(57)

[33mWarning[0m for UnrestrictedWrite in contract 'AsseteGram':
    |        require(msg.sender == owner_TOD14);
    |        owner_TOD14.transfer(reward_TOD14);
  > |        reward_TOD14 = msg.value;
    |    }
    |
  at buggy_32.sol(104)

[33mWarning[0m for UnrestrictedWrite in contract 'AsseteGram':
    |        require(msg.sender == owner_TOD30);
    |        owner_TOD30.transfer(reward_TOD30);
  > |        reward_TOD30 = msg.value;
    |    }
    |
  at buggy_32.sol(123)

[33mWarning[0m for UnrestrictedWrite in contract 'AsseteGram':
    |        require(msg.sender == owner_TOD8);
    |        owner_TOD8.transfer(reward_TOD8);
  > |        reward_TOD8 = msg.value;
    |    }
    |
  at buggy_32.sol(200)

[33mWarning[0m for UnrestrictedWrite in contract 'AsseteGram':
    |        require(msg.sender == owner_TOD36);
    |        owner_TOD36.transfer(reward_TOD36);
  > |        reward_TOD36 = msg.value;
    |    }
    |
  at buggy_32.sol(257)

[33mWarning[0m for UnrestrictedWrite in contract 'AsseteGram':
    |        require(msg.sender == owner_TOD40);
    |        owner_TOD40.transfer(reward_TOD40);
  > |        reward_TOD40 = msg.value;
    |    }
    |
  at buggy_32.sol(308)

[33mWarning[0m for UnrestrictedWrite in contract 'AsseteGram':
    |        require(msg.sender == owner_TOD26);
    |        owner_TOD26.transfer(reward_TOD26);
  > |        reward_TOD26 = msg.value;
    |    }
    |
  at buggy_32.sol(365)

[33mWarning[0m for UnrestrictedWrite in contract 'AsseteGram':
    |        require(msg.sender == owner_TOD20);
    |        owner_TOD20.transfer(reward_TOD20);
  > |        reward_TOD20 = msg.value;
    |    }
    |
  at buggy_32.sol(384)

[33mWarning[0m for UnrestrictedWrite in contract 'AsseteGram':
    |        require(msg.sender == owner_TOD32);
    |        owner_TOD32.transfer(reward_TOD32);
  > |        reward_TOD32 = msg.value;
    |    }
    |
  at buggy_32.sol(403)

[33mWarning[0m for UnrestrictedWrite in contract 'AsseteGram':
    |        require(msg.sender == owner_TOD38);
    |        owner_TOD38.transfer(reward_TOD38);
  > |        reward_TOD38 = msg.value;
    |    }
    |
  at buggy_32.sol(422)

[31mViolation[0m for DAOConstantGas in contract 'ERC20Token':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_32.sol(56)

[31mViolation[0m for DAOConstantGas in contract 'ERC20Token':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_32.sol(64)

[31mViolation[0m for DAOConstantGas in contract 'ERC20Token':
    |
    |        require(msg.sender == owner_TOD14);
  > |        owner_TOD14.transfer(reward_TOD14);
    |        reward_TOD14 = msg.value;
    |    }
  at buggy_32.sol(103)

[31mViolation[0m for DAOConstantGas in contract 'ERC20Token':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD14);
    |        claimed_TOD14 = true;
    |    }
  at buggy_32.sol(111)

[31mViolation[0m for DAOConstantGas in contract 'ERC20Token':
    |
    |        require(msg.sender == owner_TOD30);
  > |        owner_TOD30.transfer(reward_TOD30);
    |        reward_TOD30 = msg.value;
    |    }
  at buggy_32.sol(122)

[31mViolation[0m for DAOConstantGas in contract 'ERC20Token':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD30);
    |        claimed_TOD30 = true;
    |    }
  at buggy_32.sol(130)

[31mViolation[0m for DAOConstantGas in contract 'ERC20Token':
    |
    |        require(msg.sender == owner_TOD8);
  > |        owner_TOD8.transfer(reward_TOD8);
    |        reward_TOD8 = msg.value;
    |    }
  at buggy_32.sol(199)

[31mViolation[0m for DAOConstantGas in contract 'ERC20Token':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD8);
    |        claimed_TOD8 = true;
    |    }
  at buggy_32.sol(207)

[31mViolation[0m for DAOConstantGas in contract 'ERC20Token':
    |
    |        require(msg.sender == owner_TOD36);
  > |        owner_TOD36.transfer(reward_TOD36);
    |        reward_TOD36 = msg.value;
    |    }
  at buggy_32.sol(256)

[31mViolation[0m for DAOConstantGas in contract 'ERC20Token':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_32.sol(264)

[31mViolation[0m for DAOConstantGas in contract 'ERC20Token':
    |
    |        require(msg.sender == owner_TOD40);
  > |        owner_TOD40.transfer(reward_TOD40);
    |        reward_TOD40 = msg.value;
    |    }
  at buggy_32.sol(307)

[31mViolation[0m for DAOConstantGas in contract 'ERC20Token':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_32.sol(315)

[31mViolation[0m for TODAmount in contract 'ERC20Token':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_32.sol(56)

[31mViolation[0m for TODAmount in contract 'ERC20Token':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_32.sol(64)

[31mViolation[0m for TODAmount in contract 'ERC20Token':
    |
    |        require(msg.sender == owner_TOD14);
  > |        owner_TOD14.transfer(reward_TOD14);
    |        reward_TOD14 = msg.value;
    |    }
  at buggy_32.sol(103)

[31mViolation[0m for TODAmount in contract 'ERC20Token':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD14);
    |        claimed_TOD14 = true;
    |    }
  at buggy_32.sol(111)

[31mViolation[0m for TODAmount in contract 'ERC20Token':
    |
    |        require(msg.sender == owner_TOD30);
  > |        owner_TOD30.transfer(reward_TOD30);
    |        reward_TOD30 = msg.value;
    |    }
  at buggy_32.sol(122)

[31mViolation[0m for TODAmount in contract 'ERC20Token':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD30);
    |        claimed_TOD30 = true;
    |    }
  at buggy_32.sol(130)

[31mViolation[0m for TODAmount in contract 'ERC20Token':
    |
    |        require(msg.sender == owner_TOD8);
  > |        owner_TOD8.transfer(reward_TOD8);
    |        reward_TOD8 = msg.value;
    |    }
  at buggy_32.sol(199)

[31mViolation[0m for TODAmount in contract 'ERC20Token':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD8);
    |        claimed_TOD8 = true;
    |    }
  at buggy_32.sol(207)

[31mViolation[0m for TODAmount in contract 'ERC20Token':
    |
    |        require(msg.sender == owner_TOD36);
  > |        owner_TOD36.transfer(reward_TOD36);
    |        reward_TOD36 = msg.value;
    |    }
  at buggy_32.sol(256)

[31mViolation[0m for TODAmount in contract 'ERC20Token':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_32.sol(264)

[31mViolation[0m for TODAmount in contract 'ERC20Token':
    |
    |        require(msg.sender == owner_TOD40);
  > |        owner_TOD40.transfer(reward_TOD40);
    |        reward_TOD40 = msg.value;
    |    }
  at buggy_32.sol(307)

[31mViolation[0m for TODAmount in contract 'ERC20Token':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_32.sol(315)

[33mWarning[0m for TODAmount in contract 'ERC20Token':
    |function getReward_TOD7() payable public{
    |     
  > |       winner_TOD7.transfer(msg.value);
    |    }
    |    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);
  at buggy_32.sol(79)

[33mWarning[0m for TODAmount in contract 'ERC20Token':
    |function getReward_TOD23() payable public{
    |     
  > |       winner_TOD23.transfer(msg.value);
    |    }
    |    function approve(address _spender, uint256 _value) public returns (bool success);
  at buggy_32.sol(93)

[33mWarning[0m for TODAmount in contract 'ERC20Token':
    |function getReward_TOD9() payable public{
    |     
  > |       winner_TOD9.transfer(msg.value);
    |    }
    |  uint256 public totalSupply;
  at buggy_32.sol(153)

[33mWarning[0m for TODAmount in contract 'ERC20Token':
    |function getReward_TOD25() payable public{
    |     
  > |       winner_TOD25.transfer(msg.value);
    |    }
    |  mapping (address => uint256) balances; //A mapping of all balances per address
  at buggy_32.sol(167)

[33mWarning[0m for TODAmount in contract 'ERC20Token':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |  mapping (address => mapping (address => uint256)) allowed; //A mapping of all allowances
  at buggy_32.sol(181)

[33mWarning[0m for TODAmount in contract 'ERC20Token':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |
  at buggy_32.sol(233)

[33mWarning[0m for TODAmount in contract 'ERC20Token':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |
  at buggy_32.sol(289)

[33mWarning[0m for TODAmount in contract 'ERC20Token':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event Transfer(address indexed _from, address indexed _to, uint256 _value);
  at buggy_32.sol(333)

[33mWarning[0m for TODAmount in contract 'ERC20Token':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event Approval(address indexed _owner, address indexed _spender, uint256 _value);
  at buggy_32.sol(347)

[31mViolation[0m for TODReceiver in contract 'ERC20Token':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_32.sol(56)

[31mViolation[0m for TODReceiver in contract 'ERC20Token':
    |function getReward_TOD7() payable public{
    |     
  > |       winner_TOD7.transfer(msg.value);
    |    }
    |    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);
  at buggy_32.sol(79)

[31mViolation[0m for TODReceiver in contract 'ERC20Token':
    |function getReward_TOD23() payable public{
    |     
  > |       winner_TOD23.transfer(msg.value);
    |    }
    |    function approve(address _spender, uint256 _value) public returns (bool success);
  at buggy_32.sol(93)

[31mViolation[0m for TODReceiver in contract 'ERC20Token':
    |
    |        require(msg.sender == owner_TOD30);
  > |        owner_TOD30.transfer(reward_TOD30);
    |        reward_TOD30 = msg.value;
    |    }
  at buggy_32.sol(122)

[31mViolation[0m for TODReceiver in contract 'ERC20Token':
    |function getReward_TOD9() payable public{
    |     
  > |       winner_TOD9.transfer(msg.value);
    |    }
    |  uint256 public totalSupply;
  at buggy_32.sol(153)

[31mViolation[0m for TODReceiver in contract 'ERC20Token':
    |function getReward_TOD25() payable public{
    |     
  > |       winner_TOD25.transfer(msg.value);
    |    }
    |  mapping (address => uint256) balances; //A mapping of all balances per address
  at buggy_32.sol(167)

[31mViolation[0m for TODReceiver in contract 'ERC20Token':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |  mapping (address => mapping (address => uint256)) allowed; //A mapping of all allowances
  at buggy_32.sol(181)

[31mViolation[0m for TODReceiver in contract 'ERC20Token':
    |
    |        require(msg.sender == owner_TOD8);
  > |        owner_TOD8.transfer(reward_TOD8);
    |        reward_TOD8 = msg.value;
    |    }
  at buggy_32.sol(199)

[31mViolation[0m for TODReceiver in contract 'ERC20Token':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |
  at buggy_32.sol(233)

[31mViolation[0m for TODReceiver in contract 'ERC20Token':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |
  at buggy_32.sol(289)

[31mViolation[0m for TODReceiver in contract 'ERC20Token':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event Transfer(address indexed _from, address indexed _to, uint256 _value);
  at buggy_32.sol(333)

[31mViolation[0m for TODReceiver in contract 'ERC20Token':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event Approval(address indexed _owner, address indexed _spender, uint256 _value);
  at buggy_32.sol(347)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_32.sol(64)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |function getReward_TOD7() payable public{
    |     
  > |       winner_TOD7.transfer(msg.value);
    |    }
    |    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);
  at buggy_32.sol(79)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |function getReward_TOD23() payable public{
    |     
  > |       winner_TOD23.transfer(msg.value);
    |    }
    |    function approve(address _spender, uint256 _value) public returns (bool success);
  at buggy_32.sol(93)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD14);
    |        claimed_TOD14 = true;
    |    }
  at buggy_32.sol(111)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD30);
    |        claimed_TOD30 = true;
    |    }
  at buggy_32.sol(130)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |function getReward_TOD9() payable public{
    |     
  > |       winner_TOD9.transfer(msg.value);
    |    }
    |  uint256 public totalSupply;
  at buggy_32.sol(153)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |function getReward_TOD25() payable public{
    |     
  > |       winner_TOD25.transfer(msg.value);
    |    }
    |  mapping (address => uint256) balances; //A mapping of all balances per address
  at buggy_32.sol(167)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |  mapping (address => mapping (address => uint256)) allowed; //A mapping of all allowances
  at buggy_32.sol(181)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD8);
    |        claimed_TOD8 = true;
    |    }
  at buggy_32.sol(207)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |
  at buggy_32.sol(233)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_32.sol(264)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |
  at buggy_32.sol(289)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_32.sol(315)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event Transfer(address indexed _from, address indexed _to, uint256 _value);
  at buggy_32.sol(333)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event Approval(address indexed _owner, address indexed _spender, uint256 _value);
  at buggy_32.sol(347)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |
    |        msg.sender.transfer(reward_TOD4);
  > |        claimed_TOD4 = true;
    |    }
    |    function transfer(address _to, uint256 _value) public returns (bool success);
  at buggy_32.sol(65)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD7 = msg.sender;
    |        }
    |    }
  at buggy_32.sol(73)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD23 = msg.sender;
    |        }
    |    }
  at buggy_32.sol(87)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |
    |        msg.sender.transfer(reward_TOD14);
  > |        claimed_TOD14 = true;
    |    }
    |    function allowance(address _owner, address _spender) public view returns (uint256 remaining);
  at buggy_32.sol(112)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |
    |        msg.sender.transfer(reward_TOD30);
  > |        claimed_TOD30 = true;
    |    }
    |
  at buggy_32.sol(131)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD9 = msg.sender;
    |        }
    |    }
  at buggy_32.sol(147)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD25 = msg.sender;
    |        }
    |    }
  at buggy_32.sol(161)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD19 = msg.sender;
    |        }
    |    }
  at buggy_32.sol(175)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |
    |        msg.sender.transfer(reward_TOD8);
  > |        claimed_TOD8 = true;
    |    }
    |
  at buggy_32.sol(208)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |    function transfer(address _to, uint256 _value) public returns (bool success) {
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at buggy_32.sol(218)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD39 = msg.sender;
    |        }
    |    }
  at buggy_32.sol(227)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(_from, _to, _value);
  at buggy_32.sol(244)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(_from, _to, _value);
    |        return true;
  at buggy_32.sol(245)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |
    |        msg.sender.transfer(reward_TOD36);
  > |        claimed_TOD36 = true;
    |    }
    |
  at buggy_32.sol(265)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD35 = msg.sender;
    |        }
    |    }
  at buggy_32.sol(283)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |
    |        msg.sender.transfer(reward_TOD40);
  > |        claimed_TOD40 = true;
    |    }
    |
  at buggy_32.sol(316)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD31 = msg.sender;
    |        }
    |    }
  at buggy_32.sol(327)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD13 = msg.sender;
    |        }
    |    }
  at buggy_32.sol(341)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Token':
    |        require(msg.sender == owner_TOD4);
    |        owner_TOD4.transfer(reward_TOD4);
  > |        reward_TOD4 = msg.value;
    |    }
    |
  at buggy_32.sol(57)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Token':
    |        require(msg.sender == owner_TOD14);
    |        owner_TOD14.transfer(reward_TOD14);
  > |        reward_TOD14 = msg.value;
    |    }
    |
  at buggy_32.sol(104)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Token':
    |        require(msg.sender == owner_TOD30);
    |        owner_TOD30.transfer(reward_TOD30);
  > |        reward_TOD30 = msg.value;
    |    }
    |
  at buggy_32.sol(123)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Token':
    |        require(msg.sender == owner_TOD8);
    |        owner_TOD8.transfer(reward_TOD8);
  > |        reward_TOD8 = msg.value;
    |    }
    |
  at buggy_32.sol(200)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Token':
    |        require(msg.sender == owner_TOD36);
    |        owner_TOD36.transfer(reward_TOD36);
  > |        reward_TOD36 = msg.value;
    |    }
    |
  at buggy_32.sol(257)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC20Token':
    |        require(msg.sender == owner_TOD40);
    |        owner_TOD40.transfer(reward_TOD40);
  > |        reward_TOD40 = msg.value;
    |    }
    |
  at buggy_32.sol(308)

