Processing contract: buggy_20.sol:Ownable
Processing contract: buggy_20.sol:RampInstantEscrowsPoolInterface
Processing contract: buggy_20.sol:RampInstantEthPool
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_20.sol:RampInstantPool
Processing contract: buggy_20.sol:RampInstantPoolInterface
Processing contract: buggy_20.sol:Stoppable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for DAOConstantGas in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD40);
  > |        owner_TOD40.transfer(reward_TOD40);
    |        reward_TOD40 = msg.value;
    |    }
  at buggy_20.sol(54)

[31mViolation[0m for DAOConstantGas in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_20.sol(62)

[31mViolation[0m for DAOConstantGas in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD10);
  > |        owner_TOD10.transfer(reward_TOD10);
    |        reward_TOD10 = msg.value;
    |    }
  at buggy_20.sol(122)

[31mViolation[0m for DAOConstantGas in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD10);
    |        claimed_TOD10 = true;
    |    }
  at buggy_20.sol(130)

[31mViolation[0m for DAOConstantGas in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD22);
  > |        owner_TOD22.transfer(reward_TOD22);
    |        reward_TOD22 = msg.value;
    |    }
  at buggy_20.sol(270)

[31mViolation[0m for DAOConstantGas in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD22);
    |        claimed_TOD22 = true;
    |    }
  at buggy_20.sol(278)

[31mViolation[0m for DAOConstantGas in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD12);
  > |        owner_TOD12.transfer(reward_TOD12);
    |        reward_TOD12 = msg.value;
    |    }
  at buggy_20.sol(289)

[31mViolation[0m for DAOConstantGas in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD12);
    |        claimed_TOD12 = true;
    |    }
  at buggy_20.sol(297)

[31mViolation[0m for DAOConstantGas in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD26);
  > |        owner_TOD26.transfer(reward_TOD26);
    |        reward_TOD26 = msg.value;
    |    }
  at buggy_20.sol(417)

[31mViolation[0m for DAOConstantGas in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD26);
    |        claimed_TOD26 = true;
    |    }
  at buggy_20.sol(425)

[31mViolation[0m for DAOConstantGas in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD20);
  > |        owner_TOD20.transfer(reward_TOD20);
    |        reward_TOD20 = msg.value;
    |    }
  at buggy_20.sol(438)

[31mViolation[0m for DAOConstantGas in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD20);
    |        claimed_TOD20 = true;
    |    }
  at buggy_20.sol(446)

[31mViolation[0m for DAOConstantGas in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_20.sol(460)

[31mViolation[0m for DAOConstantGas in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_20.sol(468)

[31mViolation[0m for DAOConstantGas in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_20.sol(487)

[31mViolation[0m for DAOConstantGas in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_20.sol(495)

[31mViolation[0m for DAOConstantGas in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_20.sol(513)

[31mViolation[0m for DAOConstantGas in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_20.sol(521)

[31mViolation[0m for DAOConstantGas in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD14);
  > |        owner_TOD14.transfer(reward_TOD14);
    |        reward_TOD14 = msg.value;
    |    }
  at buggy_20.sol(598)

[31mViolation[0m for DAOConstantGas in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD14);
    |        claimed_TOD14 = true;
    |    }
  at buggy_20.sol(606)

[31mViolation[0m for DAOConstantGas in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD2);
  > |        owner_TOD2.transfer(reward_TOD2);
    |        reward_TOD2 = msg.value;
    |    }
  at buggy_20.sol(651)

[31mViolation[0m for DAOConstantGas in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD2);
    |        claimed_TOD2 = true;
    |    }
  at buggy_20.sol(659)

[31mViolation[0m for DAOConstantGas in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD30);
  > |        owner_TOD30.transfer(reward_TOD30);
    |        reward_TOD30 = msg.value;
    |    }
  at buggy_20.sol(682)

[31mViolation[0m for DAOConstantGas in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD30);
    |        claimed_TOD30 = true;
    |    }
  at buggy_20.sol(690)

[31mViolation[0m for DAOConstantGas in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD8);
  > |        owner_TOD8.transfer(reward_TOD8);
    |        reward_TOD8 = msg.value;
    |    }
  at buggy_20.sol(704)

[31mViolation[0m for DAOConstantGas in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD8);
    |        claimed_TOD8 = true;
    |    }
  at buggy_20.sol(712)

[31mViolation[0m for DAOConstantGas in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD36);
  > |        owner_TOD36.transfer(reward_TOD36);
    |        reward_TOD36 = msg.value;
    |    }
  at buggy_20.sol(750)

[31mViolation[0m for DAOConstantGas in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_20.sol(758)

[31mViolation[0m for TODAmount in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD40);
  > |        owner_TOD40.transfer(reward_TOD40);
    |        reward_TOD40 = msg.value;
    |    }
  at buggy_20.sol(54)

[31mViolation[0m for TODAmount in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_20.sol(62)

[31mViolation[0m for TODAmount in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD10);
  > |        owner_TOD10.transfer(reward_TOD10);
    |        reward_TOD10 = msg.value;
    |    }
  at buggy_20.sol(122)

[31mViolation[0m for TODAmount in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD10);
    |        claimed_TOD10 = true;
    |    }
  at buggy_20.sol(130)

[31mViolation[0m for TODAmount in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD22);
  > |        owner_TOD22.transfer(reward_TOD22);
    |        reward_TOD22 = msg.value;
    |    }
  at buggy_20.sol(270)

[31mViolation[0m for TODAmount in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD22);
    |        claimed_TOD22 = true;
    |    }
  at buggy_20.sol(278)

[31mViolation[0m for TODAmount in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD12);
  > |        owner_TOD12.transfer(reward_TOD12);
    |        reward_TOD12 = msg.value;
    |    }
  at buggy_20.sol(289)

[31mViolation[0m for TODAmount in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD12);
    |        claimed_TOD12 = true;
    |    }
  at buggy_20.sol(297)

[31mViolation[0m for TODAmount in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD26);
  > |        owner_TOD26.transfer(reward_TOD26);
    |        reward_TOD26 = msg.value;
    |    }
  at buggy_20.sol(417)

[31mViolation[0m for TODAmount in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD26);
    |        claimed_TOD26 = true;
    |    }
  at buggy_20.sol(425)

[31mViolation[0m for TODAmount in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD20);
  > |        owner_TOD20.transfer(reward_TOD20);
    |        reward_TOD20 = msg.value;
    |    }
  at buggy_20.sol(438)

[31mViolation[0m for TODAmount in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD20);
    |        claimed_TOD20 = true;
    |    }
  at buggy_20.sol(446)

[31mViolation[0m for TODAmount in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_20.sol(460)

[31mViolation[0m for TODAmount in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_20.sol(468)

[31mViolation[0m for TODAmount in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_20.sol(487)

[31mViolation[0m for TODAmount in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_20.sol(495)

[31mViolation[0m for TODAmount in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_20.sol(513)

[31mViolation[0m for TODAmount in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_20.sol(521)

[31mViolation[0m for TODAmount in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD14);
  > |        owner_TOD14.transfer(reward_TOD14);
    |        reward_TOD14 = msg.value;
    |    }
  at buggy_20.sol(598)

[31mViolation[0m for TODAmount in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD14);
    |        claimed_TOD14 = true;
    |    }
  at buggy_20.sol(606)

[31mViolation[0m for TODAmount in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD2);
  > |        owner_TOD2.transfer(reward_TOD2);
    |        reward_TOD2 = msg.value;
    |    }
  at buggy_20.sol(651)

[31mViolation[0m for TODAmount in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD2);
    |        claimed_TOD2 = true;
    |    }
  at buggy_20.sol(659)

[31mViolation[0m for TODAmount in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD30);
  > |        owner_TOD30.transfer(reward_TOD30);
    |        reward_TOD30 = msg.value;
    |    }
  at buggy_20.sol(682)

[31mViolation[0m for TODAmount in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD30);
    |        claimed_TOD30 = true;
    |    }
  at buggy_20.sol(690)

[31mViolation[0m for TODAmount in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD8);
  > |        owner_TOD8.transfer(reward_TOD8);
    |        reward_TOD8 = msg.value;
    |    }
  at buggy_20.sol(704)

[31mViolation[0m for TODAmount in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD8);
    |        claimed_TOD8 = true;
    |    }
  at buggy_20.sol(712)

[31mViolation[0m for TODAmount in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD36);
  > |        owner_TOD36.transfer(reward_TOD36);
    |        reward_TOD36 = msg.value;
    |    }
  at buggy_20.sol(750)

[31mViolation[0m for TODAmount in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_20.sol(758)

[33mWarning[0m for TODAmount in contract 'RampInstantEthPool':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |  address public owner;
  at buggy_20.sol(43)

[33mWarning[0m for TODAmount in contract 'RampInstantEthPool':
    |function getReward_TOD17() payable public{
    |     
  > |       winner_TOD17.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(81)

[33mWarning[0m for TODAmount in contract 'RampInstantEthPool':
    |function getReward_TOD37() payable public{
    |     
  > |       winner_TOD37.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(104)

[33mWarning[0m for TODAmount in contract 'RampInstantEthPool':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |  event IsActiveChanged(bool _isActive);
  at buggy_20.sol(146)

[33mWarning[0m for TODAmount in contract 'RampInstantEthPool':
    |function getReward_TOD3() payable public{
    |     
  > |       winner_TOD3.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(171)

[33mWarning[0m for TODAmount in contract 'RampInstantEthPool':
    |function getReward_TOD11() payable public{
    |     
  > |       winner_TOD11.transfer(msg.value);
    |    }
    |  uint256 public maxSwapAmount;
  at buggy_20.sol(312)

[33mWarning[0m for TODAmount in contract 'RampInstantEthPool':
    |function getReward_TOD1() payable public{
    |     
  > |       winner_TOD1.transfer(msg.value);
    |    }
    |  bytes32 public paymentDetailsHash;
  at buggy_20.sol(326)

[33mWarning[0m for TODAmount in contract 'RampInstantEthPool':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |  event ReceivedFunds(address _from, uint256 _amount);
  at buggy_20.sol(346)

[33mWarning[0m for TODAmount in contract 'RampInstantEthPool':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event LimitsChanged(uint256 _minAmount, uint256 _maxAmount);
  at buggy_20.sol(360)

[33mWarning[0m for TODAmount in contract 'RampInstantEthPool':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event SwapsContractChanged(address _oldAddress, address _newAddress);
  at buggy_20.sol(374)

[33mWarning[0m for TODAmount in contract 'RampInstantEthPool':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(406)

[33mWarning[0m for TODAmount in contract 'RampInstantEthPool':
    |function getReward_TOD7() payable public{
    |     
  > |       winner_TOD7.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(553)

[33mWarning[0m for TODAmount in contract 'RampInstantEthPool':
    |function getReward_TOD23() payable public{
    |     
  > |       winner_TOD23.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(581)

[33mWarning[0m for TODAmount in contract 'RampInstantEthPool':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(734)

[33mWarning[0m for TODAmount in contract 'RampInstantEthPool':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(782)

[33mWarning[0m for TODAmount in contract 'RampInstantEthPool':
    |        uint256 _amount
    |    ) public onlyOwner returns (bool success) {
  > |        _to.transfer(_amount);  // always throws on failure
    |        return true;
    |    }
  at buggy_20.sol(720)

[31mViolation[0m for TODReceiver in contract 'RampInstantEthPool':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |  address public owner;
  at buggy_20.sol(43)

[31mViolation[0m for TODReceiver in contract 'RampInstantEthPool':
    |function getReward_TOD17() payable public{
    |     
  > |       winner_TOD17.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(81)

[31mViolation[0m for TODReceiver in contract 'RampInstantEthPool':
    |function getReward_TOD37() payable public{
    |     
  > |       winner_TOD37.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(104)

[31mViolation[0m for TODReceiver in contract 'RampInstantEthPool':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |  event IsActiveChanged(bool _isActive);
  at buggy_20.sol(146)

[31mViolation[0m for TODReceiver in contract 'RampInstantEthPool':
    |function getReward_TOD3() payable public{
    |     
  > |       winner_TOD3.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(171)

[31mViolation[0m for TODReceiver in contract 'RampInstantEthPool':
    |function getReward_TOD11() payable public{
    |     
  > |       winner_TOD11.transfer(msg.value);
    |    }
    |  uint256 public maxSwapAmount;
  at buggy_20.sol(312)

[31mViolation[0m for TODReceiver in contract 'RampInstantEthPool':
    |function getReward_TOD1() payable public{
    |     
  > |       winner_TOD1.transfer(msg.value);
    |    }
    |  bytes32 public paymentDetailsHash;
  at buggy_20.sol(326)

[31mViolation[0m for TODReceiver in contract 'RampInstantEthPool':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |  event ReceivedFunds(address _from, uint256 _amount);
  at buggy_20.sol(346)

[31mViolation[0m for TODReceiver in contract 'RampInstantEthPool':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event LimitsChanged(uint256 _minAmount, uint256 _maxAmount);
  at buggy_20.sol(360)

[31mViolation[0m for TODReceiver in contract 'RampInstantEthPool':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event SwapsContractChanged(address _oldAddress, address _newAddress);
  at buggy_20.sol(374)

[31mViolation[0m for TODReceiver in contract 'RampInstantEthPool':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(406)

[31mViolation[0m for TODReceiver in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD20);
  > |        owner_TOD20.transfer(reward_TOD20);
    |        reward_TOD20 = msg.value;
    |    }
  at buggy_20.sol(438)

[31mViolation[0m for TODReceiver in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_20.sol(460)

[31mViolation[0m for TODReceiver in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_20.sol(487)

[31mViolation[0m for TODReceiver in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_20.sol(513)

[31mViolation[0m for TODReceiver in contract 'RampInstantEthPool':
    |function getReward_TOD7() payable public{
    |     
  > |       winner_TOD7.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(553)

[31mViolation[0m for TODReceiver in contract 'RampInstantEthPool':
    |function getReward_TOD23() payable public{
    |     
  > |       winner_TOD23.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(581)

[31mViolation[0m for TODReceiver in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD2);
  > |        owner_TOD2.transfer(reward_TOD2);
    |        reward_TOD2 = msg.value;
    |    }
  at buggy_20.sol(651)

[31mViolation[0m for TODReceiver in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD30);
  > |        owner_TOD30.transfer(reward_TOD30);
    |        reward_TOD30 = msg.value;
    |    }
  at buggy_20.sol(682)

[31mViolation[0m for TODReceiver in contract 'RampInstantEthPool':
    |
    |        require(msg.sender == owner_TOD8);
  > |        owner_TOD8.transfer(reward_TOD8);
    |        reward_TOD8 = msg.value;
    |    }
  at buggy_20.sol(704)

[31mViolation[0m for TODReceiver in contract 'RampInstantEthPool':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(734)

[31mViolation[0m for TODReceiver in contract 'RampInstantEthPool':
    |        uint256 _amount
    |    ) public onlyActive onlySwapsContract isWithinLimits(_amount) returns(bool success) {
  > |        swapsContract.transfer(_amount);  // always throws on failure
    |        return true;
    |    }
  at buggy_20.sol(740)

[31mViolation[0m for TODReceiver in contract 'RampInstantEthPool':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(782)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |  address public owner;
  at buggy_20.sol(43)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_20.sol(62)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |function getReward_TOD17() payable public{
    |     
  > |       winner_TOD17.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(81)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |function getReward_TOD37() payable public{
    |     
  > |       winner_TOD37.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(104)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD10);
    |        claimed_TOD10 = true;
    |    }
  at buggy_20.sol(130)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |  event IsActiveChanged(bool _isActive);
  at buggy_20.sol(146)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |function getReward_TOD3() payable public{
    |     
  > |       winner_TOD3.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(171)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD22);
    |        claimed_TOD22 = true;
    |    }
  at buggy_20.sol(278)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD12);
    |        claimed_TOD12 = true;
    |    }
  at buggy_20.sol(297)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |function getReward_TOD11() payable public{
    |     
  > |       winner_TOD11.transfer(msg.value);
    |    }
    |  uint256 public maxSwapAmount;
  at buggy_20.sol(312)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |function getReward_TOD1() payable public{
    |     
  > |       winner_TOD1.transfer(msg.value);
    |    }
    |  bytes32 public paymentDetailsHash;
  at buggy_20.sol(326)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |  event ReceivedFunds(address _from, uint256 _amount);
  at buggy_20.sol(346)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event LimitsChanged(uint256 _minAmount, uint256 _maxAmount);
  at buggy_20.sol(360)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event SwapsContractChanged(address _oldAddress, address _newAddress);
  at buggy_20.sol(374)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(406)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD26);
    |        claimed_TOD26 = true;
    |    }
  at buggy_20.sol(425)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD20);
    |        claimed_TOD20 = true;
    |    }
  at buggy_20.sol(446)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_20.sol(468)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_20.sol(495)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_20.sol(521)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |function getReward_TOD7() payable public{
    |     
  > |       winner_TOD7.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(553)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |function getReward_TOD23() payable public{
    |     
  > |       winner_TOD23.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(581)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD14);
    |        claimed_TOD14 = true;
    |    }
  at buggy_20.sol(606)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD2);
    |        claimed_TOD2 = true;
    |    }
  at buggy_20.sol(659)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD30);
    |        claimed_TOD30 = true;
    |    }
  at buggy_20.sol(690)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD8);
    |        claimed_TOD8 = true;
    |    }
  at buggy_20.sol(712)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(734)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_20.sol(758)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(782)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |        uint256 _amount
    |    ) public onlyOwner returns (bool success) {
  > |        _to.transfer(_amount);  // always throws on failure
    |        return true;
    |    }
  at buggy_20.sol(720)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RampInstantEthPool':
    |        uint256 _amount
    |    ) public onlyActive onlySwapsContract isWithinLimits(_amount) returns(bool success) {
  > |        swapsContract.transfer(_amount);  // always throws on failure
    |        return true;
    |    }
  at buggy_20.sol(740)

[31mViolation[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD21 = msg.sender;
    |        }
    |    }
  at buggy_20.sol(37)

[31mViolation[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |
    |        msg.sender.transfer(reward_TOD40);
  > |        claimed_TOD40 = true;
    |    }
    |  event OwnerChanged(address oldOwner, address newOwner);
  at buggy_20.sol(63)

[31mViolation[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD17 = msg.sender;
    |        }
    |    }
  at buggy_20.sol(75)

[31mViolation[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD37 = msg.sender;
    |        }
    |    }
  at buggy_20.sol(98)

[31mViolation[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |
    |        msg.sender.transfer(reward_TOD10);
  > |        claimed_TOD10 = true;
    |    }
    |  bool public isActive = true;
  at buggy_20.sol(131)

[31mViolation[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD33 = msg.sender;
    |        }
    |    }
  at buggy_20.sol(140)

[31mViolation[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD3 = msg.sender;
    |        }
    |    }
  at buggy_20.sol(165)

[31mViolation[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |
    |        msg.sender.transfer(reward_TOD22);
  > |        claimed_TOD22 = true;
    |    }
    |  address payable public swapsContract;
  at buggy_20.sol(279)

[31mViolation[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |
    |        msg.sender.transfer(reward_TOD12);
  > |        claimed_TOD12 = true;
    |    }
    |  uint256 public minSwapAmount;
  at buggy_20.sol(298)

[31mViolation[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD11 = msg.sender;
    |        }
    |    }
  at buggy_20.sol(306)

[31mViolation[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD1 = msg.sender;
    |        }
    |    }
  at buggy_20.sol(320)

[31mViolation[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD27 = msg.sender;
    |        }
    |    }
  at buggy_20.sol(340)

[31mViolation[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD31 = msg.sender;
    |        }
    |    }
  at buggy_20.sol(354)

[31mViolation[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD13 = msg.sender;
    |        }
    |    }
  at buggy_20.sol(368)

[31mViolation[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD19 = msg.sender;
    |        }
    |    }
  at buggy_20.sol(400)

[31mViolation[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |
    |        msg.sender.transfer(reward_TOD26);
  > |        claimed_TOD26 = true;
    |    }
    |
  at buggy_20.sol(426)

[31mViolation[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |
    |        msg.sender.transfer(reward_TOD20);
  > |        claimed_TOD20 = true;
    |    }
    |
  at buggy_20.sol(447)

[31mViolation[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |
    |        msg.sender.transfer(reward_TOD32);
  > |        claimed_TOD32 = true;
    |    }
    |
  at buggy_20.sol(469)

[31mViolation[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |
    |        msg.sender.transfer(reward_TOD38);
  > |        claimed_TOD38 = true;
    |    }
    |
  at buggy_20.sol(496)

[31mViolation[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |
    |        msg.sender.transfer(reward_TOD4);
  > |        claimed_TOD4 = true;
    |    }
    |
  at buggy_20.sol(522)

[31mViolation[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD7 = msg.sender;
    |        }
    |    }
  at buggy_20.sol(547)

[31mViolation[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD23 = msg.sender;
    |        }
    |    }
  at buggy_20.sol(575)

[31mViolation[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |
    |        msg.sender.transfer(reward_TOD14);
  > |        claimed_TOD14 = true;
    |    }
    |
  at buggy_20.sol(607)

[31mViolation[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |
    |        msg.sender.transfer(reward_TOD2);
  > |        claimed_TOD2 = true;
    |    }
    |  uint16 internal constant ETH_TYPE_ID = 1;
  at buggy_20.sol(660)

[31mViolation[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |
    |        msg.sender.transfer(reward_TOD30);
  > |        claimed_TOD30 = true;
    |    }
    |
  at buggy_20.sol(691)

[31mViolation[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |
    |        msg.sender.transfer(reward_TOD8);
  > |        claimed_TOD8 = true;
    |    }
    |
  at buggy_20.sol(713)

[31mViolation[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD39 = msg.sender;
    |        }
    |    }
  at buggy_20.sol(728)

[31mViolation[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |
    |        msg.sender.transfer(reward_TOD36);
  > |        claimed_TOD36 = true;
    |    }
    |
  at buggy_20.sol(759)

[31mViolation[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD35 = msg.sender;
    |        }
    |    }
  at buggy_20.sol(776)

[33mWarning[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |        require(msg.sender == owner_TOD40);
    |        owner_TOD40.transfer(reward_TOD40);
  > |        reward_TOD40 = msg.value;
    |    }
    |
  at buggy_20.sol(55)

[33mWarning[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |
    |    function changeOwner(address _newOwner) external onlyOwner {
  > |        owner = _newOwner;
    |        emit OwnerChanged(msg.sender, _newOwner);
    |    }
  at buggy_20.sol(90)

[33mWarning[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |        require(msg.sender == owner_TOD10);
    |        owner_TOD10.transfer(reward_TOD10);
  > |        reward_TOD10 = msg.value;
    |    }
    |
  at buggy_20.sol(123)

[33mWarning[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |    function setIsActive(bool _isActive) external onlyOwner {
    |        if (_isActive == isActive) return;
  > |        isActive = _isActive;
    |        emit IsActiveChanged(_isActive);
    |    }
  at buggy_20.sol(157)

[33mWarning[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |        require(msg.sender == owner_TOD22);
    |        owner_TOD22.transfer(reward_TOD22);
  > |        reward_TOD22 = msg.value;
    |    }
    |
  at buggy_20.sol(271)

[33mWarning[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |        require(msg.sender == owner_TOD12);
    |        owner_TOD12.transfer(reward_TOD12);
  > |        reward_TOD12 = msg.value;
    |    }
    |
  at buggy_20.sol(290)

[33mWarning[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |        require(msg.sender == owner_TOD26);
    |        owner_TOD26.transfer(reward_TOD26);
  > |        reward_TOD26 = msg.value;
    |    }
    |
  at buggy_20.sol(418)

[33mWarning[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |        require(msg.sender == owner_TOD20);
    |        owner_TOD20.transfer(reward_TOD20);
  > |        reward_TOD20 = msg.value;
    |    }
    |
  at buggy_20.sol(439)

[33mWarning[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |        require(msg.sender == owner_TOD32);
    |        owner_TOD32.transfer(reward_TOD32);
  > |        reward_TOD32 = msg.value;
    |    }
    |
  at buggy_20.sol(461)

[33mWarning[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |        uint256 _maxAmount
    |    ) public onlyOwner validateLimits(_minAmount, _maxAmount) {
  > |        minSwapAmount = _minAmount;
    |        maxSwapAmount = _maxAmount;
    |        emit LimitsChanged(_minAmount, _maxAmount);
  at buggy_20.sol(476)

[33mWarning[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |    ) public onlyOwner validateLimits(_minAmount, _maxAmount) {
    |        minSwapAmount = _minAmount;
  > |        maxSwapAmount = _maxAmount;
    |        emit LimitsChanged(_minAmount, _maxAmount);
    |    }
  at buggy_20.sol(477)

[33mWarning[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |        require(msg.sender == owner_TOD38);
    |        owner_TOD38.transfer(reward_TOD38);
  > |        reward_TOD38 = msg.value;
    |    }
    |
  at buggy_20.sol(488)

[33mWarning[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |    ) public onlyOwner validateSwapsContract(_swapsContract, ASSET_TYPE) {
    |        address oldSwapsContract = swapsContract;
  > |        swapsContract = _swapsContract;
    |        emit SwapsContractChanged(oldSwapsContract, _swapsContract);
    |    }
  at buggy_20.sol(503)

[33mWarning[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |        require(msg.sender == owner_TOD4);
    |        owner_TOD4.transfer(reward_TOD4);
  > |        reward_TOD4 = msg.value;
    |    }
    |
  at buggy_20.sol(514)

[33mWarning[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |        require(msg.sender == owner_TOD14);
    |        owner_TOD14.transfer(reward_TOD14);
  > |        reward_TOD14 = msg.value;
    |    }
    |
  at buggy_20.sol(599)

[33mWarning[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |        require(msg.sender == owner_TOD2);
    |        owner_TOD2.transfer(reward_TOD2);
  > |        reward_TOD2 = msg.value;
    |    }
    |
  at buggy_20.sol(652)

[33mWarning[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |        require(msg.sender == owner_TOD30);
    |        owner_TOD30.transfer(reward_TOD30);
  > |        reward_TOD30 = msg.value;
    |    }
    |
  at buggy_20.sol(683)

[33mWarning[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |        require(msg.sender == owner_TOD8);
    |        owner_TOD8.transfer(reward_TOD8);
  > |        reward_TOD8 = msg.value;
    |    }
    |
  at buggy_20.sol(705)

[33mWarning[0m for UnrestrictedWrite in contract 'RampInstantEthPool':
    |        require(msg.sender == owner_TOD36);
    |        owner_TOD36.transfer(reward_TOD36);
  > |        reward_TOD36 = msg.value;
    |    }
    |
  at buggy_20.sol(751)

[31mViolation[0m for DAOConstantGas in contract 'Stoppable':
    |
    |        require(msg.sender == owner_TOD40);
  > |        owner_TOD40.transfer(reward_TOD40);
    |        reward_TOD40 = msg.value;
    |    }
  at buggy_20.sol(54)

[31mViolation[0m for DAOConstantGas in contract 'Stoppable':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_20.sol(62)

[31mViolation[0m for DAOConstantGas in contract 'Stoppable':
    |
    |        require(msg.sender == owner_TOD10);
  > |        owner_TOD10.transfer(reward_TOD10);
    |        reward_TOD10 = msg.value;
    |    }
  at buggy_20.sol(122)

[31mViolation[0m for DAOConstantGas in contract 'Stoppable':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD10);
    |        claimed_TOD10 = true;
    |    }
  at buggy_20.sol(130)

[31mViolation[0m for TODAmount in contract 'Stoppable':
    |
    |        require(msg.sender == owner_TOD40);
  > |        owner_TOD40.transfer(reward_TOD40);
    |        reward_TOD40 = msg.value;
    |    }
  at buggy_20.sol(54)

[31mViolation[0m for TODAmount in contract 'Stoppable':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_20.sol(62)

[31mViolation[0m for TODAmount in contract 'Stoppable':
    |
    |        require(msg.sender == owner_TOD10);
  > |        owner_TOD10.transfer(reward_TOD10);
    |        reward_TOD10 = msg.value;
    |    }
  at buggy_20.sol(122)

[31mViolation[0m for TODAmount in contract 'Stoppable':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD10);
    |        claimed_TOD10 = true;
    |    }
  at buggy_20.sol(130)

[33mWarning[0m for TODAmount in contract 'Stoppable':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |  address public owner;
  at buggy_20.sol(43)

[33mWarning[0m for TODAmount in contract 'Stoppable':
    |function getReward_TOD17() payable public{
    |     
  > |       winner_TOD17.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(81)

[33mWarning[0m for TODAmount in contract 'Stoppable':
    |function getReward_TOD37() payable public{
    |     
  > |       winner_TOD37.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(104)

[33mWarning[0m for TODAmount in contract 'Stoppable':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |  event IsActiveChanged(bool _isActive);
  at buggy_20.sol(146)

[33mWarning[0m for TODAmount in contract 'Stoppable':
    |function getReward_TOD3() payable public{
    |     
  > |       winner_TOD3.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(171)

[31mViolation[0m for TODReceiver in contract 'Stoppable':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |  address public owner;
  at buggy_20.sol(43)

[31mViolation[0m for TODReceiver in contract 'Stoppable':
    |function getReward_TOD17() payable public{
    |     
  > |       winner_TOD17.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(81)

[31mViolation[0m for TODReceiver in contract 'Stoppable':
    |function getReward_TOD37() payable public{
    |     
  > |       winner_TOD37.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(104)

[31mViolation[0m for TODReceiver in contract 'Stoppable':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |  event IsActiveChanged(bool _isActive);
  at buggy_20.sol(146)

[31mViolation[0m for TODReceiver in contract 'Stoppable':
    |function getReward_TOD3() payable public{
    |     
  > |       winner_TOD3.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(171)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Stoppable':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |  address public owner;
  at buggy_20.sol(43)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Stoppable':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_20.sol(62)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Stoppable':
    |function getReward_TOD17() payable public{
    |     
  > |       winner_TOD17.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(81)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Stoppable':
    |function getReward_TOD37() payable public{
    |     
  > |       winner_TOD37.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(104)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Stoppable':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD10);
    |        claimed_TOD10 = true;
    |    }
  at buggy_20.sol(130)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Stoppable':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |  event IsActiveChanged(bool _isActive);
  at buggy_20.sol(146)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Stoppable':
    |function getReward_TOD3() payable public{
    |     
  > |       winner_TOD3.transfer(msg.value);
    |    }
    |
  at buggy_20.sol(171)

[31mViolation[0m for UnrestrictedWrite in contract 'Stoppable':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD21 = msg.sender;
    |        }
    |    }
  at buggy_20.sol(37)

[31mViolation[0m for UnrestrictedWrite in contract 'Stoppable':
    |
    |        msg.sender.transfer(reward_TOD40);
  > |        claimed_TOD40 = true;
    |    }
    |  event OwnerChanged(address oldOwner, address newOwner);
  at buggy_20.sol(63)

[31mViolation[0m for UnrestrictedWrite in contract 'Stoppable':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD17 = msg.sender;
    |        }
    |    }
  at buggy_20.sol(75)

[31mViolation[0m for UnrestrictedWrite in contract 'Stoppable':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD37 = msg.sender;
    |        }
    |    }
  at buggy_20.sol(98)

[31mViolation[0m for UnrestrictedWrite in contract 'Stoppable':
    |
    |        msg.sender.transfer(reward_TOD10);
  > |        claimed_TOD10 = true;
    |    }
    |  bool public isActive = true;
  at buggy_20.sol(131)

[31mViolation[0m for UnrestrictedWrite in contract 'Stoppable':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD33 = msg.sender;
    |        }
    |    }
  at buggy_20.sol(140)

[31mViolation[0m for UnrestrictedWrite in contract 'Stoppable':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD3 = msg.sender;
    |        }
    |    }
  at buggy_20.sol(165)

[33mWarning[0m for UnrestrictedWrite in contract 'Stoppable':
    |        require(msg.sender == owner_TOD40);
    |        owner_TOD40.transfer(reward_TOD40);
  > |        reward_TOD40 = msg.value;
    |    }
    |
  at buggy_20.sol(55)

[33mWarning[0m for UnrestrictedWrite in contract 'Stoppable':
    |
    |    function changeOwner(address _newOwner) external onlyOwner {
  > |        owner = _newOwner;
    |        emit OwnerChanged(msg.sender, _newOwner);
    |    }
  at buggy_20.sol(90)

[33mWarning[0m for UnrestrictedWrite in contract 'Stoppable':
    |        require(msg.sender == owner_TOD10);
    |        owner_TOD10.transfer(reward_TOD10);
  > |        reward_TOD10 = msg.value;
    |    }
    |
  at buggy_20.sol(123)

[33mWarning[0m for UnrestrictedWrite in contract 'Stoppable':
    |    function setIsActive(bool _isActive) external onlyOwner {
    |        if (_isActive == isActive) return;
  > |        isActive = _isActive;
    |        emit IsActiveChanged(_isActive);
    |    }
  at buggy_20.sol(157)

