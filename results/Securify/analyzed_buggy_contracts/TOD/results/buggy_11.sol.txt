Processing contract: buggy_11.sol:ApproveAndCallFallBack
Processing contract: buggy_11.sol:ERC20Interface
Processing contract: buggy_11.sol:ForTheBlockchain
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_11.sol:Owned
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_11.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for DAOConstantGas in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD26);
  > |        owner_TOD26.transfer(reward_TOD26);
    |        reward_TOD26 = msg.value;
    |    }
  at buggy_11.sol(106)

[31mViolation[0m for DAOConstantGas in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD26);
    |        claimed_TOD26 = true;
    |    }
  at buggy_11.sol(114)

[31mViolation[0m for DAOConstantGas in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD10);
  > |        owner_TOD10.transfer(reward_TOD10);
    |        reward_TOD10 = msg.value;
    |    }
  at buggy_11.sol(194)

[31mViolation[0m for DAOConstantGas in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD10);
    |        claimed_TOD10 = true;
    |    }
  at buggy_11.sol(202)

[31mViolation[0m for DAOConstantGas in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_11.sol(232)

[31mViolation[0m for DAOConstantGas in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_11.sol(240)

[31mViolation[0m for DAOConstantGas in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_11.sol(259)

[31mViolation[0m for DAOConstantGas in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_11.sol(267)

[31mViolation[0m for DAOConstantGas in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_11.sol(283)

[31mViolation[0m for DAOConstantGas in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_11.sol(291)

[31mViolation[0m for DAOConstantGas in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD22);
  > |        owner_TOD22.transfer(reward_TOD22);
    |        reward_TOD22 = msg.value;
    |    }
  at buggy_11.sol(307)

[31mViolation[0m for DAOConstantGas in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD22);
    |        claimed_TOD22 = true;
    |    }
  at buggy_11.sol(315)

[31mViolation[0m for DAOConstantGas in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD12);
  > |        owner_TOD12.transfer(reward_TOD12);
    |        reward_TOD12 = msg.value;
    |    }
  at buggy_11.sol(326)

[31mViolation[0m for DAOConstantGas in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD12);
    |        claimed_TOD12 = true;
    |    }
  at buggy_11.sol(334)

[31mViolation[0m for DAOConstantGas in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD2);
  > |        owner_TOD2.transfer(reward_TOD2);
    |        reward_TOD2 = msg.value;
    |    }
  at buggy_11.sol(375)

[31mViolation[0m for DAOConstantGas in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD2);
    |        claimed_TOD2 = true;
    |    }
  at buggy_11.sol(383)

[31mViolation[0m for DAOConstantGas in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD14);
  > |        owner_TOD14.transfer(reward_TOD14);
    |        reward_TOD14 = msg.value;
    |    }
  at buggy_11.sol(464)

[31mViolation[0m for DAOConstantGas in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD14);
    |        claimed_TOD14 = true;
    |    }
  at buggy_11.sol(472)

[31mViolation[0m for DAOConstantGas in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD30);
  > |        owner_TOD30.transfer(reward_TOD30);
    |        reward_TOD30 = msg.value;
    |    }
  at buggy_11.sol(495)

[31mViolation[0m for DAOConstantGas in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD30);
    |        claimed_TOD30 = true;
    |    }
  at buggy_11.sol(503)

[31mViolation[0m for DAOConstantGas in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD8);
  > |        owner_TOD8.transfer(reward_TOD8);
    |        reward_TOD8 = msg.value;
    |    }
  at buggy_11.sol(528)

[31mViolation[0m for DAOConstantGas in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD8);
    |        claimed_TOD8 = true;
    |    }
  at buggy_11.sol(536)

[31mViolation[0m for DAOConstantGas in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD36);
  > |        owner_TOD36.transfer(reward_TOD36);
    |        reward_TOD36 = msg.value;
    |    }
  at buggy_11.sol(586)

[31mViolation[0m for DAOConstantGas in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_11.sol(594)

[31mViolation[0m for DAOConstantGas in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD40);
  > |        owner_TOD40.transfer(reward_TOD40);
    |        reward_TOD40 = msg.value;
    |    }
  at buggy_11.sol(638)

[31mViolation[0m for DAOConstantGas in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_11.sol(646)

[31mViolation[0m for TODAmount in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD26);
  > |        owner_TOD26.transfer(reward_TOD26);
    |        reward_TOD26 = msg.value;
    |    }
  at buggy_11.sol(106)

[31mViolation[0m for TODAmount in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD26);
    |        claimed_TOD26 = true;
    |    }
  at buggy_11.sol(114)

[31mViolation[0m for TODAmount in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD10);
  > |        owner_TOD10.transfer(reward_TOD10);
    |        reward_TOD10 = msg.value;
    |    }
  at buggy_11.sol(194)

[31mViolation[0m for TODAmount in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD10);
    |        claimed_TOD10 = true;
    |    }
  at buggy_11.sol(202)

[31mViolation[0m for TODAmount in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_11.sol(232)

[31mViolation[0m for TODAmount in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_11.sol(240)

[31mViolation[0m for TODAmount in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_11.sol(259)

[31mViolation[0m for TODAmount in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_11.sol(267)

[31mViolation[0m for TODAmount in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_11.sol(283)

[31mViolation[0m for TODAmount in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_11.sol(291)

[31mViolation[0m for TODAmount in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD22);
  > |        owner_TOD22.transfer(reward_TOD22);
    |        reward_TOD22 = msg.value;
    |    }
  at buggy_11.sol(307)

[31mViolation[0m for TODAmount in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD22);
    |        claimed_TOD22 = true;
    |    }
  at buggy_11.sol(315)

[31mViolation[0m for TODAmount in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD12);
  > |        owner_TOD12.transfer(reward_TOD12);
    |        reward_TOD12 = msg.value;
    |    }
  at buggy_11.sol(326)

[31mViolation[0m for TODAmount in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD12);
    |        claimed_TOD12 = true;
    |    }
  at buggy_11.sol(334)

[31mViolation[0m for TODAmount in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD2);
  > |        owner_TOD2.transfer(reward_TOD2);
    |        reward_TOD2 = msg.value;
    |    }
  at buggy_11.sol(375)

[31mViolation[0m for TODAmount in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD2);
    |        claimed_TOD2 = true;
    |    }
  at buggy_11.sol(383)

[31mViolation[0m for TODAmount in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD14);
  > |        owner_TOD14.transfer(reward_TOD14);
    |        reward_TOD14 = msg.value;
    |    }
  at buggy_11.sol(464)

[31mViolation[0m for TODAmount in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD14);
    |        claimed_TOD14 = true;
    |    }
  at buggy_11.sol(472)

[31mViolation[0m for TODAmount in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD30);
  > |        owner_TOD30.transfer(reward_TOD30);
    |        reward_TOD30 = msg.value;
    |    }
  at buggy_11.sol(495)

[31mViolation[0m for TODAmount in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD30);
    |        claimed_TOD30 = true;
    |    }
  at buggy_11.sol(503)

[31mViolation[0m for TODAmount in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD8);
  > |        owner_TOD8.transfer(reward_TOD8);
    |        reward_TOD8 = msg.value;
    |    }
  at buggy_11.sol(528)

[31mViolation[0m for TODAmount in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD8);
    |        claimed_TOD8 = true;
    |    }
  at buggy_11.sol(536)

[31mViolation[0m for TODAmount in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD36);
  > |        owner_TOD36.transfer(reward_TOD36);
    |        reward_TOD36 = msg.value;
    |    }
  at buggy_11.sol(586)

[31mViolation[0m for TODAmount in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_11.sol(594)

[31mViolation[0m for TODAmount in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD40);
  > |        owner_TOD40.transfer(reward_TOD40);
    |        reward_TOD40 = msg.value;
    |    }
  at buggy_11.sol(638)

[31mViolation[0m for TODAmount in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_11.sol(646)

[33mWarning[0m for TODAmount in contract 'ForTheBlockchain':
    |function getReward_TOD37() payable public{
    |     
  > |       winner_TOD37.transfer(msg.value);
    |    }
    |    function balanceOf(address tokenOwner) public view returns (uint balance);
  at buggy_11.sol(40)

[33mWarning[0m for TODAmount in contract 'ForTheBlockchain':
    |function getReward_TOD3() payable public{
    |     
  > |       winner_TOD3.transfer(msg.value);
    |    }
    |    function allowance(address tokenOwner, address spender) public view returns (uint remaining);
  at buggy_11.sol(54)

[33mWarning[0m for TODAmount in contract 'ForTheBlockchain':
    |function getReward_TOD9() payable public{
    |     
  > |       winner_TOD9.transfer(msg.value);
    |    }
    |    function transfer(address to, uint tokens) public returns (bool success);
  at buggy_11.sol(68)

[33mWarning[0m for TODAmount in contract 'ForTheBlockchain':
    |function getReward_TOD25() payable public{
    |     
  > |       winner_TOD25.transfer(msg.value);
    |    }
    |    function approve(address spender, uint tokens) public returns (bool success);
  at buggy_11.sol(82)

[33mWarning[0m for TODAmount in contract 'ForTheBlockchain':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |    function transferFrom(address from, address to, uint tokens) public returns (bool success);
  at buggy_11.sol(96)

[33mWarning[0m for TODAmount in contract 'ForTheBlockchain':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |  event Transfer(address indexed from, address indexed to, uint tokens);
  at buggy_11.sol(129)

[33mWarning[0m for TODAmount in contract 'ForTheBlockchain':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event Approval(address indexed tokenOwner, address indexed spender, uint tokens);
  at buggy_11.sol(143)

[33mWarning[0m for TODAmount in contract 'ForTheBlockchain':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |  address public owner;
  at buggy_11.sol(184)

[33mWarning[0m for TODAmount in contract 'ForTheBlockchain':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event OwnershipTransferred(address indexed _from, address indexed _to);
  at buggy_11.sol(218)

[33mWarning[0m for TODAmount in contract 'ForTheBlockchain':
    |function getReward_TOD11() payable public{
    |     
  > |       winner_TOD11.transfer(msg.value);
    |    }
    |  string public  name;
  at buggy_11.sol(349)

[33mWarning[0m for TODAmount in contract 'ForTheBlockchain':
    |function getReward_TOD1() payable public{
    |     
  > |       winner_TOD1.transfer(msg.value);
    |    }
    |  uint _totalSupply;
  at buggy_11.sol(363)

[33mWarning[0m for TODAmount in contract 'ForTheBlockchain':
    |function getReward_TOD17() payable public{
    |     
  > |       winner_TOD17.transfer(msg.value);
    |    }
    |  mapping(address => mapping(address => uint)) allowed;
  at buggy_11.sol(398)

[33mWarning[0m for TODAmount in contract 'ForTheBlockchain':
    |function getReward_TOD7() payable public{
    |     
  > |       winner_TOD7.transfer(msg.value);
    |    }
    |
  at buggy_11.sol(426)

[33mWarning[0m for TODAmount in contract 'ForTheBlockchain':
    |function getReward_TOD23() payable public{
    |     
  > |       winner_TOD23.transfer(msg.value);
    |    }
    |
  at buggy_11.sol(447)

[33mWarning[0m for TODAmount in contract 'ForTheBlockchain':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |
  at buggy_11.sol(568)

[33mWarning[0m for TODAmount in contract 'ForTheBlockchain':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |
  at buggy_11.sol(621)

[33mWarning[0m for TODAmount in contract 'ForTheBlockchain':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |}
  at buggy_11.sol(668)

[31mViolation[0m for TODReceiver in contract 'ForTheBlockchain':
    |function getReward_TOD37() payable public{
    |     
  > |       winner_TOD37.transfer(msg.value);
    |    }
    |    function balanceOf(address tokenOwner) public view returns (uint balance);
  at buggy_11.sol(40)

[31mViolation[0m for TODReceiver in contract 'ForTheBlockchain':
    |function getReward_TOD3() payable public{
    |     
  > |       winner_TOD3.transfer(msg.value);
    |    }
    |    function allowance(address tokenOwner, address spender) public view returns (uint remaining);
  at buggy_11.sol(54)

[31mViolation[0m for TODReceiver in contract 'ForTheBlockchain':
    |function getReward_TOD9() payable public{
    |     
  > |       winner_TOD9.transfer(msg.value);
    |    }
    |    function transfer(address to, uint tokens) public returns (bool success);
  at buggy_11.sol(68)

[31mViolation[0m for TODReceiver in contract 'ForTheBlockchain':
    |function getReward_TOD25() payable public{
    |     
  > |       winner_TOD25.transfer(msg.value);
    |    }
    |    function approve(address spender, uint tokens) public returns (bool success);
  at buggy_11.sol(82)

[31mViolation[0m for TODReceiver in contract 'ForTheBlockchain':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |    function transferFrom(address from, address to, uint tokens) public returns (bool success);
  at buggy_11.sol(96)

[31mViolation[0m for TODReceiver in contract 'ForTheBlockchain':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |  event Transfer(address indexed from, address indexed to, uint tokens);
  at buggy_11.sol(129)

[31mViolation[0m for TODReceiver in contract 'ForTheBlockchain':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event Approval(address indexed tokenOwner, address indexed spender, uint tokens);
  at buggy_11.sol(143)

[31mViolation[0m for TODReceiver in contract 'ForTheBlockchain':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |  address public owner;
  at buggy_11.sol(184)

[31mViolation[0m for TODReceiver in contract 'ForTheBlockchain':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event OwnershipTransferred(address indexed _from, address indexed _to);
  at buggy_11.sol(218)

[31mViolation[0m for TODReceiver in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_11.sol(259)

[31mViolation[0m for TODReceiver in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_11.sol(283)

[31mViolation[0m for TODReceiver in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD22);
  > |        owner_TOD22.transfer(reward_TOD22);
    |        reward_TOD22 = msg.value;
    |    }
  at buggy_11.sol(307)

[31mViolation[0m for TODReceiver in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD12);
  > |        owner_TOD12.transfer(reward_TOD12);
    |        reward_TOD12 = msg.value;
    |    }
  at buggy_11.sol(326)

[31mViolation[0m for TODReceiver in contract 'ForTheBlockchain':
    |function getReward_TOD11() payable public{
    |     
  > |       winner_TOD11.transfer(msg.value);
    |    }
    |  string public  name;
  at buggy_11.sol(349)

[31mViolation[0m for TODReceiver in contract 'ForTheBlockchain':
    |function getReward_TOD1() payable public{
    |     
  > |       winner_TOD1.transfer(msg.value);
    |    }
    |  uint _totalSupply;
  at buggy_11.sol(363)

[31mViolation[0m for TODReceiver in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD2);
  > |        owner_TOD2.transfer(reward_TOD2);
    |        reward_TOD2 = msg.value;
    |    }
  at buggy_11.sol(375)

[31mViolation[0m for TODReceiver in contract 'ForTheBlockchain':
    |function getReward_TOD17() payable public{
    |     
  > |       winner_TOD17.transfer(msg.value);
    |    }
    |  mapping(address => mapping(address => uint)) allowed;
  at buggy_11.sol(398)

[31mViolation[0m for TODReceiver in contract 'ForTheBlockchain':
    |function getReward_TOD7() payable public{
    |     
  > |       winner_TOD7.transfer(msg.value);
    |    }
    |
  at buggy_11.sol(426)

[31mViolation[0m for TODReceiver in contract 'ForTheBlockchain':
    |function getReward_TOD23() payable public{
    |     
  > |       winner_TOD23.transfer(msg.value);
    |    }
    |
  at buggy_11.sol(447)

[31mViolation[0m for TODReceiver in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD30);
  > |        owner_TOD30.transfer(reward_TOD30);
    |        reward_TOD30 = msg.value;
    |    }
  at buggy_11.sol(495)

[31mViolation[0m for TODReceiver in contract 'ForTheBlockchain':
    |
    |        require(msg.sender == owner_TOD8);
  > |        owner_TOD8.transfer(reward_TOD8);
    |        reward_TOD8 = msg.value;
    |    }
  at buggy_11.sol(528)

[31mViolation[0m for TODReceiver in contract 'ForTheBlockchain':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |
  at buggy_11.sol(568)

[31mViolation[0m for TODReceiver in contract 'ForTheBlockchain':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |
  at buggy_11.sol(621)

[31mViolation[0m for TODReceiver in contract 'ForTheBlockchain':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |}
  at buggy_11.sol(668)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |function getReward_TOD37() payable public{
    |     
  > |       winner_TOD37.transfer(msg.value);
    |    }
    |    function balanceOf(address tokenOwner) public view returns (uint balance);
  at buggy_11.sol(40)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |function getReward_TOD3() payable public{
    |     
  > |       winner_TOD3.transfer(msg.value);
    |    }
    |    function allowance(address tokenOwner, address spender) public view returns (uint remaining);
  at buggy_11.sol(54)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |function getReward_TOD9() payable public{
    |     
  > |       winner_TOD9.transfer(msg.value);
    |    }
    |    function transfer(address to, uint tokens) public returns (bool success);
  at buggy_11.sol(68)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |function getReward_TOD25() payable public{
    |     
  > |       winner_TOD25.transfer(msg.value);
    |    }
    |    function approve(address spender, uint tokens) public returns (bool success);
  at buggy_11.sol(82)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |    function transferFrom(address from, address to, uint tokens) public returns (bool success);
  at buggy_11.sol(96)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD26);
    |        claimed_TOD26 = true;
    |    }
  at buggy_11.sol(114)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |  event Transfer(address indexed from, address indexed to, uint tokens);
  at buggy_11.sol(129)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event Approval(address indexed tokenOwner, address indexed spender, uint tokens);
  at buggy_11.sol(143)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |  address public owner;
  at buggy_11.sol(184)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD10);
    |        claimed_TOD10 = true;
    |    }
  at buggy_11.sol(202)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event OwnershipTransferred(address indexed _from, address indexed _to);
  at buggy_11.sol(218)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_11.sol(240)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_11.sol(267)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_11.sol(291)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD22);
    |        claimed_TOD22 = true;
    |    }
  at buggy_11.sol(315)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD12);
    |        claimed_TOD12 = true;
    |    }
  at buggy_11.sol(334)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |function getReward_TOD11() payable public{
    |     
  > |       winner_TOD11.transfer(msg.value);
    |    }
    |  string public  name;
  at buggy_11.sol(349)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |function getReward_TOD1() payable public{
    |     
  > |       winner_TOD1.transfer(msg.value);
    |    }
    |  uint _totalSupply;
  at buggy_11.sol(363)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD2);
    |        claimed_TOD2 = true;
    |    }
  at buggy_11.sol(383)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |function getReward_TOD17() payable public{
    |     
  > |       winner_TOD17.transfer(msg.value);
    |    }
    |  mapping(address => mapping(address => uint)) allowed;
  at buggy_11.sol(398)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |function getReward_TOD7() payable public{
    |     
  > |       winner_TOD7.transfer(msg.value);
    |    }
    |
  at buggy_11.sol(426)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |function getReward_TOD23() payable public{
    |     
  > |       winner_TOD23.transfer(msg.value);
    |    }
    |
  at buggy_11.sol(447)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD14);
    |        claimed_TOD14 = true;
    |    }
  at buggy_11.sol(472)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD30);
    |        claimed_TOD30 = true;
    |    }
  at buggy_11.sol(503)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD8);
    |        claimed_TOD8 = true;
    |    }
  at buggy_11.sol(536)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |
  at buggy_11.sol(568)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_11.sol(594)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |
  at buggy_11.sol(621)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_11.sol(646)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ForTheBlockchain':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |}
  at buggy_11.sol(668)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD37 = msg.sender;
    |        }
    |    }
  at buggy_11.sol(34)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD3 = msg.sender;
    |        }
    |    }
  at buggy_11.sol(48)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD9 = msg.sender;
    |        }
    |    }
  at buggy_11.sol(62)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD25 = msg.sender;
    |        }
    |    }
  at buggy_11.sol(76)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD19 = msg.sender;
    |        }
    |    }
  at buggy_11.sol(90)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |
    |        msg.sender.transfer(reward_TOD26);
  > |        claimed_TOD26 = true;
    |    }
    |
  at buggy_11.sol(115)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD27 = msg.sender;
    |        }
    |    }
  at buggy_11.sol(123)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD31 = msg.sender;
    |        }
    |    }
  at buggy_11.sol(137)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD21 = msg.sender;
    |        }
    |    }
  at buggy_11.sol(178)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |
    |        msg.sender.transfer(reward_TOD10);
  > |        claimed_TOD10 = true;
    |    }
    |  address public newOwner;
  at buggy_11.sol(203)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD13 = msg.sender;
    |        }
    |    }
  at buggy_11.sol(212)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |
    |        msg.sender.transfer(reward_TOD32);
  > |        claimed_TOD32 = true;
    |    }
    |
  at buggy_11.sol(241)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |
    |        msg.sender.transfer(reward_TOD38);
  > |        claimed_TOD38 = true;
    |    }
    |    function acceptOwnership() public {
  at buggy_11.sol(268)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |
    |        msg.sender.transfer(reward_TOD4);
  > |        claimed_TOD4 = true;
    |    }
    |}
  at buggy_11.sol(292)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |
    |        msg.sender.transfer(reward_TOD22);
  > |        claimed_TOD22 = true;
    |    }
    |  string public symbol;
  at buggy_11.sol(316)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |
    |        msg.sender.transfer(reward_TOD12);
  > |        claimed_TOD12 = true;
    |    }
    |  uint public decimals;
  at buggy_11.sol(335)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD11 = msg.sender;
    |        }
    |    }
  at buggy_11.sol(343)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD1 = msg.sender;
    |        }
    |    }
  at buggy_11.sol(357)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |
    |        msg.sender.transfer(reward_TOD2);
  > |        claimed_TOD2 = true;
    |    }
    |  mapping(address => uint) balances;
  at buggy_11.sol(384)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD17 = msg.sender;
    |        }
    |    }
  at buggy_11.sol(392)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD7 = msg.sender;
    |        }
    |    }
  at buggy_11.sol(420)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD23 = msg.sender;
    |        }
    |    }
  at buggy_11.sol(441)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |
    |        msg.sender.transfer(reward_TOD14);
  > |        claimed_TOD14 = true;
    |    }
    |
  at buggy_11.sol(473)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |    function transfer(address to, uint tokens) public returns (bool success) {
    |        balances[msg.sender] = balances[msg.sender].sub(tokens);
  > |        balances[to] = balances[to].add(tokens);
    |        emit Transfer(msg.sender, to, tokens);
    |        return true;
  at buggy_11.sol(484)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |
    |        msg.sender.transfer(reward_TOD30);
  > |        claimed_TOD30 = true;
    |    }
    |
  at buggy_11.sol(504)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |
    |        msg.sender.transfer(reward_TOD8);
  > |        claimed_TOD8 = true;
    |    }
    |
  at buggy_11.sol(537)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |    // ------------------------------------------------------------------------
    |    function transferFrom(address from, address to, uint tokens) public returns (bool success) {
  > |        balances[from] = balances[from].sub(tokens);
    |        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);
    |        balances[to] = balances[to].add(tokens);
  at buggy_11.sol(551)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |        balances[from] = balances[from].sub(tokens);
    |        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);
  > |        balances[to] = balances[to].add(tokens);
    |        emit Transfer(from, to, tokens);
    |        return true;
  at buggy_11.sol(553)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD39 = msg.sender;
    |        }
    |    }
  at buggy_11.sol(562)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |
    |        msg.sender.transfer(reward_TOD36);
  > |        claimed_TOD36 = true;
    |    }
    |
  at buggy_11.sol(595)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD35 = msg.sender;
    |        }
    |    }
  at buggy_11.sol(615)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |
    |        msg.sender.transfer(reward_TOD40);
  > |        claimed_TOD40 = true;
    |    }
    |
  at buggy_11.sol(647)

[31mViolation[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD33 = msg.sender;
    |        }
    |    }
  at buggy_11.sol(662)

[33mWarning[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |        require(msg.sender == owner_TOD26);
    |        owner_TOD26.transfer(reward_TOD26);
  > |        reward_TOD26 = msg.value;
    |    }
    |
  at buggy_11.sol(107)

[33mWarning[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |        require(msg.sender == owner_TOD10);
    |        owner_TOD10.transfer(reward_TOD10);
  > |        reward_TOD10 = msg.value;
    |    }
    |
  at buggy_11.sol(195)

[33mWarning[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |        require(msg.sender == owner_TOD32);
    |        owner_TOD32.transfer(reward_TOD32);
  > |        reward_TOD32 = msg.value;
    |    }
    |
  at buggy_11.sol(233)

[33mWarning[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |bool claimed_TOD38 = false;
  at buggy_11.sol(250)

[33mWarning[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |        require(msg.sender == owner_TOD38);
    |        owner_TOD38.transfer(reward_TOD38);
  > |        reward_TOD38 = msg.value;
    |    }
    |
  at buggy_11.sol(260)

[33mWarning[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |        require(msg.sender == newOwner);
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |        newOwner = address(0);
    |    }
  at buggy_11.sol(273)

[33mWarning[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |        emit OwnershipTransferred(owner, newOwner);
    |        owner = newOwner;
  > |        newOwner = address(0);
    |    }
    |bool claimed_TOD4 = false;
  at buggy_11.sol(274)

[33mWarning[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |        require(msg.sender == owner_TOD4);
    |        owner_TOD4.transfer(reward_TOD4);
  > |        reward_TOD4 = msg.value;
    |    }
    |
  at buggy_11.sol(284)

[33mWarning[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |        require(msg.sender == owner_TOD22);
    |        owner_TOD22.transfer(reward_TOD22);
  > |        reward_TOD22 = msg.value;
    |    }
    |
  at buggy_11.sol(308)

[33mWarning[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |        require(msg.sender == owner_TOD12);
    |        owner_TOD12.transfer(reward_TOD12);
  > |        reward_TOD12 = msg.value;
    |    }
    |
  at buggy_11.sol(327)

[33mWarning[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |        require(msg.sender == owner_TOD2);
    |        owner_TOD2.transfer(reward_TOD2);
  > |        reward_TOD2 = msg.value;
    |    }
    |
  at buggy_11.sol(376)

[33mWarning[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |        require(msg.sender == owner_TOD14);
    |        owner_TOD14.transfer(reward_TOD14);
  > |        reward_TOD14 = msg.value;
    |    }
    |
  at buggy_11.sol(465)

[33mWarning[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |        require(msg.sender == owner_TOD30);
    |        owner_TOD30.transfer(reward_TOD30);
  > |        reward_TOD30 = msg.value;
    |    }
    |
  at buggy_11.sol(496)

[33mWarning[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |        require(msg.sender == owner_TOD8);
    |        owner_TOD8.transfer(reward_TOD8);
  > |        reward_TOD8 = msg.value;
    |    }
    |
  at buggy_11.sol(529)

[33mWarning[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |        require(msg.sender == owner_TOD36);
    |        owner_TOD36.transfer(reward_TOD36);
  > |        reward_TOD36 = msg.value;
    |    }
    |
  at buggy_11.sol(587)

[33mWarning[0m for UnrestrictedWrite in contract 'ForTheBlockchain':
    |        require(msg.sender == owner_TOD40);
    |        owner_TOD40.transfer(reward_TOD40);
  > |        reward_TOD40 = msg.value;
    |    }
    |
  at buggy_11.sol(639)

[31mViolation[0m for DAOConstantGas in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD10);
  > |        owner_TOD10.transfer(reward_TOD10);
    |        reward_TOD10 = msg.value;
    |    }
  at buggy_11.sol(194)

[31mViolation[0m for DAOConstantGas in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD10);
    |        claimed_TOD10 = true;
    |    }
  at buggy_11.sol(202)

[31mViolation[0m for DAOConstantGas in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_11.sol(232)

[31mViolation[0m for DAOConstantGas in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_11.sol(240)

[31mViolation[0m for DAOConstantGas in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_11.sol(259)

[31mViolation[0m for DAOConstantGas in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_11.sol(267)

[31mViolation[0m for DAOConstantGas in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_11.sol(283)

[31mViolation[0m for DAOConstantGas in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_11.sol(291)

[31mViolation[0m for TODAmount in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD10);
  > |        owner_TOD10.transfer(reward_TOD10);
    |        reward_TOD10 = msg.value;
    |    }
  at buggy_11.sol(194)

[31mViolation[0m for TODAmount in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD10);
    |        claimed_TOD10 = true;
    |    }
  at buggy_11.sol(202)

[31mViolation[0m for TODAmount in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_11.sol(232)

[31mViolation[0m for TODAmount in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_11.sol(240)

[31mViolation[0m for TODAmount in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_11.sol(259)

[31mViolation[0m for TODAmount in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_11.sol(267)

[31mViolation[0m for TODAmount in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_11.sol(283)

[31mViolation[0m for TODAmount in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_11.sol(291)

[33mWarning[0m for TODAmount in contract 'Owned':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |  address public owner;
  at buggy_11.sol(184)

[33mWarning[0m for TODAmount in contract 'Owned':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event OwnershipTransferred(address indexed _from, address indexed _to);
  at buggy_11.sol(218)

[31mViolation[0m for TODReceiver in contract 'Owned':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |  address public owner;
  at buggy_11.sol(184)

[31mViolation[0m for TODReceiver in contract 'Owned':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event OwnershipTransferred(address indexed _from, address indexed _to);
  at buggy_11.sol(218)

[31mViolation[0m for TODReceiver in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_11.sol(259)

[31mViolation[0m for TODReceiver in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_11.sol(283)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Owned':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |  address public owner;
  at buggy_11.sol(184)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD10);
    |        claimed_TOD10 = true;
    |    }
  at buggy_11.sol(202)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Owned':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event OwnershipTransferred(address indexed _from, address indexed _to);
  at buggy_11.sol(218)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_11.sol(240)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_11.sol(267)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_11.sol(291)

[31mViolation[0m for UnrestrictedWrite in contract 'Owned':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD21 = msg.sender;
    |        }
    |    }
  at buggy_11.sol(178)

[31mViolation[0m for UnrestrictedWrite in contract 'Owned':
    |
    |        msg.sender.transfer(reward_TOD10);
  > |        claimed_TOD10 = true;
    |    }
    |  address public newOwner;
  at buggy_11.sol(203)

[31mViolation[0m for UnrestrictedWrite in contract 'Owned':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD13 = msg.sender;
    |        }
    |    }
  at buggy_11.sol(212)

[31mViolation[0m for UnrestrictedWrite in contract 'Owned':
    |
    |        msg.sender.transfer(reward_TOD32);
  > |        claimed_TOD32 = true;
    |    }
    |
  at buggy_11.sol(241)

[31mViolation[0m for UnrestrictedWrite in contract 'Owned':
    |
    |        msg.sender.transfer(reward_TOD38);
  > |        claimed_TOD38 = true;
    |    }
    |    function acceptOwnership() public {
  at buggy_11.sol(268)

[31mViolation[0m for UnrestrictedWrite in contract 'Owned':
    |
    |        msg.sender.transfer(reward_TOD4);
  > |        claimed_TOD4 = true;
    |    }
    |}
  at buggy_11.sol(292)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(msg.sender == owner_TOD10);
    |        owner_TOD10.transfer(reward_TOD10);
  > |        reward_TOD10 = msg.value;
    |    }
    |
  at buggy_11.sol(195)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(msg.sender == owner_TOD32);
    |        owner_TOD32.transfer(reward_TOD32);
  > |        reward_TOD32 = msg.value;
    |    }
    |
  at buggy_11.sol(233)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |bool claimed_TOD38 = false;
  at buggy_11.sol(250)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(msg.sender == owner_TOD38);
    |        owner_TOD38.transfer(reward_TOD38);
  > |        reward_TOD38 = msg.value;
    |    }
    |
  at buggy_11.sol(260)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(msg.sender == newOwner);
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |        newOwner = address(0);
    |    }
  at buggy_11.sol(273)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        emit OwnershipTransferred(owner, newOwner);
    |        owner = newOwner;
  > |        newOwner = address(0);
    |    }
    |bool claimed_TOD4 = false;
  at buggy_11.sol(274)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(msg.sender == owner_TOD4);
    |        owner_TOD4.transfer(reward_TOD4);
  > |        reward_TOD4 = msg.value;
    |    }
    |
  at buggy_11.sol(284)

