Processing contract: buggy_27.sol:DanPanCoin
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_27.sol:ERC20Detailed
Processing contract: buggy_27.sol:IERC20
Processing contract: buggy_27.sol:Ownable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_27.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for DAOConstantGas in contract 'Ownable':
    |
    |        require(msg.sender == owner_TOD40);
  > |        owner_TOD40.transfer(reward_TOD40);
    |        reward_TOD40 = msg.value;
    |    }
  at buggy_27.sol(61)

[31mViolation[0m for DAOConstantGas in contract 'Ownable':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_27.sol(69)

[31mViolation[0m for DAOConstantGas in contract 'Ownable':
    |
    |        require(msg.sender == owner_TOD34);
  > |        owner_TOD34.transfer(reward_TOD34);
    |        reward_TOD34 = msg.value;
    |    }
  at buggy_27.sol(85)

[31mViolation[0m for DAOConstantGas in contract 'Ownable':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD34);
    |        claimed_TOD34 = true;
    |    }
  at buggy_27.sol(93)

[31mViolation[0m for TODAmount in contract 'Ownable':
    |
    |        require(msg.sender == owner_TOD40);
  > |        owner_TOD40.transfer(reward_TOD40);
    |        reward_TOD40 = msg.value;
    |    }
  at buggy_27.sol(61)

[31mViolation[0m for TODAmount in contract 'Ownable':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_27.sol(69)

[31mViolation[0m for TODAmount in contract 'Ownable':
    |
    |        require(msg.sender == owner_TOD34);
  > |        owner_TOD34.transfer(reward_TOD34);
    |        reward_TOD34 = msg.value;
    |    }
  at buggy_27.sol(85)

[31mViolation[0m for TODAmount in contract 'Ownable':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD34);
    |        claimed_TOD34 = true;
    |    }
  at buggy_27.sol(93)

[33mWarning[0m for TODAmount in contract 'Ownable':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |    
  at buggy_27.sol(120)

[31mViolation[0m for TODReceiver in contract 'Ownable':
    |
    |        require(msg.sender == owner_TOD34);
  > |        owner_TOD34.transfer(reward_TOD34);
    |        reward_TOD34 = msg.value;
    |    }
  at buggy_27.sol(85)

[31mViolation[0m for TODReceiver in contract 'Ownable':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |    
  at buggy_27.sol(120)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Ownable':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_27.sol(69)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Ownable':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD34);
    |        claimed_TOD34 = true;
    |    }
  at buggy_27.sol(93)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Ownable':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |    
  at buggy_27.sol(120)

[31mViolation[0m for UnrestrictedWrite in contract 'Ownable':
    |
    |        msg.sender.transfer(reward_TOD40);
  > |        claimed_TOD40 = true;
    |    }
    |  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);
  at buggy_27.sol(70)

[31mViolation[0m for UnrestrictedWrite in contract 'Ownable':
    |
    |        msg.sender.transfer(reward_TOD34);
  > |        claimed_TOD34 = true;
    |    }
    |    
  at buggy_27.sol(94)

[31mViolation[0m for UnrestrictedWrite in contract 'Ownable':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD21 = msg.sender;
    |        }
    |    }
  at buggy_27.sol(114)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |        require(msg.sender == owner_TOD40);
    |        owner_TOD40.transfer(reward_TOD40);
  > |        reward_TOD40 = msg.value;
    |    }
    |
  at buggy_27.sol(62)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |        require(msg.sender == owner_TOD34);
    |        owner_TOD34.transfer(reward_TOD34);
  > |        reward_TOD34 = msg.value;
    |    }
    |
  at buggy_27.sol(86)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |      require(newOwner != address(0));
    |      emit OwnershipTransferred(owner, newOwner);
  > |      owner = newOwner;
    |    }
    |address payable winner_TOD21;
  at buggy_27.sol(107)

