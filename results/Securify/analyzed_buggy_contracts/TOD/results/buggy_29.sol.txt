Processing contract: buggy_29.sol:ERC20Interface
Processing contract: buggy_29.sol:IERC20Interface
Processing contract: buggy_29.sol:RaffleToken
Processing contract: buggy_29.sol:RaffleTokenExchange
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_29.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for DAOConstantGas in contract 'RaffleTokenExchange':
    |
    |        require(msg.sender == owner_TOD26);
  > |        owner_TOD26.transfer(reward_TOD26);
    |        reward_TOD26 = msg.value;
    |    }
  at buggy_29.sol(211)

[31mViolation[0m for DAOConstantGas in contract 'RaffleTokenExchange':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD26);
    |        claimed_TOD26 = true;
    |    }
  at buggy_29.sol(219)

[31mViolation[0m for DAOConstantGas in contract 'RaffleTokenExchange':
    |
    |        require(msg.sender == owner_TOD20);
  > |        owner_TOD20.transfer(reward_TOD20);
    |        reward_TOD20 = msg.value;
    |    }
  at buggy_29.sol(233)

[31mViolation[0m for DAOConstantGas in contract 'RaffleTokenExchange':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD20);
    |        claimed_TOD20 = true;
    |    }
  at buggy_29.sol(241)

[31mViolation[0m for DAOConstantGas in contract 'RaffleTokenExchange':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_29.sol(255)

[31mViolation[0m for DAOConstantGas in contract 'RaffleTokenExchange':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_29.sol(263)

[31mViolation[0m for DAOConstantGas in contract 'RaffleTokenExchange':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_29.sol(277)

[31mViolation[0m for DAOConstantGas in contract 'RaffleTokenExchange':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_29.sol(285)

[31mViolation[0m for DAOConstantGas in contract 'RaffleTokenExchange':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_29.sol(299)

[31mViolation[0m for DAOConstantGas in contract 'RaffleTokenExchange':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_29.sol(307)

[31mViolation[0m for DAOConstantGas in contract 'RaffleTokenExchange':
    |
    |        require(msg.sender == owner_TOD30);
  > |        owner_TOD30.transfer(reward_TOD30);
    |        reward_TOD30 = msg.value;
    |    }
  at buggy_29.sol(434)

[31mViolation[0m for DAOConstantGas in contract 'RaffleTokenExchange':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD30);
    |        claimed_TOD30 = true;
    |    }
  at buggy_29.sol(442)

[31mViolation[0m for DAOConstantGas in contract 'RaffleTokenExchange':
    |            if(listing.amountLeft == 0) { listing.active = false; }
    |            uint256 amountToPay = listing.pricePerToken * amount;
  > |            listing.seller.transfer(amountToPay);
    |            totalAmountPayed = totalAmountPayed.add(amountToPay);
    |            totalAmount = totalAmount.add(amount);
  at buggy_29.sol(463)

[31mViolation[0m for DAOConstantGas in contract 'RaffleTokenExchange':
    |
    |        require(msg.sender == owner_TOD8);
  > |        owner_TOD8.transfer(reward_TOD8);
    |        reward_TOD8 = msg.value;
    |    }
  at buggy_29.sol(483)

[31mViolation[0m for DAOConstantGas in contract 'RaffleTokenExchange':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD8);
    |        claimed_TOD8 = true;
    |    }
  at buggy_29.sol(491)

[31mViolation[0m for DAOConstantGas in contract 'RaffleTokenExchange':
    |
    |        require(msg.sender == owner_TOD36);
  > |        owner_TOD36.transfer(reward_TOD36);
    |        reward_TOD36 = msg.value;
    |    }
  at buggy_29.sol(539)

[31mViolation[0m for DAOConstantGas in contract 'RaffleTokenExchange':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_29.sol(547)

[31mViolation[0m for DAOConstantGas in contract 'RaffleTokenExchange':
    |
    |        require(msg.sender == owner_TOD40);
  > |        owner_TOD40.transfer(reward_TOD40);
    |        reward_TOD40 = msg.value;
    |    }
  at buggy_29.sol(582)

[31mViolation[0m for DAOConstantGas in contract 'RaffleTokenExchange':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_29.sol(590)

[31mViolation[0m for TODAmount in contract 'RaffleTokenExchange':
    |
    |        require(msg.sender == owner_TOD26);
  > |        owner_TOD26.transfer(reward_TOD26);
    |        reward_TOD26 = msg.value;
    |    }
  at buggy_29.sol(211)

[31mViolation[0m for TODAmount in contract 'RaffleTokenExchange':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD26);
    |        claimed_TOD26 = true;
    |    }
  at buggy_29.sol(219)

[31mViolation[0m for TODAmount in contract 'RaffleTokenExchange':
    |
    |        require(msg.sender == owner_TOD20);
  > |        owner_TOD20.transfer(reward_TOD20);
    |        reward_TOD20 = msg.value;
    |    }
  at buggy_29.sol(233)

[31mViolation[0m for TODAmount in contract 'RaffleTokenExchange':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD20);
    |        claimed_TOD20 = true;
    |    }
  at buggy_29.sol(241)

[31mViolation[0m for TODAmount in contract 'RaffleTokenExchange':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_29.sol(255)

[31mViolation[0m for TODAmount in contract 'RaffleTokenExchange':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_29.sol(263)

[31mViolation[0m for TODAmount in contract 'RaffleTokenExchange':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_29.sol(277)

[31mViolation[0m for TODAmount in contract 'RaffleTokenExchange':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_29.sol(285)

[31mViolation[0m for TODAmount in contract 'RaffleTokenExchange':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_29.sol(299)

[31mViolation[0m for TODAmount in contract 'RaffleTokenExchange':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_29.sol(307)

[31mViolation[0m for TODAmount in contract 'RaffleTokenExchange':
    |
    |        require(msg.sender == owner_TOD30);
  > |        owner_TOD30.transfer(reward_TOD30);
    |        reward_TOD30 = msg.value;
    |    }
  at buggy_29.sol(434)

[31mViolation[0m for TODAmount in contract 'RaffleTokenExchange':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD30);
    |        claimed_TOD30 = true;
    |    }
  at buggy_29.sol(442)

[31mViolation[0m for TODAmount in contract 'RaffleTokenExchange':
    |
    |        require(msg.sender == owner_TOD8);
  > |        owner_TOD8.transfer(reward_TOD8);
    |        reward_TOD8 = msg.value;
    |    }
  at buggy_29.sol(483)

[31mViolation[0m for TODAmount in contract 'RaffleTokenExchange':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD8);
    |        claimed_TOD8 = true;
    |    }
  at buggy_29.sol(491)

[31mViolation[0m for TODAmount in contract 'RaffleTokenExchange':
    |
    |        require(msg.sender == owner_TOD36);
  > |        owner_TOD36.transfer(reward_TOD36);
    |        reward_TOD36 = msg.value;
    |    }
  at buggy_29.sol(539)

[31mViolation[0m for TODAmount in contract 'RaffleTokenExchange':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_29.sol(547)

[31mViolation[0m for TODAmount in contract 'RaffleTokenExchange':
    |
    |        require(msg.sender == owner_TOD40);
  > |        owner_TOD40.transfer(reward_TOD40);
    |        reward_TOD40 = msg.value;
    |    }
  at buggy_29.sol(582)

[31mViolation[0m for TODAmount in contract 'RaffleTokenExchange':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_29.sol(590)

[33mWarning[0m for TODAmount in contract 'RaffleTokenExchange':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |  bool public paused;
  at buggy_29.sol(198)

[33mWarning[0m for TODAmount in contract 'RaffleTokenExchange':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |  event Listed(uint256 id, uint256 pricePerToken, uint256 initialAmount, address seller);
  at buggy_29.sol(372)

[33mWarning[0m for TODAmount in contract 'RaffleTokenExchange':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event Canceled(uint256 id);
  at buggy_29.sol(386)

[33mWarning[0m for TODAmount in contract 'RaffleTokenExchange':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event Purchased(uint256 id, uint256 totalAmount, uint256 totalAmountPayed, uint256 timestamp);
  at buggy_29.sol(400)

[33mWarning[0m for TODAmount in contract 'RaffleTokenExchange':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |    //
  at buggy_29.sol(520)

[33mWarning[0m for TODAmount in contract 'RaffleTokenExchange':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |    //
  at buggy_29.sol(567)

[33mWarning[0m for TODAmount in contract 'RaffleTokenExchange':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |}
  at buggy_29.sol(611)

[31mViolation[0m for TODReceiver in contract 'RaffleTokenExchange':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |  bool public paused;
  at buggy_29.sol(198)

[31mViolation[0m for TODReceiver in contract 'RaffleTokenExchange':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_29.sol(255)

[31mViolation[0m for TODReceiver in contract 'RaffleTokenExchange':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_29.sol(277)

[31mViolation[0m for TODReceiver in contract 'RaffleTokenExchange':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_29.sol(299)

[31mViolation[0m for TODReceiver in contract 'RaffleTokenExchange':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |  event Listed(uint256 id, uint256 pricePerToken, uint256 initialAmount, address seller);
  at buggy_29.sol(372)

[31mViolation[0m for TODReceiver in contract 'RaffleTokenExchange':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event Canceled(uint256 id);
  at buggy_29.sol(386)

[31mViolation[0m for TODReceiver in contract 'RaffleTokenExchange':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event Purchased(uint256 id, uint256 totalAmount, uint256 totalAmountPayed, uint256 timestamp);
  at buggy_29.sol(400)

[31mViolation[0m for TODReceiver in contract 'RaffleTokenExchange':
    |
    |        require(msg.sender == owner_TOD8);
  > |        owner_TOD8.transfer(reward_TOD8);
    |        reward_TOD8 = msg.value;
    |    }
  at buggy_29.sol(483)

[31mViolation[0m for TODReceiver in contract 'RaffleTokenExchange':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |    //
  at buggy_29.sol(520)

[31mViolation[0m for TODReceiver in contract 'RaffleTokenExchange':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |    //
  at buggy_29.sol(567)

[31mViolation[0m for TODReceiver in contract 'RaffleTokenExchange':
    |    //
    |    function withdrawFunds(uint256 withdrawAmount) external onlyContractOwner {
  > |        owner.transfer(withdrawAmount);
    |    }
    |bool claimed_TOD40 = false;
  at buggy_29.sol(573)

[31mViolation[0m for TODReceiver in contract 'RaffleTokenExchange':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |}
  at buggy_29.sol(611)

[33mWarning[0m for TODReceiver in contract 'RaffleTokenExchange':
    |            if(listing.amountLeft == 0) { listing.active = false; }
    |            uint256 amountToPay = listing.pricePerToken * amount;
  > |            listing.seller.transfer(amountToPay);
    |            totalAmountPayed = totalAmountPayed.add(amountToPay);
    |            totalAmount = totalAmount.add(amount);
  at buggy_29.sol(463)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'RaffleTokenExchange':
    |            if(listing.amountLeft == 0) { listing.active = false; }
    |            uint256 amountToPay = listing.pricePerToken * amount;
  > |            listing.seller.transfer(amountToPay);
    |            totalAmountPayed = totalAmountPayed.add(amountToPay);
    |            totalAmount = totalAmount.add(amount);
  at buggy_29.sol(463)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RaffleTokenExchange':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |  bool public paused;
  at buggy_29.sol(198)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RaffleTokenExchange':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD26);
    |        claimed_TOD26 = true;
    |    }
  at buggy_29.sol(219)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RaffleTokenExchange':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD20);
    |        claimed_TOD20 = true;
    |    }
  at buggy_29.sol(241)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RaffleTokenExchange':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_29.sol(263)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RaffleTokenExchange':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_29.sol(285)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RaffleTokenExchange':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_29.sol(307)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RaffleTokenExchange':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |  event Listed(uint256 id, uint256 pricePerToken, uint256 initialAmount, address seller);
  at buggy_29.sol(372)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RaffleTokenExchange':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event Canceled(uint256 id);
  at buggy_29.sol(386)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RaffleTokenExchange':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event Purchased(uint256 id, uint256 totalAmount, uint256 totalAmountPayed, uint256 timestamp);
  at buggy_29.sol(400)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RaffleTokenExchange':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD30);
    |        claimed_TOD30 = true;
    |    }
  at buggy_29.sol(442)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RaffleTokenExchange':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD8);
    |        claimed_TOD8 = true;
    |    }
  at buggy_29.sol(491)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RaffleTokenExchange':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |    //
  at buggy_29.sol(520)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RaffleTokenExchange':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_29.sol(547)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RaffleTokenExchange':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |    //
  at buggy_29.sol(567)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RaffleTokenExchange':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_29.sol(590)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RaffleTokenExchange':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |}
  at buggy_29.sol(611)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'RaffleTokenExchange':
    |    //
    |    function withdrawFunds(uint256 withdrawAmount) external onlyContractOwner {
  > |        owner.transfer(withdrawAmount);
    |    }
    |bool claimed_TOD40 = false;
  at buggy_29.sol(573)

[31mViolation[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD19 = msg.sender;
    |        }
    |    }
  at buggy_29.sol(192)

[31mViolation[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |
    |        msg.sender.transfer(reward_TOD26);
  > |        claimed_TOD26 = true;
    |    }
    |  address payable public owner;
  at buggy_29.sol(220)

[31mViolation[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |
    |        msg.sender.transfer(reward_TOD20);
  > |        claimed_TOD20 = true;
    |    }
    |  uint256 public nextListingId;
  at buggy_29.sol(242)

[31mViolation[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |
    |        msg.sender.transfer(reward_TOD32);
  > |        claimed_TOD32 = true;
    |    }
    |  mapping (uint256 => Listing) public listingsById;
  at buggy_29.sol(264)

[31mViolation[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |
    |        msg.sender.transfer(reward_TOD38);
  > |        claimed_TOD38 = true;
    |    }
    |  mapping (uint256 => Purchase) public purchasesById;
  at buggy_29.sol(286)

[31mViolation[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |
    |        msg.sender.transfer(reward_TOD4);
  > |        claimed_TOD4 = true;
    |    }
    |  uint256 public nextPurchaseId;
  at buggy_29.sol(308)

[31mViolation[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD27 = msg.sender;
    |        }
    |    }
  at buggy_29.sol(366)

[31mViolation[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD31 = msg.sender;
    |        }
    |    }
  at buggy_29.sol(380)

[31mViolation[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD13 = msg.sender;
    |        }
    |    }
  at buggy_29.sol(394)

[31mViolation[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |
    |        msg.sender.transfer(reward_TOD30);
  > |        claimed_TOD30 = true;
    |    }
    |
  at buggy_29.sol(443)

[31mViolation[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |            Listing storage listing = listingsById[id];
    |            require(listing.active, "Listing is not active anymore!");
  > |            listing.amountLeft = listing.amountLeft.sub(amount);
    |            require(listing.amountLeft >= 0, "Amount left needs to be higher than 0.");
    |            if(listing.amountLeft == 0) { listing.active = false; }
  at buggy_29.sol(459)

[31mViolation[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |            listing.amountLeft = listing.amountLeft.sub(amount);
    |            require(listing.amountLeft >= 0, "Amount left needs to be higher than 0.");
  > |            if(listing.amountLeft == 0) { listing.active = false; }
    |            uint256 amountToPay = listing.pricePerToken * amount;
    |            listing.seller.transfer(amountToPay);
  at buggy_29.sol(461)

[31mViolation[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |        }
    |        require(totalAmountPayed <= msg.value, 'Overpayed!');
  > |        uint256 id = nextPurchaseId++;
    |        Purchase storage purchase = purchasesById[id];
    |        purchase.totalAmount = totalAmount;
  at buggy_29.sol(469)

[31mViolation[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |        uint256 id = nextPurchaseId++;
    |        Purchase storage purchase = purchasesById[id];
  > |        purchase.totalAmount = totalAmount;
    |        purchase.totalAmountPayed = totalAmountPayed;
    |        purchase.timestamp = now;
  at buggy_29.sol(471)

[31mViolation[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |        Purchase storage purchase = purchasesById[id];
    |        purchase.totalAmount = totalAmount;
  > |        purchase.totalAmountPayed = totalAmountPayed;
    |        purchase.timestamp = now;
    |        emit Purchased(id, totalAmount, totalAmountPayed, now);
  at buggy_29.sol(472)

[31mViolation[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |        purchase.totalAmount = totalAmount;
    |        purchase.totalAmountPayed = totalAmountPayed;
  > |        purchase.timestamp = now;
    |        emit Purchased(id, totalAmount, totalAmountPayed, now);
    |    }
  at buggy_29.sol(473)

[31mViolation[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |
    |        msg.sender.transfer(reward_TOD8);
  > |        claimed_TOD8 = true;
    |    }
    |    //
  at buggy_29.sol(492)

[31mViolation[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |        require(raffleContract.balanceOf(msg.sender) >= initialAmount, "Amount to sell is higher than balance!");
    |        require(raffleContract.allowance(msg.sender, address(this)) >= initialAmount, "Allowance is to small (increase allowance)!");
  > |        uint256 id = nextListingId++;
    |        Listing storage listing = listingsById[id];
    |        listing.initialAmount = initialAmount;
  at buggy_29.sol(500)

[31mViolation[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |        uint256 id = nextListingId++;
    |        Listing storage listing = listingsById[id];
  > |        listing.initialAmount = initialAmount;
    |        listing.amountLeft = initialAmount;
    |        listing.pricePerToken = pricePerToken;
  at buggy_29.sol(502)

[31mViolation[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |        Listing storage listing = listingsById[id];
    |        listing.initialAmount = initialAmount;
  > |        listing.amountLeft = initialAmount;
    |        listing.pricePerToken = pricePerToken;
    |        listing.seller = msg.sender;
  at buggy_29.sol(503)

[31mViolation[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |        listing.initialAmount = initialAmount;
    |        listing.amountLeft = initialAmount;
  > |        listing.pricePerToken = pricePerToken;
    |        listing.seller = msg.sender;
    |        listing.active = true;
  at buggy_29.sol(504)

[31mViolation[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |        listing.amountLeft = initialAmount;
    |        listing.pricePerToken = pricePerToken;
  > |        listing.seller = msg.sender;
    |        listing.active = true;
    |        emit Listed(id, listing.pricePerToken, listing.initialAmount, listing.seller);
  at buggy_29.sol(505)

[31mViolation[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |        listing.pricePerToken = pricePerToken;
    |        listing.seller = msg.sender;
  > |        listing.active = true;
    |        emit Listed(id, listing.pricePerToken, listing.initialAmount, listing.seller);
    |    }
  at buggy_29.sol(506)

[31mViolation[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD39 = msg.sender;
    |        }
    |    }
  at buggy_29.sol(514)

[31mViolation[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |
    |        msg.sender.transfer(reward_TOD36);
  > |        claimed_TOD36 = true;
    |    }
    |    //
  at buggy_29.sol(548)

[31mViolation[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD35 = msg.sender;
    |        }
    |    }
  at buggy_29.sol(561)

[31mViolation[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |
    |        msg.sender.transfer(reward_TOD40);
  > |        claimed_TOD40 = true;
    |    }
    |    //
  at buggy_29.sol(591)

[31mViolation[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD33 = msg.sender;
    |        }
    |    }
  at buggy_29.sol(605)

[33mWarning[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |        require(msg.sender == owner_TOD26);
    |        owner_TOD26.transfer(reward_TOD26);
  > |        reward_TOD26 = msg.value;
    |    }
    |
  at buggy_29.sol(212)

[33mWarning[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |        require(msg.sender == owner_TOD20);
    |        owner_TOD20.transfer(reward_TOD20);
  > |        reward_TOD20 = msg.value;
    |    }
    |
  at buggy_29.sol(234)

[33mWarning[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |        require(msg.sender == owner_TOD32);
    |        owner_TOD32.transfer(reward_TOD32);
  > |        reward_TOD32 = msg.value;
    |    }
    |
  at buggy_29.sol(256)

[33mWarning[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |        require(msg.sender == owner_TOD38);
    |        owner_TOD38.transfer(reward_TOD38);
  > |        reward_TOD38 = msg.value;
    |    }
    |
  at buggy_29.sol(278)

[33mWarning[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |        require(msg.sender == owner_TOD4);
    |        owner_TOD4.transfer(reward_TOD4);
  > |        reward_TOD4 = msg.value;
    |    }
    |
  at buggy_29.sol(300)

[33mWarning[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |        require(msg.sender == owner_TOD30);
    |        owner_TOD30.transfer(reward_TOD30);
  > |        reward_TOD30 = msg.value;
    |    }
    |
  at buggy_29.sol(435)

[33mWarning[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |        require(msg.sender == owner_TOD8);
    |        owner_TOD8.transfer(reward_TOD8);
  > |        reward_TOD8 = msg.value;
    |    }
    |
  at buggy_29.sol(484)

[33mWarning[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |        require(listing.active, "This listing was turned inactive already!");
    |        require(listing.seller == msg.sender || owner == msg.sender, "Only the listing owner or the contract owner can cancel the listing!");
  > |        listing.active = false;
    |        emit Canceled(id);
    |    }
  at buggy_29.sol(529)

[33mWarning[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |        require(msg.sender == owner_TOD36);
    |        owner_TOD36.transfer(reward_TOD36);
  > |        reward_TOD36 = msg.value;
    |    }
    |
  at buggy_29.sol(540)

[33mWarning[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |    //
    |    function setPaused(bool value) external onlyContractOwner {
  > |        paused = value;
    |    }
    |address payable winner_TOD35;
  at buggy_29.sol(554)

[33mWarning[0m for UnrestrictedWrite in contract 'RaffleTokenExchange':
    |        require(msg.sender == owner_TOD40);
    |        owner_TOD40.transfer(reward_TOD40);
  > |        reward_TOD40 = msg.value;
    |    }
    |
  at buggy_29.sol(583)

