Processing contract: buggy_18.sol:ApproveAndCallFallBack
Processing contract: buggy_18.sol:ERC20Interface
Processing contract: buggy_18.sol:ExtendedMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_18.sol:Owned
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_18.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_18.sol:_Yesbuzz
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for DAOConstantGas in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD2);
  > |        owner_TOD2.transfer(reward_TOD2);
    |        reward_TOD2 = msg.value;
    |    }
  at buggy_18.sol(282)

[31mViolation[0m for DAOConstantGas in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD2);
    |        claimed_TOD2 = true;
    |    }
  at buggy_18.sol(290)

[31mViolation[0m for TODAmount in contract 'Owned':
    |
    |        require(msg.sender == owner_TOD2);
  > |        owner_TOD2.transfer(reward_TOD2);
    |        reward_TOD2 = msg.value;
    |    }
  at buggy_18.sol(282)

[31mViolation[0m for TODAmount in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD2);
    |        claimed_TOD2 = true;
    |    }
  at buggy_18.sol(290)

[33mWarning[0m for TODAmount in contract 'Owned':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event OwnershipTransferred(address indexed _from, address indexed _to);
  at buggy_18.sol(246)

[33mWarning[0m for TODAmount in contract 'Owned':
    |function getReward_TOD1() payable public{
    |     
  > |       winner_TOD1.transfer(msg.value);
    |    }
    |
  at buggy_18.sol(264)

[33mWarning[0m for TODAmount in contract 'Owned':
    |function getReward_TOD17() payable public{
    |     
  > |       winner_TOD17.transfer(msg.value);
    |    }
    |
  at buggy_18.sol(311)

[31mViolation[0m for TODReceiver in contract 'Owned':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event OwnershipTransferred(address indexed _from, address indexed _to);
  at buggy_18.sol(246)

[31mViolation[0m for TODReceiver in contract 'Owned':
    |function getReward_TOD1() payable public{
    |     
  > |       winner_TOD1.transfer(msg.value);
    |    }
    |
  at buggy_18.sol(264)

[31mViolation[0m for TODReceiver in contract 'Owned':
    |function getReward_TOD17() payable public{
    |     
  > |       winner_TOD17.transfer(msg.value);
    |    }
    |
  at buggy_18.sol(311)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Owned':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event OwnershipTransferred(address indexed _from, address indexed _to);
  at buggy_18.sol(246)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Owned':
    |function getReward_TOD1() payable public{
    |     
  > |       winner_TOD1.transfer(msg.value);
    |    }
    |
  at buggy_18.sol(264)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Owned':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD2);
    |        claimed_TOD2 = true;
    |    }
  at buggy_18.sol(290)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Owned':
    |function getReward_TOD17() payable public{
    |     
  > |       winner_TOD17.transfer(msg.value);
    |    }
    |
  at buggy_18.sol(311)

[31mViolation[0m for UnrestrictedWrite in contract 'Owned':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD31 = msg.sender;
    |        }
    |    }
  at buggy_18.sol(240)

[31mViolation[0m for UnrestrictedWrite in contract 'Owned':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD1 = msg.sender;
    |        }
    |    }
  at buggy_18.sol(258)

[31mViolation[0m for UnrestrictedWrite in contract 'Owned':
    |
    |        msg.sender.transfer(reward_TOD2);
  > |        claimed_TOD2 = true;
    |    }
    |
  at buggy_18.sol(291)

[31mViolation[0m for UnrestrictedWrite in contract 'Owned':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD17 = msg.sender;
    |        }
    |    }
  at buggy_18.sol(305)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |bool claimed_TOD2 = false;
  at buggy_18.sol(273)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(msg.sender == owner_TOD2);
    |        owner_TOD2.transfer(reward_TOD2);
  > |        reward_TOD2 = msg.value;
    |    }
    |
  at buggy_18.sol(283)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(msg.sender == newOwner);
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |        newOwner = address(0);
    |    }
  at buggy_18.sol(297)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        emit OwnershipTransferred(owner, newOwner);
    |        owner = newOwner;
  > |        newOwner = address(0);
    |    }
    |address payable winner_TOD17;
  at buggy_18.sol(298)

