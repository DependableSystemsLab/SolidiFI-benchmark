Processing contract: buggy_8.sol:Ownable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_8.sol:TokenERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_8.sol:YFT
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for DAOConstantGas in contract 'Ownable':
    |
    |        require(msg.sender == owner_TOD40);
  > |        owner_TOD40.transfer(reward_TOD40);
    |        reward_TOD40 = msg.value;
    |    }
  at buggy_8.sol(30)

[31mViolation[0m for DAOConstantGas in contract 'Ownable':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_8.sol(38)

[31mViolation[0m for TODAmount in contract 'Ownable':
    |
    |        require(msg.sender == owner_TOD40);
  > |        owner_TOD40.transfer(reward_TOD40);
    |        reward_TOD40 = msg.value;
    |    }
  at buggy_8.sol(30)

[31mViolation[0m for TODAmount in contract 'Ownable':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_8.sol(38)

[33mWarning[0m for TODAmount in contract 'Ownable':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |  address public owner;
  at buggy_8.sol(19)

[33mWarning[0m for TODAmount in contract 'Ownable':
    |function getReward_TOD9() payable public{
    |     
  > |       winner_TOD9.transfer(msg.value);
    |    }
    |
  at buggy_8.sol(62)

[33mWarning[0m for TODAmount in contract 'Ownable':
    |function getReward_TOD25() payable public{
    |     
  > |       winner_TOD25.transfer(msg.value);
    |    }
    |
  at buggy_8.sol(93)

[31mViolation[0m for TODReceiver in contract 'Ownable':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |  address public owner;
  at buggy_8.sol(19)

[31mViolation[0m for TODReceiver in contract 'Ownable':
    |function getReward_TOD9() payable public{
    |     
  > |       winner_TOD9.transfer(msg.value);
    |    }
    |
  at buggy_8.sol(62)

[31mViolation[0m for TODReceiver in contract 'Ownable':
    |function getReward_TOD25() payable public{
    |     
  > |       winner_TOD25.transfer(msg.value);
    |    }
    |
  at buggy_8.sol(93)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Ownable':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |  address public owner;
  at buggy_8.sol(19)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Ownable':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_8.sol(38)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Ownable':
    |function getReward_TOD9() payable public{
    |     
  > |       winner_TOD9.transfer(msg.value);
    |    }
    |
  at buggy_8.sol(62)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Ownable':
    |function getReward_TOD25() payable public{
    |     
  > |       winner_TOD25.transfer(msg.value);
    |    }
    |
  at buggy_8.sol(93)

[31mViolation[0m for UnrestrictedWrite in contract 'Ownable':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD21 = msg.sender;
    |        }
    |    }
  at buggy_8.sol(13)

[31mViolation[0m for UnrestrictedWrite in contract 'Ownable':
    |
    |        msg.sender.transfer(reward_TOD40);
  > |        claimed_TOD40 = true;
    |    }
    |  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);
  at buggy_8.sol(39)

[31mViolation[0m for UnrestrictedWrite in contract 'Ownable':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD9 = msg.sender;
    |        }
    |    }
  at buggy_8.sol(56)

[31mViolation[0m for UnrestrictedWrite in contract 'Ownable':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD25 = msg.sender;
    |        }
    |    }
  at buggy_8.sol(87)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |        require(msg.sender == owner_TOD40);
    |        owner_TOD40.transfer(reward_TOD40);
  > |        reward_TOD40 = msg.value;
    |    }
    |
  at buggy_8.sol(31)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |    require(newOwner != address(0));
    |    emit OwnershipTransferred(owner, newOwner);
  > |    owner = newOwner;
    |  }
    |address payable winner_TOD25;
  at buggy_8.sol(80)

[31mViolation[0m for DAOConstantGas in contract 'TokenERC20':
    |
    |        require(msg.sender == owner_TOD10);
  > |        owner_TOD10.transfer(reward_TOD10);
    |        reward_TOD10 = msg.value;
    |    }
  at buggy_8.sol(107)

[31mViolation[0m for DAOConstantGas in contract 'TokenERC20':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD10);
    |        claimed_TOD10 = true;
    |    }
  at buggy_8.sol(115)

[31mViolation[0m for DAOConstantGas in contract 'TokenERC20':
    |
    |        require(msg.sender == owner_TOD22);
  > |        owner_TOD22.transfer(reward_TOD22);
    |        reward_TOD22 = msg.value;
    |    }
  at buggy_8.sol(126)

[31mViolation[0m for DAOConstantGas in contract 'TokenERC20':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD22);
    |        claimed_TOD22 = true;
    |    }
  at buggy_8.sol(134)

[31mViolation[0m for DAOConstantGas in contract 'TokenERC20':
    |
    |        require(msg.sender == owner_TOD12);
  > |        owner_TOD12.transfer(reward_TOD12);
    |        reward_TOD12 = msg.value;
    |    }
  at buggy_8.sol(145)

[31mViolation[0m for DAOConstantGas in contract 'TokenERC20':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD12);
    |        claimed_TOD12 = true;
    |    }
  at buggy_8.sol(153)

[31mViolation[0m for DAOConstantGas in contract 'TokenERC20':
    |
    |        require(msg.sender == owner_TOD2);
  > |        owner_TOD2.transfer(reward_TOD2);
    |        reward_TOD2 = msg.value;
    |    }
  at buggy_8.sol(195)

[31mViolation[0m for DAOConstantGas in contract 'TokenERC20':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD2);
    |        claimed_TOD2 = true;
    |    }
  at buggy_8.sol(203)

[31mViolation[0m for DAOConstantGas in contract 'TokenERC20':
    |
    |        require(msg.sender == owner_TOD26);
  > |        owner_TOD26.transfer(reward_TOD26);
    |        reward_TOD26 = msg.value;
    |    }
  at buggy_8.sol(312)

[31mViolation[0m for DAOConstantGas in contract 'TokenERC20':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD26);
    |        claimed_TOD26 = true;
    |    }
  at buggy_8.sol(320)

[31mViolation[0m for DAOConstantGas in contract 'TokenERC20':
    |
    |        require(msg.sender == owner_TOD20);
  > |        owner_TOD20.transfer(reward_TOD20);
    |        reward_TOD20 = msg.value;
    |    }
  at buggy_8.sol(343)

[31mViolation[0m for DAOConstantGas in contract 'TokenERC20':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD20);
    |        claimed_TOD20 = true;
    |    }
  at buggy_8.sol(351)

[31mViolation[0m for DAOConstantGas in contract 'TokenERC20':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_8.sol(377)

[31mViolation[0m for DAOConstantGas in contract 'TokenERC20':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_8.sol(385)

[31mViolation[0m for DAOConstantGas in contract 'TokenERC20':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_8.sol(410)

[31mViolation[0m for DAOConstantGas in contract 'TokenERC20':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_8.sol(418)

[31mViolation[0m for DAOConstantGas in contract 'TokenERC20':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_8.sol(447)

[31mViolation[0m for DAOConstantGas in contract 'TokenERC20':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_8.sol(455)

[31mViolation[0m for TODAmount in contract 'TokenERC20':
    |
    |        require(msg.sender == owner_TOD10);
  > |        owner_TOD10.transfer(reward_TOD10);
    |        reward_TOD10 = msg.value;
    |    }
  at buggy_8.sol(107)

[31mViolation[0m for TODAmount in contract 'TokenERC20':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD10);
    |        claimed_TOD10 = true;
    |    }
  at buggy_8.sol(115)

[31mViolation[0m for TODAmount in contract 'TokenERC20':
    |
    |        require(msg.sender == owner_TOD22);
  > |        owner_TOD22.transfer(reward_TOD22);
    |        reward_TOD22 = msg.value;
    |    }
  at buggy_8.sol(126)

[31mViolation[0m for TODAmount in contract 'TokenERC20':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD22);
    |        claimed_TOD22 = true;
    |    }
  at buggy_8.sol(134)

[31mViolation[0m for TODAmount in contract 'TokenERC20':
    |
    |        require(msg.sender == owner_TOD12);
  > |        owner_TOD12.transfer(reward_TOD12);
    |        reward_TOD12 = msg.value;
    |    }
  at buggy_8.sol(145)

[31mViolation[0m for TODAmount in contract 'TokenERC20':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD12);
    |        claimed_TOD12 = true;
    |    }
  at buggy_8.sol(153)

[31mViolation[0m for TODAmount in contract 'TokenERC20':
    |
    |        require(msg.sender == owner_TOD2);
  > |        owner_TOD2.transfer(reward_TOD2);
    |        reward_TOD2 = msg.value;
    |    }
  at buggy_8.sol(195)

[31mViolation[0m for TODAmount in contract 'TokenERC20':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD2);
    |        claimed_TOD2 = true;
    |    }
  at buggy_8.sol(203)

[31mViolation[0m for TODAmount in contract 'TokenERC20':
    |
    |        require(msg.sender == owner_TOD26);
  > |        owner_TOD26.transfer(reward_TOD26);
    |        reward_TOD26 = msg.value;
    |    }
  at buggy_8.sol(312)

[31mViolation[0m for TODAmount in contract 'TokenERC20':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD26);
    |        claimed_TOD26 = true;
    |    }
  at buggy_8.sol(320)

[31mViolation[0m for TODAmount in contract 'TokenERC20':
    |
    |        require(msg.sender == owner_TOD20);
  > |        owner_TOD20.transfer(reward_TOD20);
    |        reward_TOD20 = msg.value;
    |    }
  at buggy_8.sol(343)

[31mViolation[0m for TODAmount in contract 'TokenERC20':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD20);
    |        claimed_TOD20 = true;
    |    }
  at buggy_8.sol(351)

[31mViolation[0m for TODAmount in contract 'TokenERC20':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_8.sol(377)

[31mViolation[0m for TODAmount in contract 'TokenERC20':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_8.sol(385)

[31mViolation[0m for TODAmount in contract 'TokenERC20':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_8.sol(410)

[31mViolation[0m for TODAmount in contract 'TokenERC20':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_8.sol(418)

[31mViolation[0m for TODAmount in contract 'TokenERC20':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_8.sol(447)

[31mViolation[0m for TODAmount in contract 'TokenERC20':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_8.sol(455)

[33mWarning[0m for TODAmount in contract 'TokenERC20':
    |function getReward_TOD11() payable public{
    |     
  > |       winner_TOD11.transfer(msg.value);
    |    }
    |  uint256 public totalSupply;
  at buggy_8.sol(169)

[33mWarning[0m for TODAmount in contract 'TokenERC20':
    |function getReward_TOD1() payable public{
    |     
  > |       winner_TOD1.transfer(msg.value);
    |    }
    |  mapping (address => uint256) public balanceOf;
  at buggy_8.sol(185)

[33mWarning[0m for TODAmount in contract 'TokenERC20':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |  event Transfer(address indexed from, address indexed to, uint256 value);
  at buggy_8.sol(220)

[33mWarning[0m for TODAmount in contract 'TokenERC20':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |  event Approval(address indexed _owner, address indexed _spender, uint256 _value);
  at buggy_8.sol(236)

[33mWarning[0m for TODAmount in contract 'TokenERC20':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event Burn(address indexed from, uint256 value);
  at buggy_8.sol(252)

[33mWarning[0m for TODAmount in contract 'TokenERC20':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |
  at buggy_8.sol(282)

[33mWarning[0m for TODAmount in contract 'TokenERC20':
    |function getReward_TOD7() payable public{
    |     
  > |       winner_TOD7.transfer(msg.value);
    |    }
    |}
  at buggy_8.sol(487)

[31mViolation[0m for TODReceiver in contract 'TokenERC20':
    |
    |        require(msg.sender == owner_TOD10);
  > |        owner_TOD10.transfer(reward_TOD10);
    |        reward_TOD10 = msg.value;
    |    }
  at buggy_8.sol(107)

[31mViolation[0m for TODReceiver in contract 'TokenERC20':
    |
    |        require(msg.sender == owner_TOD22);
  > |        owner_TOD22.transfer(reward_TOD22);
    |        reward_TOD22 = msg.value;
    |    }
  at buggy_8.sol(126)

[31mViolation[0m for TODReceiver in contract 'TokenERC20':
    |
    |        require(msg.sender == owner_TOD12);
  > |        owner_TOD12.transfer(reward_TOD12);
    |        reward_TOD12 = msg.value;
    |    }
  at buggy_8.sol(145)

[31mViolation[0m for TODReceiver in contract 'TokenERC20':
    |function getReward_TOD11() payable public{
    |     
  > |       winner_TOD11.transfer(msg.value);
    |    }
    |  uint256 public totalSupply;
  at buggy_8.sol(169)

[31mViolation[0m for TODReceiver in contract 'TokenERC20':
    |function getReward_TOD1() payable public{
    |     
  > |       winner_TOD1.transfer(msg.value);
    |    }
    |  mapping (address => uint256) public balanceOf;
  at buggy_8.sol(185)

[31mViolation[0m for TODReceiver in contract 'TokenERC20':
    |
    |        require(msg.sender == owner_TOD2);
  > |        owner_TOD2.transfer(reward_TOD2);
    |        reward_TOD2 = msg.value;
    |    }
  at buggy_8.sol(195)

[31mViolation[0m for TODReceiver in contract 'TokenERC20':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |  event Transfer(address indexed from, address indexed to, uint256 value);
  at buggy_8.sol(220)

[31mViolation[0m for TODReceiver in contract 'TokenERC20':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |  event Approval(address indexed _owner, address indexed _spender, uint256 _value);
  at buggy_8.sol(236)

[31mViolation[0m for TODReceiver in contract 'TokenERC20':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event Burn(address indexed from, uint256 value);
  at buggy_8.sol(252)

[31mViolation[0m for TODReceiver in contract 'TokenERC20':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |
  at buggy_8.sol(282)

[31mViolation[0m for TODReceiver in contract 'TokenERC20':
    |
    |        require(msg.sender == owner_TOD20);
  > |        owner_TOD20.transfer(reward_TOD20);
    |        reward_TOD20 = msg.value;
    |    }
  at buggy_8.sol(343)

[31mViolation[0m for TODReceiver in contract 'TokenERC20':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_8.sol(377)

[31mViolation[0m for TODReceiver in contract 'TokenERC20':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_8.sol(410)

[31mViolation[0m for TODReceiver in contract 'TokenERC20':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_8.sol(447)

[31mViolation[0m for TODReceiver in contract 'TokenERC20':
    |function getReward_TOD7() payable public{
    |     
  > |       winner_TOD7.transfer(msg.value);
    |    }
    |}
  at buggy_8.sol(487)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD10);
    |        claimed_TOD10 = true;
    |    }
  at buggy_8.sol(115)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD22);
    |        claimed_TOD22 = true;
    |    }
  at buggy_8.sol(134)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD12);
    |        claimed_TOD12 = true;
    |    }
  at buggy_8.sol(153)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |function getReward_TOD11() payable public{
    |     
  > |       winner_TOD11.transfer(msg.value);
    |    }
    |  uint256 public totalSupply;
  at buggy_8.sol(169)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |function getReward_TOD1() payable public{
    |     
  > |       winner_TOD1.transfer(msg.value);
    |    }
    |  mapping (address => uint256) public balanceOf;
  at buggy_8.sol(185)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD2);
    |        claimed_TOD2 = true;
    |    }
  at buggy_8.sol(203)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |  event Transfer(address indexed from, address indexed to, uint256 value);
  at buggy_8.sol(220)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |  event Approval(address indexed _owner, address indexed _spender, uint256 _value);
  at buggy_8.sol(236)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event Burn(address indexed from, uint256 value);
  at buggy_8.sol(252)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |
  at buggy_8.sol(282)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD26);
    |        claimed_TOD26 = true;
    |    }
  at buggy_8.sol(320)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD20);
    |        claimed_TOD20 = true;
    |    }
  at buggy_8.sol(351)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_8.sol(385)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_8.sol(418)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_8.sol(455)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |function getReward_TOD7() payable public{
    |     
  > |       winner_TOD7.transfer(msg.value);
    |    }
    |}
  at buggy_8.sol(487)

[31mViolation[0m for UnrestrictedWrite in contract 'TokenERC20':
    |
    |        msg.sender.transfer(reward_TOD10);
  > |        claimed_TOD10 = true;
    |    }
    |  string public name;
  at buggy_8.sol(116)

[31mViolation[0m for UnrestrictedWrite in contract 'TokenERC20':
    |
    |        msg.sender.transfer(reward_TOD22);
  > |        claimed_TOD22 = true;
    |    }
    |  string public symbol;
  at buggy_8.sol(135)

[31mViolation[0m for UnrestrictedWrite in contract 'TokenERC20':
    |
    |        msg.sender.transfer(reward_TOD12);
  > |        claimed_TOD12 = true;
    |    }
    |  uint8 public decimals = 18;
  at buggy_8.sol(154)

[31mViolation[0m for UnrestrictedWrite in contract 'TokenERC20':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD11 = msg.sender;
    |        }
    |    }
  at buggy_8.sol(163)

[31mViolation[0m for UnrestrictedWrite in contract 'TokenERC20':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD1 = msg.sender;
    |        }
    |    }
  at buggy_8.sol(179)

[31mViolation[0m for UnrestrictedWrite in contract 'TokenERC20':
    |
    |        msg.sender.transfer(reward_TOD2);
  > |        claimed_TOD2 = true;
    |    }
    |  mapping (address => mapping (address => uint256)) public allowance;
  at buggy_8.sol(204)

[31mViolation[0m for UnrestrictedWrite in contract 'TokenERC20':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD33 = msg.sender;
    |        }
    |    }
  at buggy_8.sol(214)

[31mViolation[0m for UnrestrictedWrite in contract 'TokenERC20':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD27 = msg.sender;
    |        }
    |    }
  at buggy_8.sol(230)

[31mViolation[0m for UnrestrictedWrite in contract 'TokenERC20':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD31 = msg.sender;
    |        }
    |    }
  at buggy_8.sol(246)

[31mViolation[0m for UnrestrictedWrite in contract 'TokenERC20':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD19 = msg.sender;
    |        }
    |    }
  at buggy_8.sol(276)

[31mViolation[0m for UnrestrictedWrite in contract 'TokenERC20':
    |        balanceOf[_from] -= _value;
    |        // Add the same to the recipient
  > |        balanceOf[_to] += _value;
    |        emit Transfer(_from, _to, _value);
    |        // Asserts are used to use static analysis to find bugs in your code. They should never fail
  at buggy_8.sol(300)

[31mViolation[0m for UnrestrictedWrite in contract 'TokenERC20':
    |
    |        msg.sender.transfer(reward_TOD26);
  > |        claimed_TOD26 = true;
    |    }
    |
  at buggy_8.sol(321)

[31mViolation[0m for UnrestrictedWrite in contract 'TokenERC20':
    |
    |        msg.sender.transfer(reward_TOD20);
  > |        claimed_TOD20 = true;
    |    }
    |
  at buggy_8.sol(352)

[31mViolation[0m for UnrestrictedWrite in contract 'TokenERC20':
    |
    |        msg.sender.transfer(reward_TOD32);
  > |        claimed_TOD32 = true;
    |    }
    |
  at buggy_8.sol(386)

[31mViolation[0m for UnrestrictedWrite in contract 'TokenERC20':
    |
    |        msg.sender.transfer(reward_TOD38);
  > |        claimed_TOD38 = true;
    |    }
    |
  at buggy_8.sol(419)

[31mViolation[0m for UnrestrictedWrite in contract 'TokenERC20':
    |        require(balanceOf[msg.sender] >= _value);   // Check if the sender has enough
    |        balanceOf[msg.sender] -= _value;            // Subtract from the sender
  > |        totalSupply -= _value;                      // Updates totalSupply
    |        emit Burn(msg.sender, _value);
    |        return true;
  at buggy_8.sol(436)

[31mViolation[0m for UnrestrictedWrite in contract 'TokenERC20':
    |
    |        msg.sender.transfer(reward_TOD4);
  > |        claimed_TOD4 = true;
    |    }
    |
  at buggy_8.sol(456)

[31mViolation[0m for UnrestrictedWrite in contract 'TokenERC20':
    |        require(balanceOf[_from] >= _value);                // Check if the targeted balance is enough
    |        require(_value <= allowance[_from][msg.sender]);    // Check allowance
  > |        balanceOf[_from] -= _value;                         // Subtract from the targeted balance
    |        allowance[_from][msg.sender] -= _value;             // Subtract from the sender's allowance
    |        totalSupply -= _value;                              // Update totalSupply
  at buggy_8.sol(470)

[31mViolation[0m for UnrestrictedWrite in contract 'TokenERC20':
    |        balanceOf[_from] -= _value;                         // Subtract from the targeted balance
    |        allowance[_from][msg.sender] -= _value;             // Subtract from the sender's allowance
  > |        totalSupply -= _value;                              // Update totalSupply
    |        emit Burn(_from, _value);
    |        return true;
  at buggy_8.sol(472)

[31mViolation[0m for UnrestrictedWrite in contract 'TokenERC20':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD7 = msg.sender;
    |        }
    |    }
  at buggy_8.sol(481)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenERC20':
    |        require(msg.sender == owner_TOD10);
    |        owner_TOD10.transfer(reward_TOD10);
  > |        reward_TOD10 = msg.value;
    |    }
    |
  at buggy_8.sol(108)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenERC20':
    |        require(msg.sender == owner_TOD22);
    |        owner_TOD22.transfer(reward_TOD22);
  > |        reward_TOD22 = msg.value;
    |    }
    |
  at buggy_8.sol(127)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenERC20':
    |        require(msg.sender == owner_TOD12);
    |        owner_TOD12.transfer(reward_TOD12);
  > |        reward_TOD12 = msg.value;
    |    }
    |
  at buggy_8.sol(146)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenERC20':
    |        require(msg.sender == owner_TOD2);
    |        owner_TOD2.transfer(reward_TOD2);
  > |        reward_TOD2 = msg.value;
    |    }
    |
  at buggy_8.sol(196)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenERC20':
    |        require(msg.sender == owner_TOD26);
    |        owner_TOD26.transfer(reward_TOD26);
  > |        reward_TOD26 = msg.value;
    |    }
    |
  at buggy_8.sol(313)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenERC20':
    |        require(msg.sender == owner_TOD20);
    |        owner_TOD20.transfer(reward_TOD20);
  > |        reward_TOD20 = msg.value;
    |    }
    |
  at buggy_8.sol(344)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenERC20':
    |        require(msg.sender == owner_TOD32);
    |        owner_TOD32.transfer(reward_TOD32);
  > |        reward_TOD32 = msg.value;
    |    }
    |
  at buggy_8.sol(378)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenERC20':
    |        require(msg.sender == owner_TOD38);
    |        owner_TOD38.transfer(reward_TOD38);
  > |        reward_TOD38 = msg.value;
    |    }
    |
  at buggy_8.sol(411)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenERC20':
    |        require(msg.sender == owner_TOD4);
    |        owner_TOD4.transfer(reward_TOD4);
  > |        reward_TOD4 = msg.value;
    |    }
    |
  at buggy_8.sol(448)

[31mViolation[0m for DAOConstantGas in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD40);
  > |        owner_TOD40.transfer(reward_TOD40);
    |        reward_TOD40 = msg.value;
    |    }
  at buggy_8.sol(30)

[31mViolation[0m for DAOConstantGas in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_8.sol(38)

[31mViolation[0m for DAOConstantGas in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD10);
  > |        owner_TOD10.transfer(reward_TOD10);
    |        reward_TOD10 = msg.value;
    |    }
  at buggy_8.sol(107)

[31mViolation[0m for DAOConstantGas in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD10);
    |        claimed_TOD10 = true;
    |    }
  at buggy_8.sol(115)

[31mViolation[0m for DAOConstantGas in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD22);
  > |        owner_TOD22.transfer(reward_TOD22);
    |        reward_TOD22 = msg.value;
    |    }
  at buggy_8.sol(126)

[31mViolation[0m for DAOConstantGas in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD22);
    |        claimed_TOD22 = true;
    |    }
  at buggy_8.sol(134)

[31mViolation[0m for DAOConstantGas in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD12);
  > |        owner_TOD12.transfer(reward_TOD12);
    |        reward_TOD12 = msg.value;
    |    }
  at buggy_8.sol(145)

[31mViolation[0m for DAOConstantGas in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD12);
    |        claimed_TOD12 = true;
    |    }
  at buggy_8.sol(153)

[31mViolation[0m for DAOConstantGas in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD2);
  > |        owner_TOD2.transfer(reward_TOD2);
    |        reward_TOD2 = msg.value;
    |    }
  at buggy_8.sol(195)

[31mViolation[0m for DAOConstantGas in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD2);
    |        claimed_TOD2 = true;
    |    }
  at buggy_8.sol(203)

[31mViolation[0m for DAOConstantGas in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD26);
  > |        owner_TOD26.transfer(reward_TOD26);
    |        reward_TOD26 = msg.value;
    |    }
  at buggy_8.sol(312)

[31mViolation[0m for DAOConstantGas in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD26);
    |        claimed_TOD26 = true;
    |    }
  at buggy_8.sol(320)

[31mViolation[0m for DAOConstantGas in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD20);
  > |        owner_TOD20.transfer(reward_TOD20);
    |        reward_TOD20 = msg.value;
    |    }
  at buggy_8.sol(343)

[31mViolation[0m for DAOConstantGas in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD20);
    |        claimed_TOD20 = true;
    |    }
  at buggy_8.sol(351)

[31mViolation[0m for DAOConstantGas in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_8.sol(377)

[31mViolation[0m for DAOConstantGas in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_8.sol(385)

[31mViolation[0m for DAOConstantGas in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_8.sol(410)

[31mViolation[0m for DAOConstantGas in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_8.sol(418)

[31mViolation[0m for DAOConstantGas in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_8.sol(447)

[31mViolation[0m for DAOConstantGas in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_8.sol(455)

[31mViolation[0m for DAOConstantGas in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD14);
  > |        owner_TOD14.transfer(reward_TOD14);
    |        reward_TOD14 = msg.value;
    |    }
  at buggy_8.sol(595)

[31mViolation[0m for DAOConstantGas in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD14);
    |        claimed_TOD14 = true;
    |    }
  at buggy_8.sol(603)

[31mViolation[0m for DAOConstantGas in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD30);
  > |        owner_TOD30.transfer(reward_TOD30);
    |        reward_TOD30 = msg.value;
    |    }
  at buggy_8.sol(623)

[31mViolation[0m for DAOConstantGas in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD30);
    |        claimed_TOD30 = true;
    |    }
  at buggy_8.sol(631)

[31mViolation[0m for DAOConstantGas in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD8);
  > |        owner_TOD8.transfer(reward_TOD8);
    |        reward_TOD8 = msg.value;
    |    }
  at buggy_8.sol(649)

[31mViolation[0m for DAOConstantGas in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD8);
    |        claimed_TOD8 = true;
    |    }
  at buggy_8.sol(657)

[31mViolation[0m for DAOConstantGas in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD36);
  > |        owner_TOD36.transfer(reward_TOD36);
    |        reward_TOD36 = msg.value;
    |    }
  at buggy_8.sol(694)

[31mViolation[0m for DAOConstantGas in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_8.sol(702)

[31mViolation[0m for TODAmount in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD40);
  > |        owner_TOD40.transfer(reward_TOD40);
    |        reward_TOD40 = msg.value;
    |    }
  at buggy_8.sol(30)

[31mViolation[0m for TODAmount in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_8.sol(38)

[31mViolation[0m for TODAmount in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD10);
  > |        owner_TOD10.transfer(reward_TOD10);
    |        reward_TOD10 = msg.value;
    |    }
  at buggy_8.sol(107)

[31mViolation[0m for TODAmount in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD10);
    |        claimed_TOD10 = true;
    |    }
  at buggy_8.sol(115)

[31mViolation[0m for TODAmount in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD22);
  > |        owner_TOD22.transfer(reward_TOD22);
    |        reward_TOD22 = msg.value;
    |    }
  at buggy_8.sol(126)

[31mViolation[0m for TODAmount in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD22);
    |        claimed_TOD22 = true;
    |    }
  at buggy_8.sol(134)

[31mViolation[0m for TODAmount in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD12);
  > |        owner_TOD12.transfer(reward_TOD12);
    |        reward_TOD12 = msg.value;
    |    }
  at buggy_8.sol(145)

[31mViolation[0m for TODAmount in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD12);
    |        claimed_TOD12 = true;
    |    }
  at buggy_8.sol(153)

[31mViolation[0m for TODAmount in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD2);
  > |        owner_TOD2.transfer(reward_TOD2);
    |        reward_TOD2 = msg.value;
    |    }
  at buggy_8.sol(195)

[31mViolation[0m for TODAmount in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD2);
    |        claimed_TOD2 = true;
    |    }
  at buggy_8.sol(203)

[31mViolation[0m for TODAmount in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD26);
  > |        owner_TOD26.transfer(reward_TOD26);
    |        reward_TOD26 = msg.value;
    |    }
  at buggy_8.sol(312)

[31mViolation[0m for TODAmount in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD26);
    |        claimed_TOD26 = true;
    |    }
  at buggy_8.sol(320)

[31mViolation[0m for TODAmount in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD20);
  > |        owner_TOD20.transfer(reward_TOD20);
    |        reward_TOD20 = msg.value;
    |    }
  at buggy_8.sol(343)

[31mViolation[0m for TODAmount in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD20);
    |        claimed_TOD20 = true;
    |    }
  at buggy_8.sol(351)

[31mViolation[0m for TODAmount in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_8.sol(377)

[31mViolation[0m for TODAmount in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_8.sol(385)

[31mViolation[0m for TODAmount in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_8.sol(410)

[31mViolation[0m for TODAmount in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_8.sol(418)

[31mViolation[0m for TODAmount in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_8.sol(447)

[31mViolation[0m for TODAmount in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_8.sol(455)

[31mViolation[0m for TODAmount in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD14);
  > |        owner_TOD14.transfer(reward_TOD14);
    |        reward_TOD14 = msg.value;
    |    }
  at buggy_8.sol(595)

[31mViolation[0m for TODAmount in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD14);
    |        claimed_TOD14 = true;
    |    }
  at buggy_8.sol(603)

[31mViolation[0m for TODAmount in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD30);
  > |        owner_TOD30.transfer(reward_TOD30);
    |        reward_TOD30 = msg.value;
    |    }
  at buggy_8.sol(623)

[31mViolation[0m for TODAmount in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD30);
    |        claimed_TOD30 = true;
    |    }
  at buggy_8.sol(631)

[31mViolation[0m for TODAmount in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD8);
  > |        owner_TOD8.transfer(reward_TOD8);
    |        reward_TOD8 = msg.value;
    |    }
  at buggy_8.sol(649)

[31mViolation[0m for TODAmount in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD8);
    |        claimed_TOD8 = true;
    |    }
  at buggy_8.sol(657)

[31mViolation[0m for TODAmount in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD36);
  > |        owner_TOD36.transfer(reward_TOD36);
    |        reward_TOD36 = msg.value;
    |    }
  at buggy_8.sol(694)

[31mViolation[0m for TODAmount in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_8.sol(702)

[33mWarning[0m for TODAmount in contract 'YFT':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |  address public owner;
  at buggy_8.sol(19)

[33mWarning[0m for TODAmount in contract 'YFT':
    |function getReward_TOD9() payable public{
    |     
  > |       winner_TOD9.transfer(msg.value);
    |    }
    |
  at buggy_8.sol(62)

[33mWarning[0m for TODAmount in contract 'YFT':
    |function getReward_TOD25() payable public{
    |     
  > |       winner_TOD25.transfer(msg.value);
    |    }
    |
  at buggy_8.sol(93)

[33mWarning[0m for TODAmount in contract 'YFT':
    |function getReward_TOD11() payable public{
    |     
  > |       winner_TOD11.transfer(msg.value);
    |    }
    |  uint256 public totalSupply;
  at buggy_8.sol(169)

[33mWarning[0m for TODAmount in contract 'YFT':
    |function getReward_TOD1() payable public{
    |     
  > |       winner_TOD1.transfer(msg.value);
    |    }
    |  mapping (address => uint256) public balanceOf;
  at buggy_8.sol(185)

[33mWarning[0m for TODAmount in contract 'YFT':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |  event Transfer(address indexed from, address indexed to, uint256 value);
  at buggy_8.sol(220)

[33mWarning[0m for TODAmount in contract 'YFT':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |  event Approval(address indexed _owner, address indexed _spender, uint256 _value);
  at buggy_8.sol(236)

[33mWarning[0m for TODAmount in contract 'YFT':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event Burn(address indexed from, uint256 value);
  at buggy_8.sol(252)

[33mWarning[0m for TODAmount in contract 'YFT':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |
  at buggy_8.sol(282)

[33mWarning[0m for TODAmount in contract 'YFT':
    |function getReward_TOD7() payable public{
    |     
  > |       winner_TOD7.transfer(msg.value);
    |    }
    |}
  at buggy_8.sol(487)

[33mWarning[0m for TODAmount in contract 'YFT':
    |function getReward_TOD17() payable public{
    |     
  > |       winner_TOD17.transfer(msg.value);
    |    }
    |  uint256 public sellPrice;
  at buggy_8.sol(508)

[33mWarning[0m for TODAmount in contract 'YFT':
    |function getReward_TOD37() payable public{
    |     
  > |       winner_TOD37.transfer(msg.value);
    |    }
    |  uint256 public buyPrice;
  at buggy_8.sol(522)

[33mWarning[0m for TODAmount in contract 'YFT':
    |function getReward_TOD3() payable public{
    |     
  > |       winner_TOD3.transfer(msg.value);
    |    }
    |  mapping (address => bool) public frozenAccount;
  at buggy_8.sol(537)

[33mWarning[0m for TODAmount in contract 'YFT':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event FrozenFunds(address target, bool frozen);
  at buggy_8.sol(553)

[33mWarning[0m for TODAmount in contract 'YFT':
    |function getReward_TOD23() payable public{
    |     
  > |       winner_TOD23.transfer(msg.value);
    |    }
    |
  at buggy_8.sol(574)

[33mWarning[0m for TODAmount in contract 'YFT':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |
  at buggy_8.sol(679)

[33mWarning[0m for TODAmount in contract 'YFT':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |}
  at buggy_8.sol(725)

[33mWarning[0m for TODAmount in contract 'YFT':
    |        require(myAddress.balance >= amount * sellPrice);   // checks if the contract has enough ether to buy
    |        _transfer(msg.sender, address(this), amount);       // makes the transfers
  > |        msg.sender.transfer(amount * sellPrice);            // sends ether to the seller. It's important to do this last to avoid recursion attacks
    |    }
    |address payable winner_TOD35;
  at buggy_8.sol(712)

[31mViolation[0m for TODReceiver in contract 'YFT':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |  address public owner;
  at buggy_8.sol(19)

[31mViolation[0m for TODReceiver in contract 'YFT':
    |function getReward_TOD9() payable public{
    |     
  > |       winner_TOD9.transfer(msg.value);
    |    }
    |
  at buggy_8.sol(62)

[31mViolation[0m for TODReceiver in contract 'YFT':
    |function getReward_TOD25() payable public{
    |     
  > |       winner_TOD25.transfer(msg.value);
    |    }
    |
  at buggy_8.sol(93)

[31mViolation[0m for TODReceiver in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD22);
  > |        owner_TOD22.transfer(reward_TOD22);
    |        reward_TOD22 = msg.value;
    |    }
  at buggy_8.sol(126)

[31mViolation[0m for TODReceiver in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD12);
  > |        owner_TOD12.transfer(reward_TOD12);
    |        reward_TOD12 = msg.value;
    |    }
  at buggy_8.sol(145)

[31mViolation[0m for TODReceiver in contract 'YFT':
    |function getReward_TOD11() payable public{
    |     
  > |       winner_TOD11.transfer(msg.value);
    |    }
    |  uint256 public totalSupply;
  at buggy_8.sol(169)

[31mViolation[0m for TODReceiver in contract 'YFT':
    |function getReward_TOD1() payable public{
    |     
  > |       winner_TOD1.transfer(msg.value);
    |    }
    |  mapping (address => uint256) public balanceOf;
  at buggy_8.sol(185)

[31mViolation[0m for TODReceiver in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD2);
  > |        owner_TOD2.transfer(reward_TOD2);
    |        reward_TOD2 = msg.value;
    |    }
  at buggy_8.sol(195)

[31mViolation[0m for TODReceiver in contract 'YFT':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |  event Transfer(address indexed from, address indexed to, uint256 value);
  at buggy_8.sol(220)

[31mViolation[0m for TODReceiver in contract 'YFT':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |  event Approval(address indexed _owner, address indexed _spender, uint256 _value);
  at buggy_8.sol(236)

[31mViolation[0m for TODReceiver in contract 'YFT':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event Burn(address indexed from, uint256 value);
  at buggy_8.sol(252)

[31mViolation[0m for TODReceiver in contract 'YFT':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |
  at buggy_8.sol(282)

[31mViolation[0m for TODReceiver in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD20);
  > |        owner_TOD20.transfer(reward_TOD20);
    |        reward_TOD20 = msg.value;
    |    }
  at buggy_8.sol(343)

[31mViolation[0m for TODReceiver in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD32);
  > |        owner_TOD32.transfer(reward_TOD32);
    |        reward_TOD32 = msg.value;
    |    }
  at buggy_8.sol(377)

[31mViolation[0m for TODReceiver in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD38);
  > |        owner_TOD38.transfer(reward_TOD38);
    |        reward_TOD38 = msg.value;
    |    }
  at buggy_8.sol(410)

[31mViolation[0m for TODReceiver in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD4);
  > |        owner_TOD4.transfer(reward_TOD4);
    |        reward_TOD4 = msg.value;
    |    }
  at buggy_8.sol(447)

[31mViolation[0m for TODReceiver in contract 'YFT':
    |function getReward_TOD7() payable public{
    |     
  > |       winner_TOD7.transfer(msg.value);
    |    }
    |}
  at buggy_8.sol(487)

[31mViolation[0m for TODReceiver in contract 'YFT':
    |function getReward_TOD17() payable public{
    |     
  > |       winner_TOD17.transfer(msg.value);
    |    }
    |  uint256 public sellPrice;
  at buggy_8.sol(508)

[31mViolation[0m for TODReceiver in contract 'YFT':
    |function getReward_TOD37() payable public{
    |     
  > |       winner_TOD37.transfer(msg.value);
    |    }
    |  uint256 public buyPrice;
  at buggy_8.sol(522)

[31mViolation[0m for TODReceiver in contract 'YFT':
    |function getReward_TOD3() payable public{
    |     
  > |       winner_TOD3.transfer(msg.value);
    |    }
    |  mapping (address => bool) public frozenAccount;
  at buggy_8.sol(537)

[31mViolation[0m for TODReceiver in contract 'YFT':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event FrozenFunds(address target, bool frozen);
  at buggy_8.sol(553)

[31mViolation[0m for TODReceiver in contract 'YFT':
    |function getReward_TOD23() payable public{
    |     
  > |       winner_TOD23.transfer(msg.value);
    |    }
    |
  at buggy_8.sol(574)

[31mViolation[0m for TODReceiver in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD30);
  > |        owner_TOD30.transfer(reward_TOD30);
    |        reward_TOD30 = msg.value;
    |    }
  at buggy_8.sol(623)

[31mViolation[0m for TODReceiver in contract 'YFT':
    |
    |        require(msg.sender == owner_TOD8);
  > |        owner_TOD8.transfer(reward_TOD8);
    |        reward_TOD8 = msg.value;
    |    }
  at buggy_8.sol(649)

[31mViolation[0m for TODReceiver in contract 'YFT':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |
  at buggy_8.sol(679)

[31mViolation[0m for TODReceiver in contract 'YFT':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |}
  at buggy_8.sol(725)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |function getReward_TOD21() payable public{
    |     
  > |       winner_TOD21.transfer(msg.value);
    |    }
    |  address public owner;
  at buggy_8.sol(19)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD40);
    |        claimed_TOD40 = true;
    |    }
  at buggy_8.sol(38)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |function getReward_TOD9() payable public{
    |     
  > |       winner_TOD9.transfer(msg.value);
    |    }
    |
  at buggy_8.sol(62)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |function getReward_TOD25() payable public{
    |     
  > |       winner_TOD25.transfer(msg.value);
    |    }
    |
  at buggy_8.sol(93)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD10);
    |        claimed_TOD10 = true;
    |    }
  at buggy_8.sol(115)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD22);
    |        claimed_TOD22 = true;
    |    }
  at buggy_8.sol(134)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD12);
    |        claimed_TOD12 = true;
    |    }
  at buggy_8.sol(153)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |function getReward_TOD11() payable public{
    |     
  > |       winner_TOD11.transfer(msg.value);
    |    }
    |  uint256 public totalSupply;
  at buggy_8.sol(169)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |function getReward_TOD1() payable public{
    |     
  > |       winner_TOD1.transfer(msg.value);
    |    }
    |  mapping (address => uint256) public balanceOf;
  at buggy_8.sol(185)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD2);
    |        claimed_TOD2 = true;
    |    }
  at buggy_8.sol(203)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |function getReward_TOD33() payable public{
    |     
  > |       winner_TOD33.transfer(msg.value);
    |    }
    |  event Transfer(address indexed from, address indexed to, uint256 value);
  at buggy_8.sol(220)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |function getReward_TOD27() payable public{
    |     
  > |       winner_TOD27.transfer(msg.value);
    |    }
    |  event Approval(address indexed _owner, address indexed _spender, uint256 _value);
  at buggy_8.sol(236)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |function getReward_TOD31() payable public{
    |     
  > |       winner_TOD31.transfer(msg.value);
    |    }
    |  event Burn(address indexed from, uint256 value);
  at buggy_8.sol(252)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |function getReward_TOD19() payable public{
    |     
  > |       winner_TOD19.transfer(msg.value);
    |    }
    |
  at buggy_8.sol(282)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD26);
    |        claimed_TOD26 = true;
    |    }
  at buggy_8.sol(320)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD20);
    |        claimed_TOD20 = true;
    |    }
  at buggy_8.sol(351)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD32);
    |        claimed_TOD32 = true;
    |    }
  at buggy_8.sol(385)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD38);
    |        claimed_TOD38 = true;
    |    }
  at buggy_8.sol(418)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD4);
    |        claimed_TOD4 = true;
    |    }
  at buggy_8.sol(455)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |function getReward_TOD7() payable public{
    |     
  > |       winner_TOD7.transfer(msg.value);
    |    }
    |}
  at buggy_8.sol(487)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |function getReward_TOD17() payable public{
    |     
  > |       winner_TOD17.transfer(msg.value);
    |    }
    |  uint256 public sellPrice;
  at buggy_8.sol(508)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |function getReward_TOD37() payable public{
    |     
  > |       winner_TOD37.transfer(msg.value);
    |    }
    |  uint256 public buyPrice;
  at buggy_8.sol(522)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |function getReward_TOD3() payable public{
    |     
  > |       winner_TOD3.transfer(msg.value);
    |    }
    |  mapping (address => bool) public frozenAccount;
  at buggy_8.sol(537)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |function getReward_TOD13() payable public{
    |     
  > |       winner_TOD13.transfer(msg.value);
    |    }
    |  event FrozenFunds(address target, bool frozen);
  at buggy_8.sol(553)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |function getReward_TOD23() payable public{
    |     
  > |       winner_TOD23.transfer(msg.value);
    |    }
    |
  at buggy_8.sol(574)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD14);
    |        claimed_TOD14 = true;
    |    }
  at buggy_8.sol(603)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD30);
    |        claimed_TOD30 = true;
    |    }
  at buggy_8.sol(631)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD8);
    |        claimed_TOD8 = true;
    |    }
  at buggy_8.sol(657)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |function getReward_TOD39() payable public{
    |     
  > |       winner_TOD39.transfer(msg.value);
    |    }
    |
  at buggy_8.sol(679)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |        require(submission < 10);
    |
  > |        msg.sender.transfer(reward_TOD36);
    |        claimed_TOD36 = true;
    |    }
  at buggy_8.sol(702)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |function getReward_TOD35() payable public{
    |     
  > |       winner_TOD35.transfer(msg.value);
    |    }
    |}
  at buggy_8.sol(725)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'YFT':
    |        require(myAddress.balance >= amount * sellPrice);   // checks if the contract has enough ether to buy
    |        _transfer(msg.sender, address(this), amount);       // makes the transfers
  > |        msg.sender.transfer(amount * sellPrice);            // sends ether to the seller. It's important to do this last to avoid recursion attacks
    |    }
    |address payable winner_TOD35;
  at buggy_8.sol(712)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD21 = msg.sender;
    |        }
    |    }
  at buggy_8.sol(13)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |
    |        msg.sender.transfer(reward_TOD40);
  > |        claimed_TOD40 = true;
    |    }
    |  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);
  at buggy_8.sol(39)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD9 = msg.sender;
    |        }
    |    }
  at buggy_8.sol(56)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD25 = msg.sender;
    |        }
    |    }
  at buggy_8.sol(87)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |
    |        msg.sender.transfer(reward_TOD10);
  > |        claimed_TOD10 = true;
    |    }
    |  string public name;
  at buggy_8.sol(116)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |
    |        msg.sender.transfer(reward_TOD22);
  > |        claimed_TOD22 = true;
    |    }
    |  string public symbol;
  at buggy_8.sol(135)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |
    |        msg.sender.transfer(reward_TOD12);
  > |        claimed_TOD12 = true;
    |    }
    |  uint8 public decimals = 18;
  at buggy_8.sol(154)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD11 = msg.sender;
    |        }
    |    }
  at buggy_8.sol(163)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD1 = msg.sender;
    |        }
    |    }
  at buggy_8.sol(179)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |
    |        msg.sender.transfer(reward_TOD2);
  > |        claimed_TOD2 = true;
    |    }
    |  mapping (address => mapping (address => uint256)) public allowance;
  at buggy_8.sol(204)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD33 = msg.sender;
    |        }
    |    }
  at buggy_8.sol(214)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD27 = msg.sender;
    |        }
    |    }
  at buggy_8.sol(230)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD31 = msg.sender;
    |        }
    |    }
  at buggy_8.sol(246)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD19 = msg.sender;
    |        }
    |    }
  at buggy_8.sol(276)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |
    |        msg.sender.transfer(reward_TOD26);
  > |        claimed_TOD26 = true;
    |    }
    |
  at buggy_8.sol(321)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |
    |        msg.sender.transfer(reward_TOD20);
  > |        claimed_TOD20 = true;
    |    }
    |
  at buggy_8.sol(352)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |
    |        msg.sender.transfer(reward_TOD32);
  > |        claimed_TOD32 = true;
    |    }
    |
  at buggy_8.sol(386)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |
    |        msg.sender.transfer(reward_TOD38);
  > |        claimed_TOD38 = true;
    |    }
    |
  at buggy_8.sol(419)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |        require(balanceOf[msg.sender] >= _value);   // Check if the sender has enough
    |        balanceOf[msg.sender] -= _value;            // Subtract from the sender
  > |        totalSupply -= _value;                      // Updates totalSupply
    |        emit Burn(msg.sender, _value);
    |        return true;
  at buggy_8.sol(436)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |
    |        msg.sender.transfer(reward_TOD4);
  > |        claimed_TOD4 = true;
    |    }
    |
  at buggy_8.sol(456)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |        require(balanceOf[_from] >= _value);                // Check if the targeted balance is enough
    |        require(_value <= allowance[_from][msg.sender]);    // Check allowance
  > |        balanceOf[_from] -= _value;                         // Subtract from the targeted balance
    |        allowance[_from][msg.sender] -= _value;             // Subtract from the sender's allowance
    |        totalSupply -= _value;                              // Update totalSupply
  at buggy_8.sol(470)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |        balanceOf[_from] -= _value;                         // Subtract from the targeted balance
    |        allowance[_from][msg.sender] -= _value;             // Subtract from the sender's allowance
  > |        totalSupply -= _value;                              // Update totalSupply
    |        emit Burn(_from, _value);
    |        return true;
  at buggy_8.sol(472)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD7 = msg.sender;
    |        }
    |    }
  at buggy_8.sol(481)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD17 = msg.sender;
    |        }
    |    }
  at buggy_8.sol(502)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD37 = msg.sender;
    |        }
    |    }
  at buggy_8.sol(516)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD3 = msg.sender;
    |        }
    |    }
  at buggy_8.sol(531)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD13 = msg.sender;
    |        }
    |    }
  at buggy_8.sol(547)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD23 = msg.sender;
    |        }
    |    }
  at buggy_8.sol(568)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |
    |        msg.sender.transfer(reward_TOD14);
  > |        claimed_TOD14 = true;
    |    }
    |
  at buggy_8.sol(604)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |
    |        msg.sender.transfer(reward_TOD30);
  > |        claimed_TOD30 = true;
    |    }
    |
  at buggy_8.sol(632)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |
    |        msg.sender.transfer(reward_TOD8);
  > |        claimed_TOD8 = true;
    |    }
    |
  at buggy_8.sol(658)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD39 = msg.sender;
    |        }
    |    }
  at buggy_8.sol(673)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |
    |        msg.sender.transfer(reward_TOD36);
  > |        claimed_TOD36 = true;
    |    }
    |
  at buggy_8.sol(703)

[31mViolation[0m for UnrestrictedWrite in contract 'YFT':
    |       if (keccak256(abi.encode(guess)) == keccak256(abi.encode('hello'))) {
    |
  > |            winner_TOD35 = msg.sender;
    |        }
    |    }
  at buggy_8.sol(719)

[33mWarning[0m for UnrestrictedWrite in contract 'YFT':
    |        require(msg.sender == owner_TOD40);
    |        owner_TOD40.transfer(reward_TOD40);
  > |        reward_TOD40 = msg.value;
    |    }
    |
  at buggy_8.sol(31)

[33mWarning[0m for UnrestrictedWrite in contract 'YFT':
    |    require(newOwner != address(0));
    |    emit OwnershipTransferred(owner, newOwner);
  > |    owner = newOwner;
    |  }
    |address payable winner_TOD25;
  at buggy_8.sol(80)

[33mWarning[0m for UnrestrictedWrite in contract 'YFT':
    |        require(msg.sender == owner_TOD10);
    |        owner_TOD10.transfer(reward_TOD10);
  > |        reward_TOD10 = msg.value;
    |    }
    |
  at buggy_8.sol(108)

[33mWarning[0m for UnrestrictedWrite in contract 'YFT':
    |        require(msg.sender == owner_TOD22);
    |        owner_TOD22.transfer(reward_TOD22);
  > |        reward_TOD22 = msg.value;
    |    }
    |
  at buggy_8.sol(127)

[33mWarning[0m for UnrestrictedWrite in contract 'YFT':
    |        require(msg.sender == owner_TOD12);
    |        owner_TOD12.transfer(reward_TOD12);
  > |        reward_TOD12 = msg.value;
    |    }
    |
  at buggy_8.sol(146)

[33mWarning[0m for UnrestrictedWrite in contract 'YFT':
    |        require(msg.sender == owner_TOD2);
    |        owner_TOD2.transfer(reward_TOD2);
  > |        reward_TOD2 = msg.value;
    |    }
    |
  at buggy_8.sol(196)

[33mWarning[0m for UnrestrictedWrite in contract 'YFT':
    |        require(msg.sender == owner_TOD26);
    |        owner_TOD26.transfer(reward_TOD26);
  > |        reward_TOD26 = msg.value;
    |    }
    |
  at buggy_8.sol(313)

[33mWarning[0m for UnrestrictedWrite in contract 'YFT':
    |        require(msg.sender == owner_TOD20);
    |        owner_TOD20.transfer(reward_TOD20);
  > |        reward_TOD20 = msg.value;
    |    }
    |
  at buggy_8.sol(344)

[33mWarning[0m for UnrestrictedWrite in contract 'YFT':
    |        require(msg.sender == owner_TOD32);
    |        owner_TOD32.transfer(reward_TOD32);
  > |        reward_TOD32 = msg.value;
    |    }
    |
  at buggy_8.sol(378)

[33mWarning[0m for UnrestrictedWrite in contract 'YFT':
    |        require(msg.sender == owner_TOD38);
    |        owner_TOD38.transfer(reward_TOD38);
  > |        reward_TOD38 = msg.value;
    |    }
    |
  at buggy_8.sol(411)

[33mWarning[0m for UnrestrictedWrite in contract 'YFT':
    |        require(msg.sender == owner_TOD4);
    |        owner_TOD4.transfer(reward_TOD4);
  > |        reward_TOD4 = msg.value;
    |    }
    |
  at buggy_8.sol(448)

[33mWarning[0m for UnrestrictedWrite in contract 'YFT':
    |        require(msg.sender == owner_TOD14);
    |        owner_TOD14.transfer(reward_TOD14);
  > |        reward_TOD14 = msg.value;
    |    }
    |
  at buggy_8.sol(596)

[33mWarning[0m for UnrestrictedWrite in contract 'YFT':
    |    /// @param mintedAmount the amount of tokens it will receive
    |    function mintToken(address target, uint256 mintedAmount) onlyOwner public {
  > |        balanceOf[target] += mintedAmount;
    |        totalSupply += mintedAmount;
    |        emit Transfer(address(0), address(this), mintedAmount);
  at buggy_8.sol(611)

[33mWarning[0m for UnrestrictedWrite in contract 'YFT':
    |    function mintToken(address target, uint256 mintedAmount) onlyOwner public {
    |        balanceOf[target] += mintedAmount;
  > |        totalSupply += mintedAmount;
    |        emit Transfer(address(0), address(this), mintedAmount);
    |        emit Transfer(address(this), target, mintedAmount);
  at buggy_8.sol(612)

[33mWarning[0m for UnrestrictedWrite in contract 'YFT':
    |        require(msg.sender == owner_TOD30);
    |        owner_TOD30.transfer(reward_TOD30);
  > |        reward_TOD30 = msg.value;
    |    }
    |
  at buggy_8.sol(624)

[33mWarning[0m for UnrestrictedWrite in contract 'YFT':
    |    /// @param freeze either to freeze it or not
    |    function freezeAccount(address target, bool freeze) onlyOwner public {
  > |        frozenAccount[target] = freeze;
    |        emit FrozenFunds(target, freeze);
    |    }
  at buggy_8.sol(639)

[33mWarning[0m for UnrestrictedWrite in contract 'YFT':
    |        require(msg.sender == owner_TOD8);
    |        owner_TOD8.transfer(reward_TOD8);
  > |        reward_TOD8 = msg.value;
    |    }
    |
  at buggy_8.sol(650)

[33mWarning[0m for UnrestrictedWrite in contract 'YFT':
    |    /// @param newBuyPrice Price users can buy from the contract
    |    function setPrices(uint256 newSellPrice, uint256 newBuyPrice) onlyOwner public {
  > |        sellPrice = newSellPrice;
    |        buyPrice = newBuyPrice;
    |    }
  at buggy_8.sol(665)

[33mWarning[0m for UnrestrictedWrite in contract 'YFT':
    |    function setPrices(uint256 newSellPrice, uint256 newBuyPrice) onlyOwner public {
    |        sellPrice = newSellPrice;
  > |        buyPrice = newBuyPrice;
    |    }
    |address payable winner_TOD39;
  at buggy_8.sol(666)

[33mWarning[0m for UnrestrictedWrite in contract 'YFT':
    |        require(msg.sender == owner_TOD36);
    |        owner_TOD36.transfer(reward_TOD36);
  > |        reward_TOD36 = msg.value;
    |    }
    |
  at buggy_8.sol(695)

