Processing contract: buggy_10.sol:DocumentSigner
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for DAO in contract 'DocumentSigner':
    |function bug_re_ent13() public{
    |        require(not_called_re_ent13);
  > |        (bool success,)=msg.sender.call.value(1 ether)("");
    |        if( ! success ){
    |            revert();
  at buggy_10.sol(40)

[31mViolation[0m for DAO in contract 'DocumentSigner':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        (bool success,)=msg.sender.call.value(userBalance_re_ent40[msg.sender])("");
    |        if( ! success ){
    |            revert();
  at buggy_10.sol(75)

[31mViolation[0m for DAO in contract 'DocumentSigner':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        (bool success,)= msg.sender.call.value(userBalance_re_ent33[msg.sender])("");
    |        if( ! success ){
    |            revert();
  at buggy_10.sol(90)

[31mViolation[0m for DAOConstantGas in contract 'DocumentSigner':
    |        require(redeemableEther_re_ent39[msg.sender] > 0);
    |        uint transferValue_re_ent39 = redeemableEther_re_ent39[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent39);   //bug
    |        redeemableEther_re_ent39[msg.sender] = 0;
    |    }
  at buggy_10.sol(13)

[31mViolation[0m for DAOConstantGas in contract 'DocumentSigner':
    |  mapping(address => uint) balances_re_ent36;
    |    function withdraw_balances_re_ent36 () public {
  > |       if (msg.sender.send(balances_re_ent36[msg.sender ]))
    |          balances_re_ent36[msg.sender] = 0;
    |      }
  at buggy_10.sol(19)

[31mViolation[0m for DAOConstantGas in contract 'DocumentSigner':
    |        require(balances_re_ent31[msg.sender] >= _weiToWithdraw);
    |        // limit the withdrawal
  > |        require(msg.sender.send(_weiToWithdraw));  //bug
    |        balances_re_ent31[msg.sender] -= _weiToWithdraw;
    |    }
  at buggy_10.sol(33)

[31mViolation[0m for DAOConstantGas in contract 'DocumentSigner':
    |function callme_re_ent35() public{
    |        require(counter_re_ent35<=5);
  > |	if( ! (msg.sender.send(10 ether) ) ){
    |            revert();
    |        }
  at buggy_10.sol(58)

[31mViolation[0m for DAOConstantGas in contract 'DocumentSigner':
    |function bug_re_ent27() public{
    |        require(not_called_re_ent27);
  > |        if( ! (msg.sender.send(1 ether) ) ){
    |            revert();
    |        }
  at buggy_10.sol(103)

[33mWarning[0m for TODAmount in contract 'DocumentSigner':
    |        require(redeemableEther_re_ent39[msg.sender] > 0);
    |        uint transferValue_re_ent39 = redeemableEther_re_ent39[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent39);   //bug
    |        redeemableEther_re_ent39[msg.sender] = 0;
    |    }
  at buggy_10.sol(13)

[33mWarning[0m for TODAmount in contract 'DocumentSigner':
    |  mapping(address => uint) balances_re_ent36;
    |    function withdraw_balances_re_ent36 () public {
  > |       if (msg.sender.send(balances_re_ent36[msg.sender ]))
    |          balances_re_ent36[msg.sender] = 0;
    |      }
  at buggy_10.sol(19)

[33mWarning[0m for TODAmount in contract 'DocumentSigner':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        (bool success,)=msg.sender.call.value(userBalance_re_ent40[msg.sender])("");
    |        if( ! success ){
    |            revert();
  at buggy_10.sol(75)

[33mWarning[0m for TODAmount in contract 'DocumentSigner':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        (bool success,)= msg.sender.call.value(userBalance_re_ent33[msg.sender])("");
    |        if( ! success ){
    |            revert();
  at buggy_10.sol(90)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'DocumentSigner':
    |        require(balances_re_ent31[msg.sender] >= _weiToWithdraw);
    |        // limit the withdrawal
  > |        require(msg.sender.send(_weiToWithdraw));  //bug
    |        balances_re_ent31[msg.sender] -= _weiToWithdraw;
    |    }
  at buggy_10.sol(33)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'DocumentSigner':
    |function bug_re_ent13() public{
    |        require(not_called_re_ent13);
  > |        (bool success,)=msg.sender.call.value(1 ether)("");
    |        if( ! success ){
    |            revert();
  at buggy_10.sol(40)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'DocumentSigner':
    |function bug_re_ent27() public{
    |        require(not_called_re_ent27);
  > |        if( ! (msg.sender.send(1 ether) ) ){
    |            revert();
    |        }
  at buggy_10.sol(103)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'DocumentSigner':
    |        require(redeemableEther_re_ent39[msg.sender] > 0);
    |        uint transferValue_re_ent39 = redeemableEther_re_ent39[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent39);   //bug
    |        redeemableEther_re_ent39[msg.sender] = 0;
    |    }
  at buggy_10.sol(13)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'DocumentSigner':
    |  mapping(address => uint) balances_re_ent36;
    |    function withdraw_balances_re_ent36 () public {
  > |       if (msg.sender.send(balances_re_ent36[msg.sender ]))
    |          balances_re_ent36[msg.sender] = 0;
    |      }
  at buggy_10.sol(19)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'DocumentSigner':
    |function callme_re_ent35() public{
    |        require(counter_re_ent35<=5);
  > |	if( ! (msg.sender.send(10 ether) ) ){
    |            revert();
    |        }
  at buggy_10.sol(58)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'DocumentSigner':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        (bool success,)=msg.sender.call.value(userBalance_re_ent40[msg.sender])("");
    |        if( ! success ){
    |            revert();
  at buggy_10.sol(75)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'DocumentSigner':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        (bool success,)= msg.sender.call.value(userBalance_re_ent33[msg.sender])("");
    |        if( ! success ){
    |            revert();
  at buggy_10.sol(90)

[31mViolation[0m for UnrestrictedWrite in contract 'DocumentSigner':
    |pragma solidity >=0.4.21 < 0.6.0;
    |
  > |contract DocumentSigner {
    |  mapping(address => uint) redeemableEther_re_ent39;
    |function claimReward_re_ent39() public {        
  at buggy_10.sol(7)

[31mViolation[0m for UnrestrictedWrite in contract 'DocumentSigner':
    |            revert();
    |        }
  > |        not_called_re_ent13 = false;
    |    }
    |  event NewDocument(bytes32 _docHash);
  at buggy_10.sol(44)

[31mViolation[0m for UnrestrictedWrite in contract 'DocumentSigner':
    |            revert();
    |        }
  > |        counter_re_ent35 += 1;
    |    }
    |
  at buggy_10.sol(61)

[31mViolation[0m for UnrestrictedWrite in contract 'DocumentSigner':
    |            revert();
    |        }
  > |        not_called_re_ent27 = false;
    |    }
    |}
  at buggy_10.sol(106)

