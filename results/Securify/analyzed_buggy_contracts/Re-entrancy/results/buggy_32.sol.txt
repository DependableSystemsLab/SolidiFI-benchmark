Processing contract: buggy_32.sol:AsseteGram
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_32.sol:ERC20Token
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_32.sol:ERC20TokenInterface
Processing contract: buggy_32.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for DAO in contract 'AsseteGram':
    |      uint jackpot_re_ent9;
    |	  function buyTicket_re_ent9() public{
  > |	    (bool success,) = lastPlayer_re_ent9.call.value(jackpot_re_ent9)("");
    |	    if (!success)
    |	        revert();
  at buggy_32.sol(105)

[31mViolation[0m for DAO in contract 'AsseteGram':
    |mapping(address => uint) balances_re_ent8;
    |    function withdraw_balances_re_ent8 () public {
  > |       (bool success,) = msg.sender.call.value(balances_re_ent8[msg.sender ])("");
    |       if (success)
    |          balances_re_ent8[msg.sender] = 0;
  at buggy_32.sol(141)

[31mViolation[0m for DAO in contract 'AsseteGram':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        (bool success,)=msg.sender.call.value(userBalance_re_ent40[msg.sender])("");
    |        if( ! success ){
    |            revert();
  at buggy_32.sol(216)

[31mViolation[0m for DAO in contract 'AsseteGram':
    |function bug_re_ent13() public{
    |        require(not_called_re_ent13);
  > |        (bool success,)=msg.sender.call.value(1 ether)("");
    |        if( ! success ){
    |            revert();
  at buggy_32.sol(237)

[31mViolation[0m for DAO in contract 'AsseteGram':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        (bool success,)= msg.sender.call.value(userBalance_re_ent26[msg.sender])("");
    |        if( ! success ){
    |            revert();
  at buggy_32.sol(255)

[31mViolation[0m for DAO in contract 'AsseteGram':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        (bool success,)= msg.sender.call.value(userBalance_re_ent33[msg.sender])("");
    |        if( ! success ){
    |            revert();
  at buggy_32.sol(299)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |        require(redeemableEther_re_ent4[msg.sender] > 0);
    |        uint transferValue_re_ent4 = redeemableEther_re_ent4[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent4);   //bug
    |        redeemableEther_re_ent4[msg.sender] = 0;
    |    }
  at buggy_32.sol(54)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |function callme_re_ent7() public{
    |        require(counter_re_ent7<=5);
  > |	if( ! (msg.sender.send(10 ether) ) ){
    |            revert();
    |        }
  at buggy_32.sol(61)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |      uint jackpot_re_ent23;
    |	  function buyTicket_re_ent23() public{
  > |	    if (!(lastPlayer_re_ent23.send(jackpot_re_ent23)))
    |        revert();
    |      lastPlayer_re_ent23 = msg.sender;
  at buggy_32.sol(70)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |function callme_re_ent14() public{
    |        require(counter_re_ent14<=5);
  > |	if( ! (msg.sender.send(10 ether) ) ){
    |            revert();
    |        }
  at buggy_32.sol(79)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |      uint jackpot_re_ent30;
    |	  function buyTicket_re_ent30() public{
  > |	    if (!(lastPlayer_re_ent30.send(jackpot_re_ent30)))
    |        revert();
    |      lastPlayer_re_ent30 = msg.sender;
  at buggy_32.sol(88)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |        require(redeemableEther_re_ent25[msg.sender] > 0);
    |        uint transferValue_re_ent25 = redeemableEther_re_ent25[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent25);   //bug
    |        redeemableEther_re_ent25[msg.sender] = 0;
    |    }
  at buggy_32.sol(117)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        if( ! (msg.sender.send(userBalance_re_ent19[msg.sender]) ) ){
    |            revert();
    |        }
  at buggy_32.sol(125)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |        require(redeemableEther_re_ent39[msg.sender] > 0);
    |        uint transferValue_re_ent39 = redeemableEther_re_ent39[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent39);   //bug
    |        redeemableEther_re_ent39[msg.sender] = 0;
    |    }
  at buggy_32.sol(162)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |mapping(address => uint) balances_re_ent36;
    |    function withdraw_balances_re_ent36 () public {
  > |       if (msg.sender.send(balances_re_ent36[msg.sender ]))
    |          balances_re_ent36[msg.sender] = 0;
    |      }
  at buggy_32.sol(181)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |function callme_re_ent35() public{
    |        require(counter_re_ent35<=5);
  > |	if( ! (msg.sender.send(10 ether) ) ){
    |            revert();
    |        }
  at buggy_32.sol(198)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |        require(balances_re_ent31[msg.sender] >= _weiToWithdraw);
    |        // limit the withdrawal
  > |        require(msg.sender.send(_weiToWithdraw));  //bug
    |        balances_re_ent31[msg.sender] -= _weiToWithdraw;
    |    }
  at buggy_32.sol(230)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |function bug_re_ent20() public{
    |        require(not_called_re_ent20);
  > |        if( ! (msg.sender.send(1 ether) ) ){
    |            revert();
    |        }
  at buggy_32.sol(265)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |        require(redeemableEther_re_ent32[msg.sender] > 0);
    |        uint transferValue_re_ent32 = redeemableEther_re_ent32[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent32);   //bug
    |        redeemableEther_re_ent32[msg.sender] = 0;
    |    }
  at buggy_32.sol(276)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |        require(balances_re_ent38[msg.sender] >= _weiToWithdraw);
    |        // limit the withdrawal
  > |        require(msg.sender.send(_weiToWithdraw));  //bug
    |        balances_re_ent38[msg.sender] -= _weiToWithdraw;
    |    }
  at buggy_32.sol(284)

[31mViolation[0m for DAOConstantGas in contract 'AsseteGram':
    |function bug_re_ent27() public{
    |        require(not_called_re_ent27);
  > |        if( ! (msg.sender.send(1 ether) ) ){
    |            revert();
    |        }
  at buggy_32.sol(315)

[31mViolation[0m for TODAmount in contract 'AsseteGram':
    |      uint jackpot_re_ent23;
    |	  function buyTicket_re_ent23() public{
  > |	    if (!(lastPlayer_re_ent23.send(jackpot_re_ent23)))
    |        revert();
    |      lastPlayer_re_ent23 = msg.sender;
  at buggy_32.sol(70)

[31mViolation[0m for TODAmount in contract 'AsseteGram':
    |      uint jackpot_re_ent30;
    |	  function buyTicket_re_ent30() public{
  > |	    if (!(lastPlayer_re_ent30.send(jackpot_re_ent30)))
    |        revert();
    |      lastPlayer_re_ent30 = msg.sender;
  at buggy_32.sol(88)

[31mViolation[0m for TODAmount in contract 'AsseteGram':
    |      uint jackpot_re_ent9;
    |	  function buyTicket_re_ent9() public{
  > |	    (bool success,) = lastPlayer_re_ent9.call.value(jackpot_re_ent9)("");
    |	    if (!success)
    |	        revert();
  at buggy_32.sol(105)

[33mWarning[0m for TODAmount in contract 'AsseteGram':
    |        require(redeemableEther_re_ent4[msg.sender] > 0);
    |        uint transferValue_re_ent4 = redeemableEther_re_ent4[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent4);   //bug
    |        redeemableEther_re_ent4[msg.sender] = 0;
    |    }
  at buggy_32.sol(54)

[33mWarning[0m for TODAmount in contract 'AsseteGram':
    |        require(redeemableEther_re_ent25[msg.sender] > 0);
    |        uint transferValue_re_ent25 = redeemableEther_re_ent25[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent25);   //bug
    |        redeemableEther_re_ent25[msg.sender] = 0;
    |    }
  at buggy_32.sol(117)

[33mWarning[0m for TODAmount in contract 'AsseteGram':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        if( ! (msg.sender.send(userBalance_re_ent19[msg.sender]) ) ){
    |            revert();
    |        }
  at buggy_32.sol(125)

[33mWarning[0m for TODAmount in contract 'AsseteGram':
    |mapping(address => uint) balances_re_ent8;
    |    function withdraw_balances_re_ent8 () public {
  > |       (bool success,) = msg.sender.call.value(balances_re_ent8[msg.sender ])("");
    |       if (success)
    |          balances_re_ent8[msg.sender] = 0;
  at buggy_32.sol(141)

[33mWarning[0m for TODAmount in contract 'AsseteGram':
    |        require(redeemableEther_re_ent39[msg.sender] > 0);
    |        uint transferValue_re_ent39 = redeemableEther_re_ent39[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent39);   //bug
    |        redeemableEther_re_ent39[msg.sender] = 0;
    |    }
  at buggy_32.sol(162)

[33mWarning[0m for TODAmount in contract 'AsseteGram':
    |mapping(address => uint) balances_re_ent36;
    |    function withdraw_balances_re_ent36 () public {
  > |       if (msg.sender.send(balances_re_ent36[msg.sender ]))
    |          balances_re_ent36[msg.sender] = 0;
    |      }
  at buggy_32.sol(181)

[33mWarning[0m for TODAmount in contract 'AsseteGram':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        (bool success,)=msg.sender.call.value(userBalance_re_ent40[msg.sender])("");
    |        if( ! success ){
    |            revert();
  at buggy_32.sol(216)

[33mWarning[0m for TODAmount in contract 'AsseteGram':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        (bool success,)= msg.sender.call.value(userBalance_re_ent26[msg.sender])("");
    |        if( ! success ){
    |            revert();
  at buggy_32.sol(255)

[33mWarning[0m for TODAmount in contract 'AsseteGram':
    |        require(redeemableEther_re_ent32[msg.sender] > 0);
    |        uint transferValue_re_ent32 = redeemableEther_re_ent32[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent32);   //bug
    |        redeemableEther_re_ent32[msg.sender] = 0;
    |    }
  at buggy_32.sol(276)

[33mWarning[0m for TODAmount in contract 'AsseteGram':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        (bool success,)= msg.sender.call.value(userBalance_re_ent33[msg.sender])("");
    |        if( ! success ){
    |            revert();
  at buggy_32.sol(299)

[31mViolation[0m for TODReceiver in contract 'AsseteGram':
    |      uint jackpot_re_ent23;
    |	  function buyTicket_re_ent23() public{
  > |	    if (!(lastPlayer_re_ent23.send(jackpot_re_ent23)))
    |        revert();
    |      lastPlayer_re_ent23 = msg.sender;
  at buggy_32.sol(70)

[31mViolation[0m for TODReceiver in contract 'AsseteGram':
    |      uint jackpot_re_ent30;
    |	  function buyTicket_re_ent30() public{
  > |	    if (!(lastPlayer_re_ent30.send(jackpot_re_ent30)))
    |        revert();
    |      lastPlayer_re_ent30 = msg.sender;
  at buggy_32.sol(88)

[31mViolation[0m for TODReceiver in contract 'AsseteGram':
    |      uint jackpot_re_ent9;
    |	  function buyTicket_re_ent9() public{
  > |	    (bool success,) = lastPlayer_re_ent9.call.value(jackpot_re_ent9)("");
    |	    if (!success)
    |	        revert();
  at buggy_32.sol(105)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |        require(balances_re_ent31[msg.sender] >= _weiToWithdraw);
    |        // limit the withdrawal
  > |        require(msg.sender.send(_weiToWithdraw));  //bug
    |        balances_re_ent31[msg.sender] -= _weiToWithdraw;
    |    }
  at buggy_32.sol(230)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |function bug_re_ent13() public{
    |        require(not_called_re_ent13);
  > |        (bool success,)=msg.sender.call.value(1 ether)("");
    |        if( ! success ){
    |            revert();
  at buggy_32.sol(237)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |function bug_re_ent20() public{
    |        require(not_called_re_ent20);
  > |        if( ! (msg.sender.send(1 ether) ) ){
    |            revert();
    |        }
  at buggy_32.sol(265)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |        require(balances_re_ent38[msg.sender] >= _weiToWithdraw);
    |        // limit the withdrawal
  > |        require(msg.sender.send(_weiToWithdraw));  //bug
    |        balances_re_ent38[msg.sender] -= _weiToWithdraw;
    |    }
  at buggy_32.sol(284)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |function bug_re_ent27() public{
    |        require(not_called_re_ent27);
  > |        if( ! (msg.sender.send(1 ether) ) ){
    |            revert();
    |        }
  at buggy_32.sol(315)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |        require(redeemableEther_re_ent4[msg.sender] > 0);
    |        uint transferValue_re_ent4 = redeemableEther_re_ent4[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent4);   //bug
    |        redeemableEther_re_ent4[msg.sender] = 0;
    |    }
  at buggy_32.sol(54)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |function callme_re_ent7() public{
    |        require(counter_re_ent7<=5);
  > |	if( ! (msg.sender.send(10 ether) ) ){
    |            revert();
    |        }
  at buggy_32.sol(61)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |      uint jackpot_re_ent23;
    |	  function buyTicket_re_ent23() public{
  > |	    if (!(lastPlayer_re_ent23.send(jackpot_re_ent23)))
    |        revert();
    |      lastPlayer_re_ent23 = msg.sender;
  at buggy_32.sol(70)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |function callme_re_ent14() public{
    |        require(counter_re_ent14<=5);
  > |	if( ! (msg.sender.send(10 ether) ) ){
    |            revert();
    |        }
  at buggy_32.sol(79)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |      uint jackpot_re_ent30;
    |	  function buyTicket_re_ent30() public{
  > |	    if (!(lastPlayer_re_ent30.send(jackpot_re_ent30)))
    |        revert();
    |      lastPlayer_re_ent30 = msg.sender;
  at buggy_32.sol(88)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |      uint jackpot_re_ent9;
    |	  function buyTicket_re_ent9() public{
  > |	    (bool success,) = lastPlayer_re_ent9.call.value(jackpot_re_ent9)("");
    |	    if (!success)
    |	        revert();
  at buggy_32.sol(105)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |        require(redeemableEther_re_ent25[msg.sender] > 0);
    |        uint transferValue_re_ent25 = redeemableEther_re_ent25[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent25);   //bug
    |        redeemableEther_re_ent25[msg.sender] = 0;
    |    }
  at buggy_32.sol(117)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        if( ! (msg.sender.send(userBalance_re_ent19[msg.sender]) ) ){
    |            revert();
    |        }
  at buggy_32.sol(125)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |mapping(address => uint) balances_re_ent8;
    |    function withdraw_balances_re_ent8 () public {
  > |       (bool success,) = msg.sender.call.value(balances_re_ent8[msg.sender ])("");
    |       if (success)
    |          balances_re_ent8[msg.sender] = 0;
  at buggy_32.sol(141)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |        require(redeemableEther_re_ent39[msg.sender] > 0);
    |        uint transferValue_re_ent39 = redeemableEther_re_ent39[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent39);   //bug
    |        redeemableEther_re_ent39[msg.sender] = 0;
    |    }
  at buggy_32.sol(162)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |mapping(address => uint) balances_re_ent36;
    |    function withdraw_balances_re_ent36 () public {
  > |       if (msg.sender.send(balances_re_ent36[msg.sender ]))
    |          balances_re_ent36[msg.sender] = 0;
    |      }
  at buggy_32.sol(181)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |function callme_re_ent35() public{
    |        require(counter_re_ent35<=5);
  > |	if( ! (msg.sender.send(10 ether) ) ){
    |            revert();
    |        }
  at buggy_32.sol(198)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        (bool success,)=msg.sender.call.value(userBalance_re_ent40[msg.sender])("");
    |        if( ! success ){
    |            revert();
  at buggy_32.sol(216)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        (bool success,)= msg.sender.call.value(userBalance_re_ent26[msg.sender])("");
    |        if( ! success ){
    |            revert();
  at buggy_32.sol(255)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |        require(redeemableEther_re_ent32[msg.sender] > 0);
    |        uint transferValue_re_ent32 = redeemableEther_re_ent32[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent32);   //bug
    |        redeemableEther_re_ent32[msg.sender] = 0;
    |    }
  at buggy_32.sol(276)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AsseteGram':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        (bool success,)= msg.sender.call.value(userBalance_re_ent33[msg.sender])("");
    |        if( ! success ){
    |            revert();
  at buggy_32.sol(299)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |            revert();
    |        }
  > |        counter_re_ent7 += 1;
    |    }
    |    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);
  at buggy_32.sol(64)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |	    if (!(lastPlayer_re_ent23.send(jackpot_re_ent23)))
    |        revert();
  > |      lastPlayer_re_ent23 = msg.sender;
    |      jackpot_re_ent23    = address(this).balance;
    |    }
  at buggy_32.sol(72)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |        revert();
    |      lastPlayer_re_ent23 = msg.sender;
  > |      jackpot_re_ent23    = address(this).balance;
    |    }
    |    function approve(address _spender, uint256 _value) public returns (bool success);
  at buggy_32.sol(73)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |            revert();
    |        }
  > |        counter_re_ent14 += 1;
    |    }
    |    function allowance(address _owner, address _spender) public view returns (uint256 remaining);
  at buggy_32.sol(82)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |	    if (!(lastPlayer_re_ent30.send(jackpot_re_ent30)))
    |        revert();
  > |      lastPlayer_re_ent30 = msg.sender;
    |      jackpot_re_ent30    = address(this).balance;
    |    }
  at buggy_32.sol(90)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |        revert();
    |      lastPlayer_re_ent30 = msg.sender;
  > |      jackpot_re_ent30    = address(this).balance;
    |    }
    |
  at buggy_32.sol(91)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |	    if (!success)
    |	        revert();
  > |      lastPlayer_re_ent9 = msg.sender;
    |      jackpot_re_ent9    = address(this).balance;
    |    }
  at buggy_32.sol(108)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |	        revert();
    |      lastPlayer_re_ent9 = msg.sender;
  > |      jackpot_re_ent9    = address(this).balance;
    |    }
    |  uint256 public totalSupply;
  at buggy_32.sol(109)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |    function transfer(address _to, uint256 _value) public returns (bool success) {
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at buggy_32.sol(153)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(_from, _to, _value);
  at buggy_32.sol(174)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(_from, _to, _value);
    |        return true;
  at buggy_32.sol(175)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |            revert();
    |        }
  > |        counter_re_ent35 += 1;
    |    }
    |
  at buggy_32.sol(201)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |            revert();
    |        }
  > |        not_called_re_ent13 = false;
    |    }
    |  event Approval(address indexed _owner, address indexed _spender, uint256 _value);
  at buggy_32.sol(241)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |            revert();
    |        }
  > |        not_called_re_ent20 = false;
    |    }
    |  uint8 public decimals = 3;
  at buggy_32.sol(268)

[31mViolation[0m for UnrestrictedWrite in contract 'AsseteGram':
    |            revert();
    |        }
  > |        not_called_re_ent27 = false;
    |    }
    |
  at buggy_32.sol(318)

[31mViolation[0m for DAO in contract 'ERC20Token':
    |      uint jackpot_re_ent9;
    |	  function buyTicket_re_ent9() public{
  > |	    (bool success,) = lastPlayer_re_ent9.call.value(jackpot_re_ent9)("");
    |	    if (!success)
    |	        revert();
  at buggy_32.sol(105)

[31mViolation[0m for DAO in contract 'ERC20Token':
    |mapping(address => uint) balances_re_ent8;
    |    function withdraw_balances_re_ent8 () public {
  > |       (bool success,) = msg.sender.call.value(balances_re_ent8[msg.sender ])("");
    |       if (success)
    |          balances_re_ent8[msg.sender] = 0;
  at buggy_32.sol(141)

[31mViolation[0m for DAO in contract 'ERC20Token':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        (bool success,)=msg.sender.call.value(userBalance_re_ent40[msg.sender])("");
    |        if( ! success ){
    |            revert();
  at buggy_32.sol(216)

[31mViolation[0m for DAO in contract 'ERC20Token':
    |function bug_re_ent13() public{
    |        require(not_called_re_ent13);
  > |        (bool success,)=msg.sender.call.value(1 ether)("");
    |        if( ! success ){
    |            revert();
  at buggy_32.sol(237)

[31mViolation[0m for DAOConstantGas in contract 'ERC20Token':
    |        require(redeemableEther_re_ent4[msg.sender] > 0);
    |        uint transferValue_re_ent4 = redeemableEther_re_ent4[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent4);   //bug
    |        redeemableEther_re_ent4[msg.sender] = 0;
    |    }
  at buggy_32.sol(54)

[31mViolation[0m for DAOConstantGas in contract 'ERC20Token':
    |function callme_re_ent7() public{
    |        require(counter_re_ent7<=5);
  > |	if( ! (msg.sender.send(10 ether) ) ){
    |            revert();
    |        }
  at buggy_32.sol(61)

[31mViolation[0m for DAOConstantGas in contract 'ERC20Token':
    |      uint jackpot_re_ent23;
    |	  function buyTicket_re_ent23() public{
  > |	    if (!(lastPlayer_re_ent23.send(jackpot_re_ent23)))
    |        revert();
    |      lastPlayer_re_ent23 = msg.sender;
  at buggy_32.sol(70)

[31mViolation[0m for DAOConstantGas in contract 'ERC20Token':
    |function callme_re_ent14() public{
    |        require(counter_re_ent14<=5);
  > |	if( ! (msg.sender.send(10 ether) ) ){
    |            revert();
    |        }
  at buggy_32.sol(79)

[31mViolation[0m for DAOConstantGas in contract 'ERC20Token':
    |      uint jackpot_re_ent30;
    |	  function buyTicket_re_ent30() public{
  > |	    if (!(lastPlayer_re_ent30.send(jackpot_re_ent30)))
    |        revert();
    |      lastPlayer_re_ent30 = msg.sender;
  at buggy_32.sol(88)

[31mViolation[0m for DAOConstantGas in contract 'ERC20Token':
    |        require(redeemableEther_re_ent25[msg.sender] > 0);
    |        uint transferValue_re_ent25 = redeemableEther_re_ent25[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent25);   //bug
    |        redeemableEther_re_ent25[msg.sender] = 0;
    |    }
  at buggy_32.sol(117)

[31mViolation[0m for DAOConstantGas in contract 'ERC20Token':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        if( ! (msg.sender.send(userBalance_re_ent19[msg.sender]) ) ){
    |            revert();
    |        }
  at buggy_32.sol(125)

[31mViolation[0m for DAOConstantGas in contract 'ERC20Token':
    |        require(redeemableEther_re_ent39[msg.sender] > 0);
    |        uint transferValue_re_ent39 = redeemableEther_re_ent39[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent39);   //bug
    |        redeemableEther_re_ent39[msg.sender] = 0;
    |    }
  at buggy_32.sol(162)

[31mViolation[0m for DAOConstantGas in contract 'ERC20Token':
    |mapping(address => uint) balances_re_ent36;
    |    function withdraw_balances_re_ent36 () public {
  > |       if (msg.sender.send(balances_re_ent36[msg.sender ]))
    |          balances_re_ent36[msg.sender] = 0;
    |      }
  at buggy_32.sol(181)

[31mViolation[0m for DAOConstantGas in contract 'ERC20Token':
    |function callme_re_ent35() public{
    |        require(counter_re_ent35<=5);
  > |	if( ! (msg.sender.send(10 ether) ) ){
    |            revert();
    |        }
  at buggy_32.sol(198)

[31mViolation[0m for DAOConstantGas in contract 'ERC20Token':
    |        require(balances_re_ent31[msg.sender] >= _weiToWithdraw);
    |        // limit the withdrawal
  > |        require(msg.sender.send(_weiToWithdraw));  //bug
    |        balances_re_ent31[msg.sender] -= _weiToWithdraw;
    |    }
  at buggy_32.sol(230)

[31mViolation[0m for TODAmount in contract 'ERC20Token':
    |      uint jackpot_re_ent23;
    |	  function buyTicket_re_ent23() public{
  > |	    if (!(lastPlayer_re_ent23.send(jackpot_re_ent23)))
    |        revert();
    |      lastPlayer_re_ent23 = msg.sender;
  at buggy_32.sol(70)

[31mViolation[0m for TODAmount in contract 'ERC20Token':
    |      uint jackpot_re_ent30;
    |	  function buyTicket_re_ent30() public{
  > |	    if (!(lastPlayer_re_ent30.send(jackpot_re_ent30)))
    |        revert();
    |      lastPlayer_re_ent30 = msg.sender;
  at buggy_32.sol(88)

[31mViolation[0m for TODAmount in contract 'ERC20Token':
    |      uint jackpot_re_ent9;
    |	  function buyTicket_re_ent9() public{
  > |	    (bool success,) = lastPlayer_re_ent9.call.value(jackpot_re_ent9)("");
    |	    if (!success)
    |	        revert();
  at buggy_32.sol(105)

[33mWarning[0m for TODAmount in contract 'ERC20Token':
    |        require(redeemableEther_re_ent4[msg.sender] > 0);
    |        uint transferValue_re_ent4 = redeemableEther_re_ent4[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent4);   //bug
    |        redeemableEther_re_ent4[msg.sender] = 0;
    |    }
  at buggy_32.sol(54)

[33mWarning[0m for TODAmount in contract 'ERC20Token':
    |        require(redeemableEther_re_ent25[msg.sender] > 0);
    |        uint transferValue_re_ent25 = redeemableEther_re_ent25[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent25);   //bug
    |        redeemableEther_re_ent25[msg.sender] = 0;
    |    }
  at buggy_32.sol(117)

[33mWarning[0m for TODAmount in contract 'ERC20Token':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        if( ! (msg.sender.send(userBalance_re_ent19[msg.sender]) ) ){
    |            revert();
    |        }
  at buggy_32.sol(125)

[33mWarning[0m for TODAmount in contract 'ERC20Token':
    |mapping(address => uint) balances_re_ent8;
    |    function withdraw_balances_re_ent8 () public {
  > |       (bool success,) = msg.sender.call.value(balances_re_ent8[msg.sender ])("");
    |       if (success)
    |          balances_re_ent8[msg.sender] = 0;
  at buggy_32.sol(141)

[33mWarning[0m for TODAmount in contract 'ERC20Token':
    |        require(redeemableEther_re_ent39[msg.sender] > 0);
    |        uint transferValue_re_ent39 = redeemableEther_re_ent39[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent39);   //bug
    |        redeemableEther_re_ent39[msg.sender] = 0;
    |    }
  at buggy_32.sol(162)

[33mWarning[0m for TODAmount in contract 'ERC20Token':
    |mapping(address => uint) balances_re_ent36;
    |    function withdraw_balances_re_ent36 () public {
  > |       if (msg.sender.send(balances_re_ent36[msg.sender ]))
    |          balances_re_ent36[msg.sender] = 0;
    |      }
  at buggy_32.sol(181)

[33mWarning[0m for TODAmount in contract 'ERC20Token':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        (bool success,)=msg.sender.call.value(userBalance_re_ent40[msg.sender])("");
    |        if( ! success ){
    |            revert();
  at buggy_32.sol(216)

[31mViolation[0m for TODReceiver in contract 'ERC20Token':
    |      uint jackpot_re_ent23;
    |	  function buyTicket_re_ent23() public{
  > |	    if (!(lastPlayer_re_ent23.send(jackpot_re_ent23)))
    |        revert();
    |      lastPlayer_re_ent23 = msg.sender;
  at buggy_32.sol(70)

[31mViolation[0m for TODReceiver in contract 'ERC20Token':
    |      uint jackpot_re_ent30;
    |	  function buyTicket_re_ent30() public{
  > |	    if (!(lastPlayer_re_ent30.send(jackpot_re_ent30)))
    |        revert();
    |      lastPlayer_re_ent30 = msg.sender;
  at buggy_32.sol(88)

[31mViolation[0m for TODReceiver in contract 'ERC20Token':
    |      uint jackpot_re_ent9;
    |	  function buyTicket_re_ent9() public{
  > |	    (bool success,) = lastPlayer_re_ent9.call.value(jackpot_re_ent9)("");
    |	    if (!success)
    |	        revert();
  at buggy_32.sol(105)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |        require(balances_re_ent31[msg.sender] >= _weiToWithdraw);
    |        // limit the withdrawal
  > |        require(msg.sender.send(_weiToWithdraw));  //bug
    |        balances_re_ent31[msg.sender] -= _weiToWithdraw;
    |    }
  at buggy_32.sol(230)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |function bug_re_ent13() public{
    |        require(not_called_re_ent13);
  > |        (bool success,)=msg.sender.call.value(1 ether)("");
    |        if( ! success ){
    |            revert();
  at buggy_32.sol(237)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |        require(redeemableEther_re_ent4[msg.sender] > 0);
    |        uint transferValue_re_ent4 = redeemableEther_re_ent4[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent4);   //bug
    |        redeemableEther_re_ent4[msg.sender] = 0;
    |    }
  at buggy_32.sol(54)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |function callme_re_ent7() public{
    |        require(counter_re_ent7<=5);
  > |	if( ! (msg.sender.send(10 ether) ) ){
    |            revert();
    |        }
  at buggy_32.sol(61)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |      uint jackpot_re_ent23;
    |	  function buyTicket_re_ent23() public{
  > |	    if (!(lastPlayer_re_ent23.send(jackpot_re_ent23)))
    |        revert();
    |      lastPlayer_re_ent23 = msg.sender;
  at buggy_32.sol(70)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |function callme_re_ent14() public{
    |        require(counter_re_ent14<=5);
  > |	if( ! (msg.sender.send(10 ether) ) ){
    |            revert();
    |        }
  at buggy_32.sol(79)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |      uint jackpot_re_ent30;
    |	  function buyTicket_re_ent30() public{
  > |	    if (!(lastPlayer_re_ent30.send(jackpot_re_ent30)))
    |        revert();
    |      lastPlayer_re_ent30 = msg.sender;
  at buggy_32.sol(88)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |      uint jackpot_re_ent9;
    |	  function buyTicket_re_ent9() public{
  > |	    (bool success,) = lastPlayer_re_ent9.call.value(jackpot_re_ent9)("");
    |	    if (!success)
    |	        revert();
  at buggy_32.sol(105)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |        require(redeemableEther_re_ent25[msg.sender] > 0);
    |        uint transferValue_re_ent25 = redeemableEther_re_ent25[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent25);   //bug
    |        redeemableEther_re_ent25[msg.sender] = 0;
    |    }
  at buggy_32.sol(117)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        if( ! (msg.sender.send(userBalance_re_ent19[msg.sender]) ) ){
    |            revert();
    |        }
  at buggy_32.sol(125)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |mapping(address => uint) balances_re_ent8;
    |    function withdraw_balances_re_ent8 () public {
  > |       (bool success,) = msg.sender.call.value(balances_re_ent8[msg.sender ])("");
    |       if (success)
    |          balances_re_ent8[msg.sender] = 0;
  at buggy_32.sol(141)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |        require(redeemableEther_re_ent39[msg.sender] > 0);
    |        uint transferValue_re_ent39 = redeemableEther_re_ent39[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent39);   //bug
    |        redeemableEther_re_ent39[msg.sender] = 0;
    |    }
  at buggy_32.sol(162)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |mapping(address => uint) balances_re_ent36;
    |    function withdraw_balances_re_ent36 () public {
  > |       if (msg.sender.send(balances_re_ent36[msg.sender ]))
    |          balances_re_ent36[msg.sender] = 0;
    |      }
  at buggy_32.sol(181)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |function callme_re_ent35() public{
    |        require(counter_re_ent35<=5);
  > |	if( ! (msg.sender.send(10 ether) ) ){
    |            revert();
    |        }
  at buggy_32.sol(198)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ERC20Token':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        (bool success,)=msg.sender.call.value(userBalance_re_ent40[msg.sender])("");
    |        if( ! success ){
    |            revert();
  at buggy_32.sol(216)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |            revert();
    |        }
  > |        counter_re_ent7 += 1;
    |    }
    |    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);
  at buggy_32.sol(64)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |	    if (!(lastPlayer_re_ent23.send(jackpot_re_ent23)))
    |        revert();
  > |      lastPlayer_re_ent23 = msg.sender;
    |      jackpot_re_ent23    = address(this).balance;
    |    }
  at buggy_32.sol(72)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |        revert();
    |      lastPlayer_re_ent23 = msg.sender;
  > |      jackpot_re_ent23    = address(this).balance;
    |    }
    |    function approve(address _spender, uint256 _value) public returns (bool success);
  at buggy_32.sol(73)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |            revert();
    |        }
  > |        counter_re_ent14 += 1;
    |    }
    |    function allowance(address _owner, address _spender) public view returns (uint256 remaining);
  at buggy_32.sol(82)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |	    if (!(lastPlayer_re_ent30.send(jackpot_re_ent30)))
    |        revert();
  > |      lastPlayer_re_ent30 = msg.sender;
    |      jackpot_re_ent30    = address(this).balance;
    |    }
  at buggy_32.sol(90)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |        revert();
    |      lastPlayer_re_ent30 = msg.sender;
  > |      jackpot_re_ent30    = address(this).balance;
    |    }
    |
  at buggy_32.sol(91)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |	    if (!success)
    |	        revert();
  > |      lastPlayer_re_ent9 = msg.sender;
    |      jackpot_re_ent9    = address(this).balance;
    |    }
  at buggy_32.sol(108)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |	        revert();
    |      lastPlayer_re_ent9 = msg.sender;
  > |      jackpot_re_ent9    = address(this).balance;
    |    }
    |  uint256 public totalSupply;
  at buggy_32.sol(109)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |    function transfer(address _to, uint256 _value) public returns (bool success) {
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at buggy_32.sol(153)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(_from, _to, _value);
  at buggy_32.sol(174)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(_from, _to, _value);
    |        return true;
  at buggy_32.sol(175)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |            revert();
    |        }
  > |        counter_re_ent35 += 1;
    |    }
    |
  at buggy_32.sol(201)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC20Token':
    |            revert();
    |        }
  > |        not_called_re_ent13 = false;
    |    }
    |  event Approval(address indexed _owner, address indexed _spender, uint256 _value);
  at buggy_32.sol(241)

