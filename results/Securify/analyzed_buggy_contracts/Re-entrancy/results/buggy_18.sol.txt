Processing contract: buggy_18.sol:ApproveAndCallFallBack
Processing contract: buggy_18.sol:ERC20Interface
Processing contract: buggy_18.sol:ExtendedMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_18.sol:Owned
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_18.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_18.sol:_Yesbuzz
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for DAO in contract 'Owned':
    |        require(balances_re_ent17[msg.sender] >= _weiToWithdraw);
    |        // limit the withdrawal
  > |        (bool success,)=msg.sender.call.value(_weiToWithdraw)("");
    |        require(success);  //bug
    |        balances_re_ent17[msg.sender] -= _weiToWithdraw;
  at buggy_18.sol(211)

[31mViolation[0m for DAOConstantGas in contract 'Owned':
    |        require(balances_re_ent31[msg.sender] >= _weiToWithdraw);
    |        // limit the withdrawal
  > |        require(msg.sender.send(_weiToWithdraw));  //bug
    |        balances_re_ent31[msg.sender] -= _weiToWithdraw;
    |    }
  at buggy_18.sol(167)

[31mViolation[0m for DAOConstantGas in contract 'Owned':
    |function callme_re_ent42() public{
    |        require(counter_re_ent42<=5);
  > |	if( ! (msg.sender.send(10 ether) ) ){
    |            revert();
    |        }
  at buggy_18.sol(178)

[31mViolation[0m for DAOConstantGas in contract 'Owned':
    |      uint jackpot_re_ent2;
    |	  function buyTicket_re_ent2() public{
  > |	    if (!(lastPlayer_re_ent2.send(jackpot_re_ent2)))
    |        revert();
    |      lastPlayer_re_ent2 = msg.sender;
  at buggy_18.sol(195)

[31mViolation[0m for TODAmount in contract 'Owned':
    |      uint jackpot_re_ent2;
    |	  function buyTicket_re_ent2() public{
  > |	    if (!(lastPlayer_re_ent2.send(jackpot_re_ent2)))
    |        revert();
    |      lastPlayer_re_ent2 = msg.sender;
  at buggy_18.sol(195)

[31mViolation[0m for TODReceiver in contract 'Owned':
    |      uint jackpot_re_ent2;
    |	  function buyTicket_re_ent2() public{
  > |	    if (!(lastPlayer_re_ent2.send(jackpot_re_ent2)))
    |        revert();
    |      lastPlayer_re_ent2 = msg.sender;
  at buggy_18.sol(195)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'Owned':
    |        require(balances_re_ent31[msg.sender] >= _weiToWithdraw);
    |        // limit the withdrawal
  > |        require(msg.sender.send(_weiToWithdraw));  //bug
    |        balances_re_ent31[msg.sender] -= _weiToWithdraw;
    |    }
  at buggy_18.sol(167)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'Owned':
    |        require(balances_re_ent17[msg.sender] >= _weiToWithdraw);
    |        // limit the withdrawal
  > |        (bool success,)=msg.sender.call.value(_weiToWithdraw)("");
    |        require(success);  //bug
    |        balances_re_ent17[msg.sender] -= _weiToWithdraw;
  at buggy_18.sol(211)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Owned':
    |function callme_re_ent42() public{
    |        require(counter_re_ent42<=5);
  > |	if( ! (msg.sender.send(10 ether) ) ){
    |            revert();
    |        }
  at buggy_18.sol(178)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Owned':
    |      uint jackpot_re_ent2;
    |	  function buyTicket_re_ent2() public{
  > |	    if (!(lastPlayer_re_ent2.send(jackpot_re_ent2)))
    |        revert();
    |      lastPlayer_re_ent2 = msg.sender;
  at buggy_18.sol(195)

[31mViolation[0m for UnrestrictedWrite in contract 'Owned':
    |            revert();
    |        }
  > |        counter_re_ent42 += 1;
    |    }
    |
  at buggy_18.sol(181)

[31mViolation[0m for UnrestrictedWrite in contract 'Owned':
    |	    if (!(lastPlayer_re_ent2.send(jackpot_re_ent2)))
    |        revert();
  > |      lastPlayer_re_ent2 = msg.sender;
    |      jackpot_re_ent2    = address(this).balance;
    |    }
  at buggy_18.sol(197)

[31mViolation[0m for UnrestrictedWrite in contract 'Owned':
    |        revert();
    |      lastPlayer_re_ent2 = msg.sender;
  > |      jackpot_re_ent2    = address(this).balance;
    |    }
    |
  at buggy_18.sol(198)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |address payable lastPlayer_re_ent2;
  at buggy_18.sol(190)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(msg.sender == newOwner);
    |        emit OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |        newOwner = address(0);
    |    }
  at buggy_18.sol(204)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        emit OwnershipTransferred(owner, newOwner);
    |        owner = newOwner;
  > |        newOwner = address(0);
    |    }
    |mapping(address => uint) balances_re_ent17;
  at buggy_18.sol(205)

[31mViolation[0m for DAO in contract '_Yesbuzz':
    |mapping(address => uint) balances_re_ent21;
    |    function withdraw_balances_re_ent21 () public {
  > |       (bool success,)= msg.sender.call.value(balances_re_ent21[msg.sender ])("");
    |       if (success)
    |          balances_re_ent21[msg.sender] = 0;
  at buggy_18.sol(81)

[31mViolation[0m for DAO in contract '_Yesbuzz':
    |mapping(address => uint) balances_re_ent1;
    |    function withdraw_balances_re_ent1 () public {
  > |       (bool success,) =msg.sender.call.value(balances_re_ent1[msg.sender ])("");
    |       if (success)
    |          balances_re_ent1[msg.sender] = 0;
  at buggy_18.sol(107)

[31mViolation[0m for DAO in contract '_Yesbuzz':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        (bool success,)= msg.sender.call.value(userBalance_re_ent33[msg.sender])("");
    |        if( ! success ){
    |            revert();
  at buggy_18.sol(115)

[31mViolation[0m for DAO in contract '_Yesbuzz':
    |        require(balances_re_ent17[msg.sender] >= _weiToWithdraw);
    |        // limit the withdrawal
  > |        (bool success,)=msg.sender.call.value(_weiToWithdraw)("");
    |        require(success);  //bug
    |        balances_re_ent17[msg.sender] -= _weiToWithdraw;
  at buggy_18.sol(211)

[31mViolation[0m for DAO in contract '_Yesbuzz':
    |function bug_re_ent13() public{
    |        require(not_called_re_ent13);
  > |        (bool success,)=msg.sender.call.value(1 ether)("");
    |        if( ! success ){
    |            revert();
  at buggy_18.sol(325)

[31mViolation[0m for DAO in contract '_Yesbuzz':
    |        require(balances_re_ent3[msg.sender] >= _weiToWithdraw);
    |        // limit the withdrawal
  > |	(bool success,)= msg.sender.call.value(_weiToWithdraw)("");
    |        require(success);  //bug
    |        balances_re_ent3[msg.sender] -= _weiToWithdraw;
  at buggy_18.sol(395)

[31mViolation[0m for DAO in contract '_Yesbuzz':
    |      uint jackpot_re_ent9;
    |	  function buyTicket_re_ent9() public{
  > |	    (bool success,) = lastPlayer_re_ent9.call.value(jackpot_re_ent9)("");
    |	    if (!success)
    |	        revert();
  at buggy_18.sol(423)

[31mViolation[0m for DAO in contract '_Yesbuzz':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        (bool success,)= msg.sender.call.value(userBalance_re_ent26[msg.sender])("");
    |        if( ! success ){
    |            revert();
  at buggy_18.sol(492)

[31mViolation[0m for DAO in contract '_Yesbuzz':
    |mapping(address => uint) balances_re_ent8;
    |    function withdraw_balances_re_ent8 () public {
  > |       (bool success,) = msg.sender.call.value(balances_re_ent8[msg.sender ])("");
    |       if (success)
    |          balances_re_ent8[msg.sender] = 0;
  at buggy_18.sol(664)

[31mViolation[0m for DAO in contract '_Yesbuzz':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        (bool success,)=msg.sender.call.value(userBalance_re_ent40[msg.sender])("");
    |        if( ! success ){
    |            revert();
  at buggy_18.sol(731)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |function callme_re_ent21() public{
    |        require(counter_re_ent21<=5);
  > |	if( ! (msg.sender.send(10 ether) ) ){
    |            revert();
    |        }
  at buggy_18.sol(65)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |        require(balances_re_ent10[msg.sender] >= _weiToWithdraw);
    |        // limit the withdrawal
  > |        require(msg.sender.send(_weiToWithdraw));  //bug
    |        balances_re_ent10[msg.sender] -= _weiToWithdraw;
    |    }
  at buggy_18.sol(75)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        if( ! (msg.sender.send(userBalance_re_ent12[msg.sender]) ) ){
    |            revert();
    |        }
  at buggy_18.sol(90)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |        require(redeemableEther_re_ent11[msg.sender] > 0);
    |        uint transferValue_re_ent11 = redeemableEther_re_ent11[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent11);   //bug
    |        redeemableEther_re_ent11[msg.sender] = 0;
    |    }
  at buggy_18.sol(101)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |function bug_re_ent27() public{
    |        require(not_called_re_ent27);
  > |        if( ! (msg.sender.send(1 ether) ) ){
    |            revert();
    |        }
  at buggy_18.sol(125)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |        require(balances_re_ent31[msg.sender] >= _weiToWithdraw);
    |        // limit the withdrawal
  > |        require(msg.sender.send(_weiToWithdraw));  //bug
    |        balances_re_ent31[msg.sender] -= _weiToWithdraw;
    |    }
  at buggy_18.sol(167)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |function callme_re_ent42() public{
    |        require(counter_re_ent42<=5);
  > |	if( ! (msg.sender.send(10 ether) ) ){
    |            revert();
    |        }
  at buggy_18.sol(178)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |      uint jackpot_re_ent2;
    |	  function buyTicket_re_ent2() public{
  > |	    if (!(lastPlayer_re_ent2.send(jackpot_re_ent2)))
    |        revert();
    |      lastPlayer_re_ent2 = msg.sender;
  at buggy_18.sol(195)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |        require(redeemableEther_re_ent18[msg.sender] > 0);
    |        uint transferValue_re_ent18 = redeemableEther_re_ent18[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent18);   //bug
    |        redeemableEther_re_ent18[msg.sender] = 0;
    |    }
  at buggy_18.sol(250)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |  mapping(address => uint) balances_re_ent29;
    |    function withdraw_balances_re_ent29 () public {
  > |       if (msg.sender.send(balances_re_ent29[msg.sender ]))
    |          balances_re_ent29[msg.sender] = 0;
    |      }
  at buggy_18.sol(256)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |function bug_re_ent6() public{
    |        require(not_called_re_ent6);
  > |        if( ! (msg.sender.send(1 ether) ) ){
    |            revert();
    |        }
  at buggy_18.sol(263)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |      uint jackpot_re_ent16;
    |	  function buyTicket_re_ent16() public{
  > |	    if (!(lastPlayer_re_ent16.send(jackpot_re_ent16)))
    |        revert();
    |      lastPlayer_re_ent16 = msg.sender;
  at buggy_18.sol(272)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |        require(balances_re_ent24[msg.sender] >= _weiToWithdraw);
    |        // limit the withdrawal
  > |        require(msg.sender.send(_weiToWithdraw));  //bug
    |        balances_re_ent24[msg.sender] -= _weiToWithdraw;
    |    }
  at buggy_18.sol(282)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        if( ! (msg.sender.send(userBalance_re_ent5[msg.sender]) ) ){
    |            revert();
    |        }
  at buggy_18.sol(290)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |  mapping(address => uint) balances_re_ent15;
    |    function withdraw_balances_re_ent15 () public {
  > |       if (msg.sender.send(balances_re_ent15[msg.sender ]))
    |          balances_re_ent15[msg.sender] = 0;
    |      }
  at buggy_18.sol(298)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |function callme_re_ent28() public{
    |        require(counter_re_ent28<=5);
  > |	if( ! (msg.sender.send(10 ether) ) ){
    |            revert();
    |        }
  at buggy_18.sol(306)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |function bug_re_ent34() public{
    |        require(not_called_re_ent34);
  > |        if( ! (msg.sender.send(1 ether) ) ){
    |            revert();
    |        }
  at buggy_18.sol(315)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |      uint jackpot_re_ent37;
    |	  function buyTicket_re_ent37() public{
  > |	    if (!(lastPlayer_re_ent37.send(jackpot_re_ent37)))
    |        revert();
    |      lastPlayer_re_ent37 = msg.sender;
  at buggy_18.sol(361)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |        require(redeemableEther_re_ent25[msg.sender] > 0);
    |        uint transferValue_re_ent25 = redeemableEther_re_ent25[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent25);   //bug
    |        redeemableEther_re_ent25[msg.sender] = 0;
    |    }
  at buggy_18.sol(466)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        if( ! (msg.sender.send(userBalance_re_ent19[msg.sender]) ) ){
    |            revert();
    |        }
  at buggy_18.sol(478)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |function bug_re_ent20() public{
    |        require(not_called_re_ent20);
  > |        if( ! (msg.sender.send(1 ether) ) ){
    |            revert();
    |        }
  at buggy_18.sol(505)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |        require(redeemableEther_re_ent32[msg.sender] > 0);
    |        uint transferValue_re_ent32 = redeemableEther_re_ent32[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent32);   //bug
    |        redeemableEther_re_ent32[msg.sender] = 0;
    |    }
  at buggy_18.sol(523)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |        require(balances_re_ent38[msg.sender] >= _weiToWithdraw);
    |        // limit the withdrawal
  > |        require(msg.sender.send(_weiToWithdraw));  //bug
    |        balances_re_ent38[msg.sender] -= _weiToWithdraw;
    |    }
  at buggy_18.sol(536)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |        require(redeemableEther_re_ent4[msg.sender] > 0);
    |        uint transferValue_re_ent4 = redeemableEther_re_ent4[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent4);   //bug
    |        redeemableEther_re_ent4[msg.sender] = 0;
    |    }
  at buggy_18.sol(551)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |function callme_re_ent7() public{
    |        require(counter_re_ent7<=5);
  > |	if( ! (msg.sender.send(10 ether) ) ){
    |            revert();
    |        }
  at buggy_18.sol(565)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |      uint jackpot_re_ent23;
    |	  function buyTicket_re_ent23() public{
  > |	    if (!(lastPlayer_re_ent23.send(jackpot_re_ent23)))
    |        revert();
    |      lastPlayer_re_ent23 = msg.sender;
  at buggy_18.sol(581)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |function callme_re_ent14() public{
    |        require(counter_re_ent14<=5);
  > |	if( ! (msg.sender.send(10 ether) ) ){
    |            revert();
    |        }
  at buggy_18.sol(612)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |      uint jackpot_re_ent30;
    |	  function buyTicket_re_ent30() public{
  > |	    if (!(lastPlayer_re_ent30.send(jackpot_re_ent30)))
    |        revert();
    |      lastPlayer_re_ent30 = msg.sender;
  at buggy_18.sol(635)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |        require(redeemableEther_re_ent39[msg.sender] > 0);
    |        uint transferValue_re_ent39 = redeemableEther_re_ent39[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent39);   //bug
    |        redeemableEther_re_ent39[msg.sender] = 0;
    |    }
  at buggy_18.sol(682)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |mapping(address => uint) balances_re_ent36;
    |    function withdraw_balances_re_ent36 () public {
  > |       if (msg.sender.send(balances_re_ent36[msg.sender ]))
    |          balances_re_ent36[msg.sender] = 0;
    |      }
  at buggy_18.sol(700)

[31mViolation[0m for DAOConstantGas in contract '_Yesbuzz':
    |function callme_re_ent35() public{
    |        require(counter_re_ent35<=5);
  > |	if( ! (msg.sender.send(10 ether) ) ){
    |            revert();
    |        }
  at buggy_18.sol(714)

[31mViolation[0m for TODAmount in contract '_Yesbuzz':
    |      uint jackpot_re_ent2;
    |	  function buyTicket_re_ent2() public{
  > |	    if (!(lastPlayer_re_ent2.send(jackpot_re_ent2)))
    |        revert();
    |      lastPlayer_re_ent2 = msg.sender;
  at buggy_18.sol(195)

[31mViolation[0m for TODAmount in contract '_Yesbuzz':
    |      uint jackpot_re_ent16;
    |	  function buyTicket_re_ent16() public{
  > |	    if (!(lastPlayer_re_ent16.send(jackpot_re_ent16)))
    |        revert();
    |      lastPlayer_re_ent16 = msg.sender;
  at buggy_18.sol(272)

[31mViolation[0m for TODAmount in contract '_Yesbuzz':
    |      uint jackpot_re_ent37;
    |	  function buyTicket_re_ent37() public{
  > |	    if (!(lastPlayer_re_ent37.send(jackpot_re_ent37)))
    |        revert();
    |      lastPlayer_re_ent37 = msg.sender;
  at buggy_18.sol(361)

[31mViolation[0m for TODAmount in contract '_Yesbuzz':
    |      uint jackpot_re_ent9;
    |	  function buyTicket_re_ent9() public{
  > |	    (bool success,) = lastPlayer_re_ent9.call.value(jackpot_re_ent9)("");
    |	    if (!success)
    |	        revert();
  at buggy_18.sol(423)

[31mViolation[0m for TODAmount in contract '_Yesbuzz':
    |      uint jackpot_re_ent23;
    |	  function buyTicket_re_ent23() public{
  > |	    if (!(lastPlayer_re_ent23.send(jackpot_re_ent23)))
    |        revert();
    |      lastPlayer_re_ent23 = msg.sender;
  at buggy_18.sol(581)

[31mViolation[0m for TODAmount in contract '_Yesbuzz':
    |      uint jackpot_re_ent30;
    |	  function buyTicket_re_ent30() public{
  > |	    if (!(lastPlayer_re_ent30.send(jackpot_re_ent30)))
    |        revert();
    |      lastPlayer_re_ent30 = msg.sender;
  at buggy_18.sol(635)

[33mWarning[0m for TODAmount in contract '_Yesbuzz':
    |mapping(address => uint) balances_re_ent21;
    |    function withdraw_balances_re_ent21 () public {
  > |       (bool success,)= msg.sender.call.value(balances_re_ent21[msg.sender ])("");
    |       if (success)
    |          balances_re_ent21[msg.sender] = 0;
  at buggy_18.sol(81)

[33mWarning[0m for TODAmount in contract '_Yesbuzz':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        if( ! (msg.sender.send(userBalance_re_ent12[msg.sender]) ) ){
    |            revert();
    |        }
  at buggy_18.sol(90)

[33mWarning[0m for TODAmount in contract '_Yesbuzz':
    |        require(redeemableEther_re_ent11[msg.sender] > 0);
    |        uint transferValue_re_ent11 = redeemableEther_re_ent11[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent11);   //bug
    |        redeemableEther_re_ent11[msg.sender] = 0;
    |    }
  at buggy_18.sol(101)

[33mWarning[0m for TODAmount in contract '_Yesbuzz':
    |mapping(address => uint) balances_re_ent1;
    |    function withdraw_balances_re_ent1 () public {
  > |       (bool success,) =msg.sender.call.value(balances_re_ent1[msg.sender ])("");
    |       if (success)
    |          balances_re_ent1[msg.sender] = 0;
  at buggy_18.sol(107)

[33mWarning[0m for TODAmount in contract '_Yesbuzz':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        (bool success,)= msg.sender.call.value(userBalance_re_ent33[msg.sender])("");
    |        if( ! success ){
    |            revert();
  at buggy_18.sol(115)

[33mWarning[0m for TODAmount in contract '_Yesbuzz':
    |        require(redeemableEther_re_ent18[msg.sender] > 0);
    |        uint transferValue_re_ent18 = redeemableEther_re_ent18[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent18);   //bug
    |        redeemableEther_re_ent18[msg.sender] = 0;
    |    }
  at buggy_18.sol(250)

[33mWarning[0m for TODAmount in contract '_Yesbuzz':
    |  mapping(address => uint) balances_re_ent29;
    |    function withdraw_balances_re_ent29 () public {
  > |       if (msg.sender.send(balances_re_ent29[msg.sender ]))
    |          balances_re_ent29[msg.sender] = 0;
    |      }
  at buggy_18.sol(256)

[33mWarning[0m for TODAmount in contract '_Yesbuzz':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        if( ! (msg.sender.send(userBalance_re_ent5[msg.sender]) ) ){
    |            revert();
    |        }
  at buggy_18.sol(290)

[33mWarning[0m for TODAmount in contract '_Yesbuzz':
    |  mapping(address => uint) balances_re_ent15;
    |    function withdraw_balances_re_ent15 () public {
  > |       if (msg.sender.send(balances_re_ent15[msg.sender ]))
    |          balances_re_ent15[msg.sender] = 0;
    |      }
  at buggy_18.sol(298)

[33mWarning[0m for TODAmount in contract '_Yesbuzz':
    |        require(redeemableEther_re_ent25[msg.sender] > 0);
    |        uint transferValue_re_ent25 = redeemableEther_re_ent25[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent25);   //bug
    |        redeemableEther_re_ent25[msg.sender] = 0;
    |    }
  at buggy_18.sol(466)

[33mWarning[0m for TODAmount in contract '_Yesbuzz':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        if( ! (msg.sender.send(userBalance_re_ent19[msg.sender]) ) ){
    |            revert();
    |        }
  at buggy_18.sol(478)

[33mWarning[0m for TODAmount in contract '_Yesbuzz':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        (bool success,)= msg.sender.call.value(userBalance_re_ent26[msg.sender])("");
    |        if( ! success ){
    |            revert();
  at buggy_18.sol(492)

[33mWarning[0m for TODAmount in contract '_Yesbuzz':
    |        require(redeemableEther_re_ent32[msg.sender] > 0);
    |        uint transferValue_re_ent32 = redeemableEther_re_ent32[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent32);   //bug
    |        redeemableEther_re_ent32[msg.sender] = 0;
    |    }
  at buggy_18.sol(523)

[33mWarning[0m for TODAmount in contract '_Yesbuzz':
    |        require(redeemableEther_re_ent4[msg.sender] > 0);
    |        uint transferValue_re_ent4 = redeemableEther_re_ent4[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent4);   //bug
    |        redeemableEther_re_ent4[msg.sender] = 0;
    |    }
  at buggy_18.sol(551)

[33mWarning[0m for TODAmount in contract '_Yesbuzz':
    |mapping(address => uint) balances_re_ent8;
    |    function withdraw_balances_re_ent8 () public {
  > |       (bool success,) = msg.sender.call.value(balances_re_ent8[msg.sender ])("");
    |       if (success)
    |          balances_re_ent8[msg.sender] = 0;
  at buggy_18.sol(664)

[33mWarning[0m for TODAmount in contract '_Yesbuzz':
    |        require(redeemableEther_re_ent39[msg.sender] > 0);
    |        uint transferValue_re_ent39 = redeemableEther_re_ent39[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent39);   //bug
    |        redeemableEther_re_ent39[msg.sender] = 0;
    |    }
  at buggy_18.sol(682)

[33mWarning[0m for TODAmount in contract '_Yesbuzz':
    |mapping(address => uint) balances_re_ent36;
    |    function withdraw_balances_re_ent36 () public {
  > |       if (msg.sender.send(balances_re_ent36[msg.sender ]))
    |          balances_re_ent36[msg.sender] = 0;
    |      }
  at buggy_18.sol(700)

[33mWarning[0m for TODAmount in contract '_Yesbuzz':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        (bool success,)=msg.sender.call.value(userBalance_re_ent40[msg.sender])("");
    |        if( ! success ){
    |            revert();
  at buggy_18.sol(731)

[31mViolation[0m for TODReceiver in contract '_Yesbuzz':
    |      uint jackpot_re_ent2;
    |	  function buyTicket_re_ent2() public{
  > |	    if (!(lastPlayer_re_ent2.send(jackpot_re_ent2)))
    |        revert();
    |      lastPlayer_re_ent2 = msg.sender;
  at buggy_18.sol(195)

[31mViolation[0m for TODReceiver in contract '_Yesbuzz':
    |      uint jackpot_re_ent16;
    |	  function buyTicket_re_ent16() public{
  > |	    if (!(lastPlayer_re_ent16.send(jackpot_re_ent16)))
    |        revert();
    |      lastPlayer_re_ent16 = msg.sender;
  at buggy_18.sol(272)

[31mViolation[0m for TODReceiver in contract '_Yesbuzz':
    |      uint jackpot_re_ent37;
    |	  function buyTicket_re_ent37() public{
  > |	    if (!(lastPlayer_re_ent37.send(jackpot_re_ent37)))
    |        revert();
    |      lastPlayer_re_ent37 = msg.sender;
  at buggy_18.sol(361)

[31mViolation[0m for TODReceiver in contract '_Yesbuzz':
    |      uint jackpot_re_ent9;
    |	  function buyTicket_re_ent9() public{
  > |	    (bool success,) = lastPlayer_re_ent9.call.value(jackpot_re_ent9)("");
    |	    if (!success)
    |	        revert();
  at buggy_18.sol(423)

[31mViolation[0m for TODReceiver in contract '_Yesbuzz':
    |      uint jackpot_re_ent23;
    |	  function buyTicket_re_ent23() public{
  > |	    if (!(lastPlayer_re_ent23.send(jackpot_re_ent23)))
    |        revert();
    |      lastPlayer_re_ent23 = msg.sender;
  at buggy_18.sol(581)

[31mViolation[0m for TODReceiver in contract '_Yesbuzz':
    |      uint jackpot_re_ent30;
    |	  function buyTicket_re_ent30() public{
  > |	    if (!(lastPlayer_re_ent30.send(jackpot_re_ent30)))
    |        revert();
    |      lastPlayer_re_ent30 = msg.sender;
  at buggy_18.sol(635)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |function callme_re_ent21() public{
    |        require(counter_re_ent21<=5);
  > |	if( ! (msg.sender.send(10 ether) ) ){
    |            revert();
    |        }
  at buggy_18.sol(65)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |        require(balances_re_ent10[msg.sender] >= _weiToWithdraw);
    |        // limit the withdrawal
  > |        require(msg.sender.send(_weiToWithdraw));  //bug
    |        balances_re_ent10[msg.sender] -= _weiToWithdraw;
    |    }
  at buggy_18.sol(75)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |mapping(address => uint) balances_re_ent21;
    |    function withdraw_balances_re_ent21 () public {
  > |       (bool success,)= msg.sender.call.value(balances_re_ent21[msg.sender ])("");
    |       if (success)
    |          balances_re_ent21[msg.sender] = 0;
  at buggy_18.sol(81)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        if( ! (msg.sender.send(userBalance_re_ent12[msg.sender]) ) ){
    |            revert();
    |        }
  at buggy_18.sol(90)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |        require(redeemableEther_re_ent11[msg.sender] > 0);
    |        uint transferValue_re_ent11 = redeemableEther_re_ent11[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent11);   //bug
    |        redeemableEther_re_ent11[msg.sender] = 0;
    |    }
  at buggy_18.sol(101)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |mapping(address => uint) balances_re_ent1;
    |    function withdraw_balances_re_ent1 () public {
  > |       (bool success,) =msg.sender.call.value(balances_re_ent1[msg.sender ])("");
    |       if (success)
    |          balances_re_ent1[msg.sender] = 0;
  at buggy_18.sol(107)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        (bool success,)= msg.sender.call.value(userBalance_re_ent33[msg.sender])("");
    |        if( ! success ){
    |            revert();
  at buggy_18.sol(115)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |function bug_re_ent27() public{
    |        require(not_called_re_ent27);
  > |        if( ! (msg.sender.send(1 ether) ) ){
    |            revert();
    |        }
  at buggy_18.sol(125)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |        require(balances_re_ent31[msg.sender] >= _weiToWithdraw);
    |        // limit the withdrawal
  > |        require(msg.sender.send(_weiToWithdraw));  //bug
    |        balances_re_ent31[msg.sender] -= _weiToWithdraw;
    |    }
  at buggy_18.sol(167)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |function callme_re_ent42() public{
    |        require(counter_re_ent42<=5);
  > |	if( ! (msg.sender.send(10 ether) ) ){
    |            revert();
    |        }
  at buggy_18.sol(178)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |      uint jackpot_re_ent2;
    |	  function buyTicket_re_ent2() public{
  > |	    if (!(lastPlayer_re_ent2.send(jackpot_re_ent2)))
    |        revert();
    |      lastPlayer_re_ent2 = msg.sender;
  at buggy_18.sol(195)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |        require(balances_re_ent17[msg.sender] >= _weiToWithdraw);
    |        // limit the withdrawal
  > |        (bool success,)=msg.sender.call.value(_weiToWithdraw)("");
    |        require(success);  //bug
    |        balances_re_ent17[msg.sender] -= _weiToWithdraw;
  at buggy_18.sol(211)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |        require(redeemableEther_re_ent18[msg.sender] > 0);
    |        uint transferValue_re_ent18 = redeemableEther_re_ent18[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent18);   //bug
    |        redeemableEther_re_ent18[msg.sender] = 0;
    |    }
  at buggy_18.sol(250)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |  mapping(address => uint) balances_re_ent29;
    |    function withdraw_balances_re_ent29 () public {
  > |       if (msg.sender.send(balances_re_ent29[msg.sender ]))
    |          balances_re_ent29[msg.sender] = 0;
    |      }
  at buggy_18.sol(256)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |function bug_re_ent6() public{
    |        require(not_called_re_ent6);
  > |        if( ! (msg.sender.send(1 ether) ) ){
    |            revert();
    |        }
  at buggy_18.sol(263)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |      uint jackpot_re_ent16;
    |	  function buyTicket_re_ent16() public{
  > |	    if (!(lastPlayer_re_ent16.send(jackpot_re_ent16)))
    |        revert();
    |      lastPlayer_re_ent16 = msg.sender;
  at buggy_18.sol(272)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |        require(balances_re_ent24[msg.sender] >= _weiToWithdraw);
    |        // limit the withdrawal
  > |        require(msg.sender.send(_weiToWithdraw));  //bug
    |        balances_re_ent24[msg.sender] -= _weiToWithdraw;
    |    }
  at buggy_18.sol(282)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        if( ! (msg.sender.send(userBalance_re_ent5[msg.sender]) ) ){
    |            revert();
    |        }
  at buggy_18.sol(290)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |  mapping(address => uint) balances_re_ent15;
    |    function withdraw_balances_re_ent15 () public {
  > |       if (msg.sender.send(balances_re_ent15[msg.sender ]))
    |          balances_re_ent15[msg.sender] = 0;
    |      }
  at buggy_18.sol(298)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |function callme_re_ent28() public{
    |        require(counter_re_ent28<=5);
  > |	if( ! (msg.sender.send(10 ether) ) ){
    |            revert();
    |        }
  at buggy_18.sol(306)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |function bug_re_ent34() public{
    |        require(not_called_re_ent34);
  > |        if( ! (msg.sender.send(1 ether) ) ){
    |            revert();
    |        }
  at buggy_18.sol(315)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |function bug_re_ent13() public{
    |        require(not_called_re_ent13);
  > |        (bool success,)=msg.sender.call.value(1 ether)("");
    |        if( ! success ){
    |            revert();
  at buggy_18.sol(325)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |      uint jackpot_re_ent37;
    |	  function buyTicket_re_ent37() public{
  > |	    if (!(lastPlayer_re_ent37.send(jackpot_re_ent37)))
    |        revert();
    |      lastPlayer_re_ent37 = msg.sender;
  at buggy_18.sol(361)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |        require(balances_re_ent3[msg.sender] >= _weiToWithdraw);
    |        // limit the withdrawal
  > |	(bool success,)= msg.sender.call.value(_weiToWithdraw)("");
    |        require(success);  //bug
    |        balances_re_ent3[msg.sender] -= _weiToWithdraw;
  at buggy_18.sol(395)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |      uint jackpot_re_ent9;
    |	  function buyTicket_re_ent9() public{
  > |	    (bool success,) = lastPlayer_re_ent9.call.value(jackpot_re_ent9)("");
    |	    if (!success)
    |	        revert();
  at buggy_18.sol(423)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |        require(redeemableEther_re_ent25[msg.sender] > 0);
    |        uint transferValue_re_ent25 = redeemableEther_re_ent25[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent25);   //bug
    |        redeemableEther_re_ent25[msg.sender] = 0;
    |    }
  at buggy_18.sol(466)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        if( ! (msg.sender.send(userBalance_re_ent19[msg.sender]) ) ){
    |            revert();
    |        }
  at buggy_18.sol(478)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        (bool success,)= msg.sender.call.value(userBalance_re_ent26[msg.sender])("");
    |        if( ! success ){
    |            revert();
  at buggy_18.sol(492)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |function bug_re_ent20() public{
    |        require(not_called_re_ent20);
  > |        if( ! (msg.sender.send(1 ether) ) ){
    |            revert();
    |        }
  at buggy_18.sol(505)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |        require(redeemableEther_re_ent32[msg.sender] > 0);
    |        uint transferValue_re_ent32 = redeemableEther_re_ent32[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent32);   //bug
    |        redeemableEther_re_ent32[msg.sender] = 0;
    |    }
  at buggy_18.sol(523)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |        require(balances_re_ent38[msg.sender] >= _weiToWithdraw);
    |        // limit the withdrawal
  > |        require(msg.sender.send(_weiToWithdraw));  //bug
    |        balances_re_ent38[msg.sender] -= _weiToWithdraw;
    |    }
  at buggy_18.sol(536)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |        require(redeemableEther_re_ent4[msg.sender] > 0);
    |        uint transferValue_re_ent4 = redeemableEther_re_ent4[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent4);   //bug
    |        redeemableEther_re_ent4[msg.sender] = 0;
    |    }
  at buggy_18.sol(551)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |function callme_re_ent7() public{
    |        require(counter_re_ent7<=5);
  > |	if( ! (msg.sender.send(10 ether) ) ){
    |            revert();
    |        }
  at buggy_18.sol(565)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |      uint jackpot_re_ent23;
    |	  function buyTicket_re_ent23() public{
  > |	    if (!(lastPlayer_re_ent23.send(jackpot_re_ent23)))
    |        revert();
    |      lastPlayer_re_ent23 = msg.sender;
  at buggy_18.sol(581)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |function callme_re_ent14() public{
    |        require(counter_re_ent14<=5);
  > |	if( ! (msg.sender.send(10 ether) ) ){
    |            revert();
    |        }
  at buggy_18.sol(612)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |      uint jackpot_re_ent30;
    |	  function buyTicket_re_ent30() public{
  > |	    if (!(lastPlayer_re_ent30.send(jackpot_re_ent30)))
    |        revert();
    |      lastPlayer_re_ent30 = msg.sender;
  at buggy_18.sol(635)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |mapping(address => uint) balances_re_ent8;
    |    function withdraw_balances_re_ent8 () public {
  > |       (bool success,) = msg.sender.call.value(balances_re_ent8[msg.sender ])("");
    |       if (success)
    |          balances_re_ent8[msg.sender] = 0;
  at buggy_18.sol(664)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |        require(redeemableEther_re_ent39[msg.sender] > 0);
    |        uint transferValue_re_ent39 = redeemableEther_re_ent39[msg.sender];
  > |        msg.sender.transfer(transferValue_re_ent39);   //bug
    |        redeemableEther_re_ent39[msg.sender] = 0;
    |    }
  at buggy_18.sol(682)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |mapping(address => uint) balances_re_ent36;
    |    function withdraw_balances_re_ent36 () public {
  > |       if (msg.sender.send(balances_re_ent36[msg.sender ]))
    |          balances_re_ent36[msg.sender] = 0;
    |      }
  at buggy_18.sol(700)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |function callme_re_ent35() public{
    |        require(counter_re_ent35<=5);
  > |	if( ! (msg.sender.send(10 ether) ) ){
    |            revert();
    |        }
  at buggy_18.sol(714)

[33mWarning[0m for UnrestrictedEtherFlow in contract '_Yesbuzz':
    |        // send userBalance[msg.sender] ethers to msg.sender
    |        // if mgs.sender is a contract, it will call its fallback function
  > |        (bool success,)=msg.sender.call.value(userBalance_re_ent40[msg.sender])("");
    |        if( ! success ){
    |            revert();
  at buggy_18.sol(731)

[33mWarning[0m for UnrestrictedWrite in contract '_Yesbuzz':
    |            revert();
    |        }
  > |        counter_re_ent21 += 1;
    |    }
    |    function balanceOf(address tokenOwner) public view returns(uint balance);
  at buggy_18.sol(68)

[33mWarning[0m for UnrestrictedWrite in contract '_Yesbuzz':
    |            revert();
    |        }
  > |        not_called_re_ent27 = false;
    |    }
    |  event Approval(address indexed tokenOwner, address indexed spender, uint tokens);
  at buggy_18.sol(128)

[33mWarning[0m for UnrestrictedWrite in contract '_Yesbuzz':
    |            revert();
    |        }
  > |        counter_re_ent42 += 1;
    |    }
    |
  at buggy_18.sol(181)

[33mWarning[0m for UnrestrictedWrite in contract '_Yesbuzz':
    |	    if (!(lastPlayer_re_ent2.send(jackpot_re_ent2)))
    |        revert();
  > |      lastPlayer_re_ent2 = msg.sender;
    |      jackpot_re_ent2    = address(this).balance;
    |    }
  at buggy_18.sol(197)

[33mWarning[0m for UnrestrictedWrite in contract '_Yesbuzz':
    |        revert();
    |      lastPlayer_re_ent2 = msg.sender;
  > |      jackpot_re_ent2    = address(this).balance;
    |    }
    |
  at buggy_18.sol(198)

[33mWarning[0m for UnrestrictedWrite in contract '_Yesbuzz':
    |            revert();
    |        }
  > |        not_called_re_ent6 = false;
    |    }
    |  uint public lastRewardAmount;
  at buggy_18.sol(266)

[33mWarning[0m for UnrestrictedWrite in contract '_Yesbuzz':
    |	    if (!(lastPlayer_re_ent16.send(jackpot_re_ent16)))
    |        revert();
  > |      lastPlayer_re_ent16 = msg.sender;
    |      jackpot_re_ent16    = address(this).balance;
    |    }
  at buggy_18.sol(274)

[33mWarning[0m for UnrestrictedWrite in contract '_Yesbuzz':
    |        revert();
    |      lastPlayer_re_ent16 = msg.sender;
  > |      jackpot_re_ent16    = address(this).balance;
    |    }
    |  uint public lastRewardEthBlockNumber;
  at buggy_18.sol(275)

[33mWarning[0m for UnrestrictedWrite in contract '_Yesbuzz':
    |            revert();
    |        }
  > |        counter_re_ent28 += 1;
    |    }
    |  mapping(address => mapping(address => uint)) allowed;
  at buggy_18.sol(309)

[33mWarning[0m for UnrestrictedWrite in contract '_Yesbuzz':
    |            revert();
    |        }
  > |        not_called_re_ent34 = false;
    |    }
    |  uint public burnPercent;
  at buggy_18.sol(318)

[33mWarning[0m for UnrestrictedWrite in contract '_Yesbuzz':
    |            revert();
    |        }
  > |        not_called_re_ent13 = false;
    |    }
    |  event Mint(address indexed from, uint reward_amount, uint epochCount, bytes32 newChallengeNumber);
  at buggy_18.sol(329)

[33mWarning[0m for UnrestrictedWrite in contract '_Yesbuzz':
    |	    if (!(lastPlayer_re_ent37.send(jackpot_re_ent37)))
    |        revert();
  > |      lastPlayer_re_ent37 = msg.sender;
    |      jackpot_re_ent37    = address(this).balance;
    |    }
  at buggy_18.sol(363)

[33mWarning[0m for UnrestrictedWrite in contract '_Yesbuzz':
    |        revert();
    |      lastPlayer_re_ent37 = msg.sender;
  > |      jackpot_re_ent37    = address(this).balance;
    |    }
    |
  at buggy_18.sol(364)

[33mWarning[0m for UnrestrictedWrite in contract '_Yesbuzz':
    |	    if (!success)
    |	        revert();
  > |      lastPlayer_re_ent9 = msg.sender;
    |      jackpot_re_ent9    = address(this).balance;
    |    }
  at buggy_18.sol(426)

[33mWarning[0m for UnrestrictedWrite in contract '_Yesbuzz':
    |	        revert();
    |      lastPlayer_re_ent9 = msg.sender;
  > |      jackpot_re_ent9    = address(this).balance;
    |    }
    |    //https://en.bitcoin.it/wiki/Difficulty#What_is_the_formula_for_difficulty.3F
  at buggy_18.sol(427)

[33mWarning[0m for UnrestrictedWrite in contract '_Yesbuzz':
    |            revert();
    |        }
  > |        not_called_re_ent20 = false;
    |    }
    |
  at buggy_18.sol(508)

[33mWarning[0m for UnrestrictedWrite in contract '_Yesbuzz':
    |            revert();
    |        }
  > |        counter_re_ent7 += 1;
    |    }
    |
  at buggy_18.sol(568)

[33mWarning[0m for UnrestrictedWrite in contract '_Yesbuzz':
    |	    if (!(lastPlayer_re_ent23.send(jackpot_re_ent23)))
    |        revert();
  > |      lastPlayer_re_ent23 = msg.sender;
    |      jackpot_re_ent23    = address(this).balance;
    |    }
  at buggy_18.sol(583)

[33mWarning[0m for UnrestrictedWrite in contract '_Yesbuzz':
    |        revert();
    |      lastPlayer_re_ent23 = msg.sender;
  > |      jackpot_re_ent23    = address(this).balance;
    |    }
    |
  at buggy_18.sol(584)

[33mWarning[0m for UnrestrictedWrite in contract '_Yesbuzz':
    |            revert();
    |        }
  > |        counter_re_ent14 += 1;
    |    }
    |
  at buggy_18.sol(615)

[33mWarning[0m for UnrestrictedWrite in contract '_Yesbuzz':
    |	    if (!(lastPlayer_re_ent30.send(jackpot_re_ent30)))
    |        revert();
  > |      lastPlayer_re_ent30 = msg.sender;
    |      jackpot_re_ent30    = address(this).balance;
    |    }
  at buggy_18.sol(637)

[33mWarning[0m for UnrestrictedWrite in contract '_Yesbuzz':
    |        revert();
    |      lastPlayer_re_ent30 = msg.sender;
  > |      jackpot_re_ent30    = address(this).balance;
    |    }
    |
  at buggy_18.sol(638)

[33mWarning[0m for UnrestrictedWrite in contract '_Yesbuzz':
    |            revert();
    |        }
  > |        counter_re_ent35 += 1;
    |    }
    |
  at buggy_18.sol(717)

