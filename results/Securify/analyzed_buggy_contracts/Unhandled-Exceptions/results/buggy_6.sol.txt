Processing contract: buggy_6.sol:ChannelWallet
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_6.sol:Ownable
[31mViolation[0m for DAOConstantGas in contract 'ChannelWallet':
    |function sendToWinner_unchk44() public {
    |        require(!payedOut_unchk44);
  > |        winner_unchk44.send(winAmount_unchk44);
    |        payedOut_unchk44 = true;
    |    }
  at buggy_6.sol(30)

[31mViolation[0m for DAOConstantGas in contract 'ChannelWallet':
    |function sendToWinner_unchk20() public {
    |        require(!payedOut_unchk20);
  > |        winner_unchk20.send(winAmount_unchk20);
    |        payedOut_unchk20 = true;
    |    }
  at buggy_6.sol(139)

[31mViolation[0m for DAOConstantGas in contract 'ChannelWallet':
    |function sendToWinner_unchk32() public {
    |        require(!payedOut_unchk32);
  > |        winner_unchk32.send(winAmount_unchk32);
    |        payedOut_unchk32 = true;
    |    }
  at buggy_6.sol(153)

[31mViolation[0m for DAOConstantGas in contract 'ChannelWallet':
    |function sendToWinner_unchk8() public {
    |        require(!payedOut_unchk8);
  > |        winner_unchk8.send(winAmount_unchk8);
    |        payedOut_unchk8 = true;
    |    }
  at buggy_6.sol(270)

[31mViolation[0m for TODAmount in contract 'ChannelWallet':
    |function withdrawLeftOver_unchk33() public {
    |        require(payedOut_unchk33);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);
  at buggy_6.sol(48)

[31mViolation[0m for TODAmount in contract 'ChannelWallet':
    |function withdrawLeftOver_unchk9() public {
    |        require(payedOut_unchk9);
  > |        msg.sender.send(address(this).balance);
    |    }
    |
  at buggy_6.sol(82)

[31mViolation[0m for TODAmount in contract 'ChannelWallet':
    |function withdrawLeftOver_unchk45() public {
    |        require(payedOut_unchk45);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  event UpdateAddress(string from, string to);
  at buggy_6.sol(239)

[33mWarning[0m for TODAmount in contract 'ChannelWallet':
    |  address private _owner;
    |  function my_func_uncheck48(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |  address private _master;
  at buggy_6.sol(20)

[33mWarning[0m for TODAmount in contract 'ChannelWallet':
    |function sendToWinner_unchk44() public {
    |        require(!payedOut_unchk44);
  > |        winner_unchk44.send(winAmount_unchk44);
    |        payedOut_unchk44 = true;
    |    }
  at buggy_6.sol(30)

[33mWarning[0m for TODAmount in contract 'ChannelWallet':
    |function sendToWinner_unchk20() public {
    |        require(!payedOut_unchk20);
  > |        winner_unchk20.send(winAmount_unchk20);
    |        payedOut_unchk20 = true;
    |    }
  at buggy_6.sol(139)

[33mWarning[0m for TODAmount in contract 'ChannelWallet':
    |function sendToWinner_unchk32() public {
    |        require(!payedOut_unchk32);
  > |        winner_unchk32.send(winAmount_unchk32);
    |        payedOut_unchk32 = true;
    |    }
  at buggy_6.sol(153)

[33mWarning[0m for TODAmount in contract 'ChannelWallet':
    |    }
    |function my_func_unchk23(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |
  at buggy_6.sol(209)

[33mWarning[0m for TODAmount in contract 'ChannelWallet':
    |function sendToWinner_unchk8() public {
    |        require(!payedOut_unchk8);
  > |        winner_unchk8.send(winAmount_unchk8);
    |        payedOut_unchk8 = true;
    |    }
  at buggy_6.sol(270)

[33mWarning[0m for TODAmount in contract 'ChannelWallet':
    |    }
    |function my_func_uncheck36(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |
  at buggy_6.sol(298)

[33mWarning[0m for TODAmount in contract 'ChannelWallet':
    |    }
    |function my_func_unchk35(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |}
  at buggy_6.sol(310)

[31mViolation[0m for TODReceiver in contract 'ChannelWallet':
    |function sendToWinner_unchk20() public {
    |        require(!payedOut_unchk20);
  > |        winner_unchk20.send(winAmount_unchk20);
    |        payedOut_unchk20 = true;
    |    }
  at buggy_6.sol(139)

[31mViolation[0m for TODReceiver in contract 'ChannelWallet':
    |function sendToWinner_unchk32() public {
    |        require(!payedOut_unchk32);
  > |        winner_unchk32.send(winAmount_unchk32);
    |        payedOut_unchk32 = true;
    |    }
  at buggy_6.sol(153)

[31mViolation[0m for TODReceiver in contract 'ChannelWallet':
    |function sendToWinner_unchk8() public {
    |        require(!payedOut_unchk8);
  > |        winner_unchk8.send(winAmount_unchk8);
    |        payedOut_unchk8 = true;
    |    }
  at buggy_6.sol(270)

[33mWarning[0m for TODReceiver in contract 'ChannelWallet':
    |function sendToWinner_unchk44() public {
    |        require(!payedOut_unchk44);
  > |        winner_unchk44.send(winAmount_unchk44);
    |        payedOut_unchk44 = true;
    |    }
  at buggy_6.sol(30)

[31mViolation[0m for UnhandledException in contract 'ChannelWallet':
    |{
    |  function unhandledsend_unchk2(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |  bool private stopped;
  at buggy_6.sol(10)

[31mViolation[0m for UnhandledException in contract 'ChannelWallet':
    |  address private _owner;
    |  function my_func_uncheck48(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |  address private _master;
  at buggy_6.sol(20)

[31mViolation[0m for UnhandledException in contract 'ChannelWallet':
    |function sendToWinner_unchk44() public {
    |        require(!payedOut_unchk44);
  > |        winner_unchk44.send(winAmount_unchk44);
    |        payedOut_unchk44 = true;
    |    }
  at buggy_6.sol(30)

[31mViolation[0m for UnhandledException in contract 'ChannelWallet':
    |function withdrawLeftOver_unchk33() public {
    |        require(payedOut_unchk33);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);
  at buggy_6.sol(48)

[31mViolation[0m for UnhandledException in contract 'ChannelWallet':
    |  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);
    |  function bug_unchk27(address payable addr) public
  > |      {addr.send (42 ether); }
    |  event MasterRoleTransferred(address indexed previousMaster, address indexed newMaster);
    |
  at buggy_6.sol(52)

[31mViolation[0m for UnhandledException in contract 'ChannelWallet':
    |    }
    |function bug_unchk3(address payable addr) public
  > |      {addr.send (42 ether); }
    |
    |    function master() public view returns (address)
  at buggy_6.sol(72)

[31mViolation[0m for UnhandledException in contract 'ChannelWallet':
    |function withdrawLeftOver_unchk9() public {
    |        require(payedOut_unchk9);
  > |        msg.sender.send(address(this).balance);
    |    }
    |
  at buggy_6.sol(82)

[31mViolation[0m for UnhandledException in contract 'ChannelWallet':
    |    }
    |function unhandledsend_unchk26(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |
  at buggy_6.sol(126)

[31mViolation[0m for UnhandledException in contract 'ChannelWallet':
    |function sendToWinner_unchk20() public {
    |        require(!payedOut_unchk20);
  > |        winner_unchk20.send(winAmount_unchk20);
    |        payedOut_unchk20 = true;
    |    }
  at buggy_6.sol(139)

[31mViolation[0m for UnhandledException in contract 'ChannelWallet':
    |function sendToWinner_unchk32() public {
    |        require(!payedOut_unchk32);
  > |        winner_unchk32.send(winAmount_unchk32);
    |        payedOut_unchk32 = true;
    |    }
  at buggy_6.sol(153)

[31mViolation[0m for UnhandledException in contract 'ChannelWallet':
    |    }
    |function unhandledsend_unchk38(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |
  at buggy_6.sol(162)

[31mViolation[0m for UnhandledException in contract 'ChannelWallet':
    |function cash_unchk46(uint roundIndex, uint subpotIndex, address payable winner_unchk46) public{
    |        uint64 subpot_unchk46 = 3 ether;
  > |        winner_unchk46.send(subpot_unchk46);  //bug
    |        subpot_unchk46= 0;
    |}
  at buggy_6.sol(171)

[31mViolation[0m for UnhandledException in contract 'ChannelWallet':
    |    }
    |function my_func_unchk23(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |
  at buggy_6.sol(209)

[31mViolation[0m for UnhandledException in contract 'ChannelWallet':
    |    }
    |function unhandledsend_unchk14(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |}
  at buggy_6.sol(218)

[31mViolation[0m for UnhandledException in contract 'ChannelWallet':
    |  function withdrawBal_unchk17 () public{
    |	uint64 Balances_unchk17 = 0;
  > |	msg.sender.send(Balances_unchk17);}
    |  mapping(string => address) private addressMap;
    |
  at buggy_6.sol(226)

[31mViolation[0m for UnhandledException in contract 'ChannelWallet':
    |function withdrawLeftOver_unchk45() public {
    |        require(payedOut_unchk45);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  event UpdateAddress(string from, string to);
  at buggy_6.sol(239)

[31mViolation[0m for UnhandledException in contract 'ChannelWallet':
    |function sendToWinner_unchk8() public {
    |        require(!payedOut_unchk8);
  > |        winner_unchk8.send(winAmount_unchk8);
    |        payedOut_unchk8 = true;
    |    }
  at buggy_6.sol(270)

[31mViolation[0m for UnhandledException in contract 'ChannelWallet':
    |    }
    |function bug_unchk39(address payable addr) public
  > |      {addr.send (4 ether); }
    |
    |    function updateChannel(string calldata from, string calldata to, address _address) external onlyMaster onlyWhenNotStopped
  at buggy_6.sol(283)

[31mViolation[0m for UnhandledException in contract 'ChannelWallet':
    |    }
    |function my_func_uncheck36(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |
  at buggy_6.sol(298)

[31mViolation[0m for UnhandledException in contract 'ChannelWallet':
    |    }
    |function my_func_unchk35(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |}
  at buggy_6.sol(310)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ChannelWallet':
    |{
    |  function unhandledsend_unchk2(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |  bool private stopped;
  at buggy_6.sol(10)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ChannelWallet':
    |  function bug_unchk43() public{
    |address payable addr_unchk43;
  > |if (!addr_unchk43.send (10 ether) || 1==1)
    |	{revert();}
    |}
  at buggy_6.sol(15)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ChannelWallet':
    |  address private _owner;
    |  function my_func_uncheck48(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |  address private _master;
  at buggy_6.sol(20)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ChannelWallet':
    |function sendToWinner_unchk44() public {
    |        require(!payedOut_unchk44);
  > |        winner_unchk44.send(winAmount_unchk44);
    |        payedOut_unchk44 = true;
    |    }
  at buggy_6.sol(30)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ChannelWallet':
    |  function UncheckedExternalCall_unchk40 () public
    |{  address payable addr_unchk40;
  > |   if (! addr_unchk40.send (2 ether))  
    |      {// comment1;
    |      }
  at buggy_6.sol(36)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ChannelWallet':
    |function withdrawLeftOver_unchk33() public {
    |        require(payedOut_unchk33);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);
  at buggy_6.sol(48)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ChannelWallet':
    |  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);
    |  function bug_unchk27(address payable addr) public
  > |      {addr.send (42 ether); }
    |  event MasterRoleTransferred(address indexed previousMaster, address indexed newMaster);
    |
  at buggy_6.sol(52)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ChannelWallet':
    |    }
    |function bug_unchk3(address payable addr) public
  > |      {addr.send (42 ether); }
    |
    |    function master() public view returns (address)
  at buggy_6.sol(72)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ChannelWallet':
    |function withdrawLeftOver_unchk9() public {
    |        require(payedOut_unchk9);
  > |        msg.sender.send(address(this).balance);
    |    }
    |
  at buggy_6.sol(82)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ChannelWallet':
    |function bug_unchk19() public{
    |address payable addr_unchk19;
  > |if (!addr_unchk19.send (10 ether) || 1==1)
    |	{revert();}
    |}
  at buggy_6.sol(117)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ChannelWallet':
    |    }
    |function unhandledsend_unchk26(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |
  at buggy_6.sol(126)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ChannelWallet':
    |function sendToWinner_unchk20() public {
    |        require(!payedOut_unchk20);
  > |        winner_unchk20.send(winAmount_unchk20);
    |        payedOut_unchk20 = true;
    |    }
  at buggy_6.sol(139)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ChannelWallet':
    |function sendToWinner_unchk32() public {
    |        require(!payedOut_unchk32);
  > |        winner_unchk32.send(winAmount_unchk32);
    |        payedOut_unchk32 = true;
    |    }
  at buggy_6.sol(153)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ChannelWallet':
    |    }
    |function unhandledsend_unchk38(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |
  at buggy_6.sol(162)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ChannelWallet':
    |function cash_unchk46(uint roundIndex, uint subpotIndex, address payable winner_unchk46) public{
    |        uint64 subpot_unchk46 = 3 ether;
  > |        winner_unchk46.send(subpot_unchk46);  //bug
    |        subpot_unchk46= 0;
    |}
  at buggy_6.sol(171)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ChannelWallet':
    |function UncheckedExternalCall_unchk4 () public
    |{  address payable addr_unchk4;
  > |   if (! addr_unchk4.send (42 ether))  
    |      {// comment1;
    |      }
  at buggy_6.sol(183)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ChannelWallet':
    |function bug_unchk7() public{
    |address payable addr_unchk7;
  > |if (!addr_unchk7.send (10 ether) || 1==1)
    |	{revert();}
    |}
  at buggy_6.sol(199)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ChannelWallet':
    |    }
    |function my_func_unchk23(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |
  at buggy_6.sol(209)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ChannelWallet':
    |    }
    |function unhandledsend_unchk14(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |}
  at buggy_6.sol(218)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ChannelWallet':
    |  function bug_unchk31() public{
    |address payable addr_unchk31;
  > |if (!addr_unchk31.send (10 ether) || 1==1)
    |	{revert();}
    |}
  at buggy_6.sol(231)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ChannelWallet':
    |function withdrawLeftOver_unchk45() public {
    |        require(payedOut_unchk45);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  event UpdateAddress(string from, string to);
  at buggy_6.sol(239)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ChannelWallet':
    |uint receivers_unchk30;
    |address payable addr_unchk30;
  > |if (!addr_unchk30.send(42 ether))
    |	{receivers_unchk30 +=1;}
    |else
  at buggy_6.sol(254)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ChannelWallet':
    |function sendToWinner_unchk8() public {
    |        require(!payedOut_unchk8);
  > |        winner_unchk8.send(winAmount_unchk8);
    |        payedOut_unchk8 = true;
    |    }
  at buggy_6.sol(270)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ChannelWallet':
    |    }
    |function bug_unchk39(address payable addr) public
  > |      {addr.send (4 ether); }
    |
    |    function updateChannel(string calldata from, string calldata to, address _address) external onlyMaster onlyWhenNotStopped
  at buggy_6.sol(283)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ChannelWallet':
    |    }
    |function my_func_uncheck36(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |
  at buggy_6.sol(298)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'ChannelWallet':
    |    }
    |function my_func_unchk35(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |}
  at buggy_6.sol(310)

[33mWarning[0m for UnrestrictedWrite in contract 'ChannelWallet':
    |        require(!payedOut_unchk44);
    |        winner_unchk44.send(winAmount_unchk44);
  > |        payedOut_unchk44 = true;
    |    }
    |  event Stopped();
  at buggy_6.sol(31)

[33mWarning[0m for UnrestrictedWrite in contract 'ChannelWallet':
    |        require(!payedOut_unchk20);
    |        winner_unchk20.send(winAmount_unchk20);
  > |        payedOut_unchk20 = true;
    |    }
    |
  at buggy_6.sol(140)

[33mWarning[0m for UnrestrictedWrite in contract 'ChannelWallet':
    |        require(!payedOut_unchk32);
    |        winner_unchk32.send(winAmount_unchk32);
  > |        payedOut_unchk32 = true;
    |    }
    |
  at buggy_6.sol(154)

[33mWarning[0m for UnrestrictedWrite in contract 'ChannelWallet':
    |        require(!payedOut_unchk8);
    |        winner_unchk8.send(winAmount_unchk8);
  > |        payedOut_unchk8 = true;
    |    }
    |
  at buggy_6.sol(271)

