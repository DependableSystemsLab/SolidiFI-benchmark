Processing contract: buggy_7.sol:AccountWallet
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_7.sol:Ownable
[31mViolation[0m for DAOConstantGas in contract 'AccountWallet':
    |function sendToWinner_unchk44() public {
    |        require(!payedOut_unchk44);
  > |        winner_unchk44.send(winAmount_unchk44);
    |        payedOut_unchk44 = true;
    |    }
  at buggy_7.sol(35)

[31mViolation[0m for DAOConstantGas in contract 'AccountWallet':
    |function sendToWinner_unchk20() public {
    |        require(!payedOut_unchk20);
  > |        winner_unchk20.send(winAmount_unchk20);
    |        payedOut_unchk20 = true;
    |    }
  at buggy_7.sol(144)

[31mViolation[0m for DAOConstantGas in contract 'AccountWallet':
    |function sendToWinner_unchk32() public {
    |        require(!payedOut_unchk32);
  > |        winner_unchk32.send(winAmount_unchk32);
    |        payedOut_unchk32 = true;
    |    }
  at buggy_7.sol(158)

[31mViolation[0m for DAOConstantGas in contract 'AccountWallet':
    |function sendToWinner_unchk8() public {
    |        require(!payedOut_unchk8);
  > |        winner_unchk8.send(winAmount_unchk8);
    |        payedOut_unchk8 = true;
    |    }
  at buggy_7.sol(279)

[31mViolation[0m for TODAmount in contract 'AccountWallet':
    |function withdrawLeftOver_unchk33() public {
    |        require(payedOut_unchk33);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);
  at buggy_7.sol(53)

[31mViolation[0m for TODAmount in contract 'AccountWallet':
    |function withdrawLeftOver_unchk9() public {
    |        require(payedOut_unchk9);
  > |        msg.sender.send(address(this).balance);
    |    }
    |
  at buggy_7.sol(87)

[31mViolation[0m for TODAmount in contract 'AccountWallet':
    |function withdrawLeftOver_unchk45() public {
    |        require(payedOut_unchk45);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  event UpdateAddress(string from, string to);
  at buggy_7.sol(248)

[33mWarning[0m for TODAmount in contract 'AccountWallet':
    |function sendToWinner_unchk44() public {
    |        require(!payedOut_unchk44);
  > |        winner_unchk44.send(winAmount_unchk44);
    |        payedOut_unchk44 = true;
    |    }
  at buggy_7.sol(35)

[33mWarning[0m for TODAmount in contract 'AccountWallet':
    |function sendToWinner_unchk20() public {
    |        require(!payedOut_unchk20);
  > |        winner_unchk20.send(winAmount_unchk20);
    |        payedOut_unchk20 = true;
    |    }
  at buggy_7.sol(144)

[33mWarning[0m for TODAmount in contract 'AccountWallet':
    |function sendToWinner_unchk32() public {
    |        require(!payedOut_unchk32);
  > |        winner_unchk32.send(winAmount_unchk32);
    |        payedOut_unchk32 = true;
    |    }
  at buggy_7.sol(158)

[33mWarning[0m for TODAmount in contract 'AccountWallet':
    |    }
    |function my_func_unchk23(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |
  at buggy_7.sol(214)

[33mWarning[0m for TODAmount in contract 'AccountWallet':
    |{
    |  function my_func_uncheck48(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |  mapping(string => string) private btc;
  at buggy_7.sol(230)

[33mWarning[0m for TODAmount in contract 'AccountWallet':
    |function sendToWinner_unchk8() public {
    |        require(!payedOut_unchk8);
  > |        winner_unchk8.send(winAmount_unchk8);
    |        payedOut_unchk8 = true;
    |    }
  at buggy_7.sol(279)

[33mWarning[0m for TODAmount in contract 'AccountWallet':
    |    }
    |function my_func_uncheck36(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |
  at buggy_7.sol(309)

[33mWarning[0m for TODAmount in contract 'AccountWallet':
    |    }
    |function my_func_unchk35(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |}
  at buggy_7.sol(322)

[31mViolation[0m for TODReceiver in contract 'AccountWallet':
    |function sendToWinner_unchk20() public {
    |        require(!payedOut_unchk20);
  > |        winner_unchk20.send(winAmount_unchk20);
    |        payedOut_unchk20 = true;
    |    }
  at buggy_7.sol(144)

[31mViolation[0m for TODReceiver in contract 'AccountWallet':
    |function sendToWinner_unchk32() public {
    |        require(!payedOut_unchk32);
  > |        winner_unchk32.send(winAmount_unchk32);
    |        payedOut_unchk32 = true;
    |    }
  at buggy_7.sol(158)

[31mViolation[0m for TODReceiver in contract 'AccountWallet':
    |function sendToWinner_unchk8() public {
    |        require(!payedOut_unchk8);
  > |        winner_unchk8.send(winAmount_unchk8);
    |        payedOut_unchk8 = true;
    |    }
  at buggy_7.sol(279)

[33mWarning[0m for TODReceiver in contract 'AccountWallet':
    |function sendToWinner_unchk44() public {
    |        require(!payedOut_unchk44);
  > |        winner_unchk44.send(winAmount_unchk44);
    |        payedOut_unchk44 = true;
    |    }
  at buggy_7.sol(35)

[31mViolation[0m for UnhandledException in contract 'AccountWallet':
    |  bool private stopped;
    |  function unhandledsend_unchk2(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |  address private _owner;
  at buggy_7.sol(19)

[31mViolation[0m for UnhandledException in contract 'AccountWallet':
    |function sendToWinner_unchk44() public {
    |        require(!payedOut_unchk44);
  > |        winner_unchk44.send(winAmount_unchk44);
    |        payedOut_unchk44 = true;
    |    }
  at buggy_7.sol(35)

[31mViolation[0m for UnhandledException in contract 'AccountWallet':
    |function withdrawLeftOver_unchk33() public {
    |        require(payedOut_unchk33);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);
  at buggy_7.sol(53)

[31mViolation[0m for UnhandledException in contract 'AccountWallet':
    |  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);
    |  function bug_unchk27(address payable addr) public
  > |      {addr.send (42 ether); }
    |  event MasterRoleTransferred(address indexed previousMaster, address indexed newMaster);
    |
  at buggy_7.sol(57)

[31mViolation[0m for UnhandledException in contract 'AccountWallet':
    |    }
    |function bug_unchk3(address payable addr) public
  > |      {addr.send (42 ether); }
    |
    |    function master() public view returns (address)
  at buggy_7.sol(77)

[31mViolation[0m for UnhandledException in contract 'AccountWallet':
    |function withdrawLeftOver_unchk9() public {
    |        require(payedOut_unchk9);
  > |        msg.sender.send(address(this).balance);
    |    }
    |
  at buggy_7.sol(87)

[31mViolation[0m for UnhandledException in contract 'AccountWallet':
    |    }
    |function unhandledsend_unchk26(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |
  at buggy_7.sol(131)

[31mViolation[0m for UnhandledException in contract 'AccountWallet':
    |function sendToWinner_unchk20() public {
    |        require(!payedOut_unchk20);
  > |        winner_unchk20.send(winAmount_unchk20);
    |        payedOut_unchk20 = true;
    |    }
  at buggy_7.sol(144)

[31mViolation[0m for UnhandledException in contract 'AccountWallet':
    |function sendToWinner_unchk32() public {
    |        require(!payedOut_unchk32);
  > |        winner_unchk32.send(winAmount_unchk32);
    |        payedOut_unchk32 = true;
    |    }
  at buggy_7.sol(158)

[31mViolation[0m for UnhandledException in contract 'AccountWallet':
    |    }
    |function unhandledsend_unchk38(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |
  at buggy_7.sol(167)

[31mViolation[0m for UnhandledException in contract 'AccountWallet':
    |function cash_unchk46(uint roundIndex, uint subpotIndex, address payable winner_unchk46) public{
    |        uint64 subpot_unchk46 = 3 ether;
  > |        winner_unchk46.send(subpot_unchk46);  //bug
    |        subpot_unchk46= 0;
    |}
  at buggy_7.sol(176)

[31mViolation[0m for UnhandledException in contract 'AccountWallet':
    |    }
    |function my_func_unchk23(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |
  at buggy_7.sol(214)

[31mViolation[0m for UnhandledException in contract 'AccountWallet':
    |    }
    |function unhandledsend_unchk14(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |}
  at buggy_7.sol(223)

[31mViolation[0m for UnhandledException in contract 'AccountWallet':
    |{
    |  function my_func_uncheck48(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |  mapping(string => string) private btc;
  at buggy_7.sol(230)

[31mViolation[0m for UnhandledException in contract 'AccountWallet':
    |  function withdrawBal_unchk17 () public{
    |	uint64 Balances_unchk17 = 0;
  > |	msg.sender.send(Balances_unchk17);}
    |  mapping(string => address) private eth;
    |
  at buggy_7.sol(235)

[31mViolation[0m for UnhandledException in contract 'AccountWallet':
    |function withdrawLeftOver_unchk45() public {
    |        require(payedOut_unchk45);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  event UpdateAddress(string from, string to);
  at buggy_7.sol(248)

[31mViolation[0m for UnhandledException in contract 'AccountWallet':
    |function sendToWinner_unchk8() public {
    |        require(!payedOut_unchk8);
  > |        winner_unchk8.send(winAmount_unchk8);
    |        payedOut_unchk8 = true;
    |    }
  at buggy_7.sol(279)

[31mViolation[0m for UnhandledException in contract 'AccountWallet':
    |    }
    |function bug_unchk39(address payable addr) public
  > |      {addr.send (4 ether); }
    |
    |    function updateAccount(string calldata from, string calldata to) external onlyMaster onlyWhenNotStopped
  at buggy_7.sol(293)

[31mViolation[0m for UnhandledException in contract 'AccountWallet':
    |    }
    |function my_func_uncheck36(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |
  at buggy_7.sol(309)

[31mViolation[0m for UnhandledException in contract 'AccountWallet':
    |    }
    |function my_func_unchk35(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |}
  at buggy_7.sol(322)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |uint receivers_unchk42;
    |address payable addr_unchk42;
  > |if (!addr_unchk42.send(42 ether))
    |	{receivers_unchk42 +=1;}
    |else
  at buggy_7.sol(12)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |  bool private stopped;
    |  function unhandledsend_unchk2(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |  address private _owner;
  at buggy_7.sol(19)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |  function bug_unchk43() public{
    |address payable addr_unchk43;
  > |if (!addr_unchk43.send (10 ether) || 1==1)
    |	{revert();}
    |}
  at buggy_7.sol(24)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |function sendToWinner_unchk44() public {
    |        require(!payedOut_unchk44);
  > |        winner_unchk44.send(winAmount_unchk44);
    |        payedOut_unchk44 = true;
    |    }
  at buggy_7.sol(35)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |  function UncheckedExternalCall_unchk40 () public
    |{  address payable addr_unchk40;
  > |   if (! addr_unchk40.send (2 ether))  
    |      {// comment1;
    |      }
  at buggy_7.sol(41)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |function withdrawLeftOver_unchk33() public {
    |        require(payedOut_unchk33);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);
  at buggy_7.sol(53)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);
    |  function bug_unchk27(address payable addr) public
  > |      {addr.send (42 ether); }
    |  event MasterRoleTransferred(address indexed previousMaster, address indexed newMaster);
    |
  at buggy_7.sol(57)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |    }
    |function bug_unchk3(address payable addr) public
  > |      {addr.send (42 ether); }
    |
    |    function master() public view returns (address)
  at buggy_7.sol(77)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |function withdrawLeftOver_unchk9() public {
    |        require(payedOut_unchk9);
  > |        msg.sender.send(address(this).balance);
    |    }
    |
  at buggy_7.sol(87)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |function bug_unchk19() public{
    |address payable addr_unchk19;
  > |if (!addr_unchk19.send (10 ether) || 1==1)
    |	{revert();}
    |}
  at buggy_7.sol(122)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |    }
    |function unhandledsend_unchk26(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |
  at buggy_7.sol(131)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |function sendToWinner_unchk20() public {
    |        require(!payedOut_unchk20);
  > |        winner_unchk20.send(winAmount_unchk20);
    |        payedOut_unchk20 = true;
    |    }
  at buggy_7.sol(144)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |function sendToWinner_unchk32() public {
    |        require(!payedOut_unchk32);
  > |        winner_unchk32.send(winAmount_unchk32);
    |        payedOut_unchk32 = true;
    |    }
  at buggy_7.sol(158)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |    }
    |function unhandledsend_unchk38(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |
  at buggy_7.sol(167)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |function cash_unchk46(uint roundIndex, uint subpotIndex, address payable winner_unchk46) public{
    |        uint64 subpot_unchk46 = 3 ether;
  > |        winner_unchk46.send(subpot_unchk46);  //bug
    |        subpot_unchk46= 0;
    |}
  at buggy_7.sol(176)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |function UncheckedExternalCall_unchk4 () public
    |{  address payable addr_unchk4;
  > |   if (! addr_unchk4.send (42 ether))  
    |      {// comment1;
    |      }
  at buggy_7.sol(188)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |function bug_unchk7() public{
    |address payable addr_unchk7;
  > |if (!addr_unchk7.send (10 ether) || 1==1)
    |	{revert();}
    |}
  at buggy_7.sol(204)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |    }
    |function my_func_unchk23(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |
  at buggy_7.sol(214)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |    }
    |function unhandledsend_unchk14(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |}
  at buggy_7.sol(223)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |{
    |  function my_func_uncheck48(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |  mapping(string => string) private btc;
  at buggy_7.sol(230)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |  function bug_unchk31() public{
    |address payable addr_unchk31;
  > |if (!addr_unchk31.send (10 ether) || 1==1)
    |	{revert();}
    |}
  at buggy_7.sol(240)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |function withdrawLeftOver_unchk45() public {
    |        require(payedOut_unchk45);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  event UpdateAddress(string from, string to);
  at buggy_7.sol(248)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |uint receivers_unchk30;
    |address payable addr_unchk30;
  > |if (!addr_unchk30.send(42 ether))
    |	{receivers_unchk30 +=1;}
    |else
  at buggy_7.sol(263)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |function sendToWinner_unchk8() public {
    |        require(!payedOut_unchk8);
  > |        winner_unchk8.send(winAmount_unchk8);
    |        payedOut_unchk8 = true;
    |    }
  at buggy_7.sol(279)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |    }
    |function bug_unchk39(address payable addr) public
  > |      {addr.send (4 ether); }
    |
    |    function updateAccount(string calldata from, string calldata to) external onlyMaster onlyWhenNotStopped
  at buggy_7.sol(293)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |    }
    |function my_func_uncheck36(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |
  at buggy_7.sol(309)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AccountWallet':
    |    }
    |function my_func_unchk35(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |}
  at buggy_7.sol(322)

[33mWarning[0m for UnrestrictedWrite in contract 'AccountWallet':
    |        require(!payedOut_unchk44);
    |        winner_unchk44.send(winAmount_unchk44);
  > |        payedOut_unchk44 = true;
    |    }
    |  event Stopped();
  at buggy_7.sol(36)

[33mWarning[0m for UnrestrictedWrite in contract 'AccountWallet':
    |        require(!payedOut_unchk20);
    |        winner_unchk20.send(winAmount_unchk20);
  > |        payedOut_unchk20 = true;
    |    }
    |
  at buggy_7.sol(145)

[33mWarning[0m for UnrestrictedWrite in contract 'AccountWallet':
    |        require(!payedOut_unchk32);
    |        winner_unchk32.send(winAmount_unchk32);
  > |        payedOut_unchk32 = true;
    |    }
    |
  at buggy_7.sol(159)

[33mWarning[0m for UnrestrictedWrite in contract 'AccountWallet':
    |}
    |
  > |contract AccountWallet is Ownable
    |{
    |  function my_func_uncheck48(address payable dst) public payable{
  at buggy_7.sol(227)

[33mWarning[0m for UnrestrictedWrite in contract 'AccountWallet':
    |        require(!payedOut_unchk8);
    |        winner_unchk8.send(winAmount_unchk8);
  > |        payedOut_unchk8 = true;
    |    }
    |
  at buggy_7.sol(280)

[33mWarning[0m for UnrestrictedWrite in contract 'AccountWallet':
    |
    |        btc[account] = btcAddress;
  > |        eth[account] = ethAddress;
    |
    |        emit SetAddress(account, btcAddress, ethAddress);
  at buggy_7.sol(288)

[33mWarning[0m for UnrestrictedWrite in contract 'AccountWallet':
    |
    |        btc[to] = btc[from];
  > |        eth[to] = eth[from];
    |
    |        btc[from] = '';
  at buggy_7.sol(301)

[33mWarning[0m for UnrestrictedWrite in contract 'AccountWallet':
    |
    |        btc[from] = '';
  > |        eth[from] = address(0);
    |
    |        emit UpdateAddress(from, to);
  at buggy_7.sol(304)

[33mWarning[0m for UnrestrictedWrite in contract 'AccountWallet':
    |
    |        btc[account] = '';
  > |        eth[account] = address(0);
    |
    |        emit DeleteAddress(account);
  at buggy_7.sol(317)

