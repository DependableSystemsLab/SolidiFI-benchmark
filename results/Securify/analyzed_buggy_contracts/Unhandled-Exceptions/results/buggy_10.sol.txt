Processing contract: buggy_10.sol:DocumentSigner
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for DAOConstantGas in contract 'DocumentSigner':
    |function sendToWinner_unchk44() public {
    |        require(!payedOut_unchk44);
  > |        winner_unchk44.send(winAmount_unchk44);
    |        payedOut_unchk44 = true;
    |    }
  at buggy_10.sol(18)

[31mViolation[0m for TODAmount in contract 'DocumentSigner':
    |function withdrawLeftOver_unchk45() public {
    |        require(payedOut_unchk45);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  event Sign(bytes32 indexed _doc, address indexed _signer);
  at buggy_10.sol(32)

[31mViolation[0m for TODAmount in contract 'DocumentSigner':
    |function withdrawLeftOver_unchk33() public {
    |        require(payedOut_unchk33);
  > |        msg.sender.send(address(this).balance);
    |    }
    |    
  at buggy_10.sol(68)

[33mWarning[0m for TODAmount in contract 'DocumentSigner':
    |contract DocumentSigner {
    |  function my_func_unchk35(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |  mapping(bytes32=>string) public docs;
  at buggy_10.sol(9)

[31mViolation[0m for TODReceiver in contract 'DocumentSigner':
    |function sendToWinner_unchk44() public {
    |        require(!payedOut_unchk44);
  > |        winner_unchk44.send(winAmount_unchk44);
    |        payedOut_unchk44 = true;
    |    }
  at buggy_10.sol(18)

[31mViolation[0m for UnhandledException in contract 'DocumentSigner':
    |contract DocumentSigner {
    |  function my_func_unchk35(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |  mapping(bytes32=>string) public docs;
  at buggy_10.sol(9)

[31mViolation[0m for UnhandledException in contract 'DocumentSigner':
    |function sendToWinner_unchk44() public {
    |        require(!payedOut_unchk44);
  > |        winner_unchk44.send(winAmount_unchk44);
    |        payedOut_unchk44 = true;
    |    }
  at buggy_10.sol(18)

[31mViolation[0m for UnhandledException in contract 'DocumentSigner':
    |function withdrawLeftOver_unchk45() public {
    |        require(payedOut_unchk45);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  event Sign(bytes32 indexed _doc, address indexed _signer);
  at buggy_10.sol(32)

[31mViolation[0m for UnhandledException in contract 'DocumentSigner':
    |function withdrawLeftOver_unchk33() public {
    |        require(payedOut_unchk33);
  > |        msg.sender.send(address(this).balance);
    |    }
    |    
  at buggy_10.sol(68)

[31mViolation[0m for UnhandledException in contract 'DocumentSigner':
    |    }
    |function bug_unchk27(address payable addr) public
  > |      {addr.send (42 ether); }
    |    
    |    function getHash(string memory _doc) public pure returns(bytes32) {
  at buggy_10.sol(76)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'DocumentSigner':
    |function UncheckedExternalCall_unchk40 () public
    |{  address payable addr_unchk40;
  > |   if (! addr_unchk40.send (2 ether))  
    |      {// comment1;
    |      }
  at buggy_10.sol(49)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'DocumentSigner':
    |    }
    |function bug_unchk27(address payable addr) public
  > |      {addr.send (42 ether); }
    |    
    |    function getHash(string memory _doc) public pure returns(bytes32) {
  at buggy_10.sol(76)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'DocumentSigner':
    |contract DocumentSigner {
    |  function my_func_unchk35(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |  mapping(bytes32=>string) public docs;
  at buggy_10.sol(9)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'DocumentSigner':
    |function sendToWinner_unchk44() public {
    |        require(!payedOut_unchk44);
  > |        winner_unchk44.send(winAmount_unchk44);
    |        payedOut_unchk44 = true;
    |    }
  at buggy_10.sol(18)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'DocumentSigner':
    |function withdrawLeftOver_unchk45() public {
    |        require(payedOut_unchk45);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  event Sign(bytes32 indexed _doc, address indexed _signer);
  at buggy_10.sol(32)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'DocumentSigner':
    |function withdrawLeftOver_unchk33() public {
    |        require(payedOut_unchk33);
  > |        msg.sender.send(address(this).balance);
    |    }
    |    
  at buggy_10.sol(68)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'DocumentSigner':
    |function bug_unchk31() public{
    |address payable addr_unchk31;
  > |if (!addr_unchk31.send (10 ether) || 1==1)
    |	{revert();}
    |}
  at buggy_10.sol(83)

[31mViolation[0m for UnrestrictedWrite in contract 'DocumentSigner':
    |pragma solidity >=0.4.21 < 0.6.0;
    |
  > |contract DocumentSigner {
    |  function my_func_unchk35(address payable dst) public payable{
    |        dst.send(msg.value);
  at buggy_10.sol(7)

[31mViolation[0m for UnrestrictedWrite in contract 'DocumentSigner':
    |        require(!payedOut_unchk44);
    |        winner_unchk44.send(winAmount_unchk44);
  > |        payedOut_unchk44 = true;
    |    }
    |  mapping(bytes32=>address[]) public signers;
  at buggy_10.sol(19)

