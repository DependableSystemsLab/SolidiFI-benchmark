Processing contract: buggy_47.sol:AcunarIEO
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_47.sol:AcunarToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_47.sol:ERC20Interface
[31mViolation[0m for DAOConstantGas in contract 'AcunarIEO':
    |function sendToWinner_unchk20() public {
    |        require(!payedOut_unchk20);
  > |        winner_unchk20.send(winAmount_unchk20);
    |        payedOut_unchk20 = true;
    |    }
  at buggy_47.sol(42)

[31mViolation[0m for DAOConstantGas in contract 'AcunarIEO':
    |function sendToWinner_unchk32() public {
    |        require(!payedOut_unchk32);
  > |        winner_unchk32.send(winAmount_unchk32);
    |        payedOut_unchk32 = true;
    |    }
  at buggy_47.sol(52)

[31mViolation[0m for DAOConstantGas in contract 'AcunarIEO':
    |function sendToWinner_unchk8() public {
    |        require(!payedOut_unchk8);
  > |        winner_unchk8.send(winAmount_unchk8);
    |        payedOut_unchk8 = true;
    |    }
  at buggy_47.sol(284)

[31mViolation[0m for DAOConstantGas in contract 'AcunarIEO':
    |function sendToWinner_unchk44() public {
    |        require(!payedOut_unchk44);
  > |        winner_unchk44.send(winAmount_unchk44);
    |        payedOut_unchk44 = true;
    |    }
  at buggy_47.sol(332)

[31mViolation[0m for TODAmount in contract 'AcunarIEO':
    |function withdrawLeftOver_unchk9() public {
    |        require(payedOut_unchk9);
  > |        msg.sender.send(address(this).balance);
    |    }
    |    function balanceOf(address tokenOwner) public view returns (uint balance);
  at buggy_47.sol(17)

[31mViolation[0m for TODAmount in contract 'AcunarIEO':
    |function withdrawLeftOver_unchk21() public {
    |        require(payedOut_unchk21);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  string public symbol = "ACN";
  at buggy_47.sol(71)

[31mViolation[0m for TODAmount in contract 'AcunarIEO':
    |function withdrawLeftOver_unchk33() public {
    |        require(payedOut_unchk33);
  > |        msg.sender.send(address(this).balance);
    |    }
    |    
  at buggy_47.sol(382)

[31mViolation[0m for TODAmount in contract 'AcunarIEO':
    |function withdrawLeftOver_unchk45() public {
    |        require(payedOut_unchk45);
  > |        msg.sender.send(address(this).balance);
    |    }
    |    
  at buggy_47.sol(415)

[33mWarning[0m for TODAmount in contract 'AcunarIEO':
    |    
    |  function my_func_unchk47(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |  uint public supply;
  at buggy_47.sol(82)

[33mWarning[0m for TODAmount in contract 'AcunarIEO':
    |    
    |  function my_func_uncheck12(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |  mapping(address => uint) public balances;
  at buggy_47.sol(93)

[33mWarning[0m for TODAmount in contract 'AcunarIEO':
    |    
    |  function my_func_unchk11(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |  mapping(address => mapping(address => uint)) allowed;
  at buggy_47.sol(98)

[33mWarning[0m for TODAmount in contract 'AcunarIEO':
    |    }
    |function my_func_unchk23(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |    
  at buggy_47.sol(171)

[33mWarning[0m for TODAmount in contract 'AcunarIEO':
    |    
    |  function my_func_uncheck48(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |  uint public saleStart = now;
  at buggy_47.sol(240)

[33mWarning[0m for TODAmount in contract 'AcunarIEO':
    |    }
    |function my_func_uncheck36(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |    
  at buggy_47.sol(300)

[33mWarning[0m for TODAmount in contract 'AcunarIEO':
    |    }
    |function my_func_unchk35(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |    
  at buggy_47.sol(310)

[33mWarning[0m for TODAmount in contract 'AcunarIEO':
    |        balances[founder] -= tokens;
    |        
  > |        deposit.transfer(msg.value);//transfer eth to the deposit address
    |        
    |        //emit event
  at buggy_47.sol(355)

[31mViolation[0m for TODReceiver in contract 'AcunarIEO':
    |function sendToWinner_unchk20() public {
    |        require(!payedOut_unchk20);
  > |        winner_unchk20.send(winAmount_unchk20);
    |        payedOut_unchk20 = true;
    |    }
  at buggy_47.sol(42)

[31mViolation[0m for TODReceiver in contract 'AcunarIEO':
    |function sendToWinner_unchk32() public {
    |        require(!payedOut_unchk32);
  > |        winner_unchk32.send(winAmount_unchk32);
    |        payedOut_unchk32 = true;
    |    }
  at buggy_47.sol(52)

[31mViolation[0m for TODReceiver in contract 'AcunarIEO':
    |function sendToWinner_unchk8() public {
    |        require(!payedOut_unchk8);
  > |        winner_unchk8.send(winAmount_unchk8);
    |        payedOut_unchk8 = true;
    |    }
  at buggy_47.sol(284)

[31mViolation[0m for TODReceiver in contract 'AcunarIEO':
    |function sendToWinner_unchk44() public {
    |        require(!payedOut_unchk44);
  > |        winner_unchk44.send(winAmount_unchk44);
    |        payedOut_unchk44 = true;
    |    }
  at buggy_47.sol(332)

[31mViolation[0m for TODReceiver in contract 'AcunarIEO':
    |        balances[founder] -= tokens;
    |        
  > |        deposit.transfer(msg.value);//transfer eth to the deposit address
    |        
    |        //emit event
  at buggy_47.sol(355)

[31mViolation[0m for UnhandledException in contract 'AcunarIEO':
    |function withdrawLeftOver_unchk9() public {
    |        require(payedOut_unchk9);
  > |        msg.sender.send(address(this).balance);
    |    }
    |    function balanceOf(address tokenOwner) public view returns (uint balance);
  at buggy_47.sol(17)

[31mViolation[0m for UnhandledException in contract 'AcunarIEO':
    |    function allowance(address tokenOwner, address spender) public view returns (uint remaining);
    |function unhandledsend_unchk26(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |    function approve(address spender, uint tokens) public returns (bool success);
  at buggy_47.sol(33)

[31mViolation[0m for UnhandledException in contract 'AcunarIEO':
    |function sendToWinner_unchk20() public {
    |        require(!payedOut_unchk20);
  > |        winner_unchk20.send(winAmount_unchk20);
    |        payedOut_unchk20 = true;
    |    }
  at buggy_47.sol(42)

[31mViolation[0m for UnhandledException in contract 'AcunarIEO':
    |function sendToWinner_unchk32() public {
    |        require(!payedOut_unchk32);
  > |        winner_unchk32.send(winAmount_unchk32);
    |        payedOut_unchk32 = true;
    |    }
  at buggy_47.sol(52)

[31mViolation[0m for UnhandledException in contract 'AcunarIEO':
    |  function cash_unchk34(uint roundIndex, uint subpotIndex, address payable winner_unchk34) public{
    |        uint64 subpot_unchk34 = 10 ether;
  > |        winner_unchk34.send(subpot_unchk34);  //bug
    |        subpot_unchk34= 0;
    |}
  at buggy_47.sol(63)

[31mViolation[0m for UnhandledException in contract 'AcunarIEO':
    |function withdrawLeftOver_unchk21() public {
    |        require(payedOut_unchk21);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  string public symbol = "ACN";
  at buggy_47.sol(71)

[31mViolation[0m for UnhandledException in contract 'AcunarIEO':
    |  function cash_unchk10(uint roundIndex, uint subpotIndex,address payable winner_unchk10) public{
    |        uint64 subpot_unchk10 = 10 ether;
  > |        winner_unchk10.send(subpot_unchk10);  //bug
    |        subpot_unchk10= 0;
    |}
  at buggy_47.sol(76)

[31mViolation[0m for UnhandledException in contract 'AcunarIEO':
    |    
    |  function my_func_unchk47(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |  uint public supply;
  at buggy_47.sol(82)

[31mViolation[0m for UnhandledException in contract 'AcunarIEO':
    |  function cash_unchk22(uint roundIndex, uint subpotIndex, address payable winner_unchk22)public{
    |        uint64 subpot_unchk22 = 10 ether;
  > |        winner_unchk22.send(subpot_unchk22);  //bug
    |        subpot_unchk22= 0;
    |}
  at buggy_47.sol(87)

[31mViolation[0m for UnhandledException in contract 'AcunarIEO':
    |    
    |  function my_func_uncheck12(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |  mapping(address => uint) public balances;
  at buggy_47.sol(93)

[31mViolation[0m for UnhandledException in contract 'AcunarIEO':
    |    
    |  function my_func_unchk11(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |  mapping(address => mapping(address => uint)) allowed;
  at buggy_47.sol(98)

[31mViolation[0m for UnhandledException in contract 'AcunarIEO':
    |    }
    |function unhandledsend_unchk38(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |    
  at buggy_47.sol(115)

[31mViolation[0m for UnhandledException in contract 'AcunarIEO':
    |function cash_unchk46(uint roundIndex, uint subpotIndex, address payable winner_unchk46) public{
    |        uint64 subpot_unchk46 = 3 ether;
  > |        winner_unchk46.send(subpot_unchk46);  //bug
    |        subpot_unchk46= 0;
    |}
  at buggy_47.sol(124)

[31mViolation[0m for UnhandledException in contract 'AcunarIEO':
    |    }
    |function my_func_unchk23(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |    
  at buggy_47.sol(171)

[31mViolation[0m for UnhandledException in contract 'AcunarIEO':
    |     }
    |function unhandledsend_unchk14(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |     
  at buggy_47.sol(178)

[31mViolation[0m for UnhandledException in contract 'AcunarIEO':
    |  function withdrawBal_unchk41 () public{
    |	uint64 Balances_unchk41 = 0;
  > |	msg.sender.send(Balances_unchk41);}
    |  address payable public deposit;
    |    
  at buggy_47.sol(212)

[31mViolation[0m for UnhandledException in contract 'AcunarIEO':
    |    //300 Ether in wei
    |  function unhandledsend_unchk2(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |  uint public hardCap =21000 ether;
  at buggy_47.sol(228)

[31mViolation[0m for UnhandledException in contract 'AcunarIEO':
    |    
    |  function my_func_uncheck48(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |  uint public saleStart = now;
  at buggy_47.sol(240)

[31mViolation[0m for UnhandledException in contract 'AcunarIEO':
    |  function withdrawBal_unchk17 () public{
    |	uint64 Balances_unchk17 = 0;
  > |	msg.sender.send(Balances_unchk17);}
    |  uint public maxInvestment = 30 ether;
    |  function callnotchecked_unchk37(address payable callee) public {
  at buggy_47.sol(248)

[31mViolation[0m for UnhandledException in contract 'AcunarIEO':
    |    enum State { beforeStart, running, afterEnd, halted}
    |  function bug_unchk3(address payable addr) public
  > |      {addr.send (42 ether); }
    |  State public ieoState;
    |    
  at buggy_47.sol(257)

[31mViolation[0m for UnhandledException in contract 'AcunarIEO':
    |function sendToWinner_unchk8() public {
    |        require(!payedOut_unchk8);
  > |        winner_unchk8.send(winAmount_unchk8);
    |        payedOut_unchk8 = true;
    |    }
  at buggy_47.sol(284)

[31mViolation[0m for UnhandledException in contract 'AcunarIEO':
    |    }
    |function bug_unchk39(address payable addr) public
  > |      {addr.send (4 ether); }
    |    
    |    //restart 
  at buggy_47.sol(293)

[31mViolation[0m for UnhandledException in contract 'AcunarIEO':
    |    }
    |function my_func_uncheck36(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |    
  at buggy_47.sol(300)

[31mViolation[0m for UnhandledException in contract 'AcunarIEO':
    |    }
    |function my_func_unchk35(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |    
  at buggy_47.sol(310)

[31mViolation[0m for UnhandledException in contract 'AcunarIEO':
    |function sendToWinner_unchk44() public {
    |        require(!payedOut_unchk44);
  > |        winner_unchk44.send(winAmount_unchk44);
    |        payedOut_unchk44 = true;
    |    }
  at buggy_47.sol(332)

[31mViolation[0m for UnhandledException in contract 'AcunarIEO':
    |function withdrawLeftOver_unchk33() public {
    |        require(payedOut_unchk33);
  > |        msg.sender.send(address(this).balance);
    |    }
    |    
  at buggy_47.sol(382)

[31mViolation[0m for UnhandledException in contract 'AcunarIEO':
    |    }
    |function bug_unchk27(address payable addr) public
  > |      {addr.send (42 ether); }
    |    
    |    
  at buggy_47.sol(394)

[31mViolation[0m for UnhandledException in contract 'AcunarIEO':
    |function withdrawLeftOver_unchk45() public {
    |        require(payedOut_unchk45);
  > |        msg.sender.send(address(this).balance);
    |    }
    |    
  at buggy_47.sol(415)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    function allowance(address tokenOwner, address spender) public view returns (uint remaining);
    |function unhandledsend_unchk26(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |    function approve(address spender, uint tokens) public returns (bool success);
  at buggy_47.sol(33)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    }
    |function unhandledsend_unchk38(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |    
  at buggy_47.sol(115)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |function cash_unchk46(uint roundIndex, uint subpotIndex, address payable winner_unchk46) public{
    |        uint64 subpot_unchk46 = 3 ether;
  > |        winner_unchk46.send(subpot_unchk46);  //bug
    |        subpot_unchk46= 0;
    |}
  at buggy_47.sol(124)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |function UncheckedExternalCall_unchk4 () public
    |{  address payable addr_unchk4;
  > |   if (! addr_unchk4.send (42 ether))  
    |      {// comment1;
    |      }
  at buggy_47.sol(140)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |     }
    |function unhandledsend_unchk14(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |     
  at buggy_47.sol(178)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |uint receivers_unchk30;
    |address payable addr_unchk30;
  > |if (!addr_unchk30.send(42 ether))
    |	{receivers_unchk30 +=1;}
    |else
  at buggy_47.sol(193)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |uint receivers_unchk42;
    |address payable addr_unchk42;
  > |if (!addr_unchk42.send(42 ether))
    |	{receivers_unchk42 +=1;}
    |else
  at buggy_47.sol(219)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    //300 Ether in wei
    |  function unhandledsend_unchk2(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |  uint public hardCap =21000 ether;
  at buggy_47.sol(228)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    enum State { beforeStart, running, afterEnd, halted}
    |  function bug_unchk3(address payable addr) public
  > |      {addr.send (42 ether); }
    |  State public ieoState;
    |    
  at buggy_47.sol(257)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    }
    |function bug_unchk39(address payable addr) public
  > |      {addr.send (4 ether); }
    |    
    |    //restart 
  at buggy_47.sol(293)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |function UncheckedExternalCall_unchk40 () public
    |{  address payable addr_unchk40;
  > |   if (! addr_unchk40.send (2 ether))  
    |      {// comment1;
    |      }
  at buggy_47.sol(366)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    }
    |function bug_unchk27(address payable addr) public
  > |      {addr.send (42 ether); }
    |    
    |    
  at buggy_47.sol(394)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |function withdrawLeftOver_unchk9() public {
    |        require(payedOut_unchk9);
  > |        msg.sender.send(address(this).balance);
    |    }
    |    function balanceOf(address tokenOwner) public view returns (uint balance);
  at buggy_47.sol(17)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |function bug_unchk19() public{
    |address payable addr_unchk19;
  > |if (!addr_unchk19.send (10 ether) || 1==1)
    |	{revert();}
    |}
  at buggy_47.sol(26)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |function sendToWinner_unchk20() public {
    |        require(!payedOut_unchk20);
  > |        winner_unchk20.send(winAmount_unchk20);
    |        payedOut_unchk20 = true;
    |    }
  at buggy_47.sol(42)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |function sendToWinner_unchk32() public {
    |        require(!payedOut_unchk32);
  > |        winner_unchk32.send(winAmount_unchk32);
    |        payedOut_unchk32 = true;
    |    }
  at buggy_47.sol(52)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |  function cash_unchk34(uint roundIndex, uint subpotIndex, address payable winner_unchk34) public{
    |        uint64 subpot_unchk34 = 10 ether;
  > |        winner_unchk34.send(subpot_unchk34);  //bug
    |        subpot_unchk34= 0;
    |}
  at buggy_47.sol(63)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |function withdrawLeftOver_unchk21() public {
    |        require(payedOut_unchk21);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  string public symbol = "ACN";
  at buggy_47.sol(71)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |  function cash_unchk10(uint roundIndex, uint subpotIndex,address payable winner_unchk10) public{
    |        uint64 subpot_unchk10 = 10 ether;
  > |        winner_unchk10.send(subpot_unchk10);  //bug
    |        subpot_unchk10= 0;
    |}
  at buggy_47.sol(76)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    
    |  function my_func_unchk47(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |  uint public supply;
  at buggy_47.sol(82)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |  function cash_unchk22(uint roundIndex, uint subpotIndex, address payable winner_unchk22)public{
    |        uint64 subpot_unchk22 = 10 ether;
  > |        winner_unchk22.send(subpot_unchk22);  //bug
    |        subpot_unchk22= 0;
    |}
  at buggy_47.sol(87)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    
    |  function my_func_uncheck12(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |  mapping(address => uint) public balances;
  at buggy_47.sol(93)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    
    |  function my_func_unchk11(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |  mapping(address => mapping(address => uint)) allowed;
  at buggy_47.sol(98)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |function bug_unchk7() public{
    |address payable addr_unchk7;
  > |if (!addr_unchk7.send (10 ether) || 1==1)
    |	{revert();}
    |}
  at buggy_47.sol(163)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    }
    |function my_func_unchk23(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |    
  at buggy_47.sol(171)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |  function bug_unchk43() public{
    |address payable addr_unchk43;
  > |if (!addr_unchk43.send (10 ether) || 1==1)
    |	{revert();}
    |}
  at buggy_47.sol(234)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    
    |  function my_func_uncheck48(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |  uint public saleStart = now;
  at buggy_47.sol(240)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |function sendToWinner_unchk8() public {
    |        require(!payedOut_unchk8);
  > |        winner_unchk8.send(winAmount_unchk8);
    |        payedOut_unchk8 = true;
    |    }
  at buggy_47.sol(284)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    }
    |function my_func_uncheck36(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |    
  at buggy_47.sol(300)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |    }
    |function my_func_unchk35(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |    
  at buggy_47.sol(310)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |function sendToWinner_unchk44() public {
    |        require(!payedOut_unchk44);
  > |        winner_unchk44.send(winAmount_unchk44);
    |        payedOut_unchk44 = true;
    |    }
  at buggy_47.sol(332)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |        balances[founder] -= tokens;
    |        
  > |        deposit.transfer(msg.value);//transfer eth to the deposit address
    |        
    |        //emit event
  at buggy_47.sol(355)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |function withdrawLeftOver_unchk33() public {
    |        require(payedOut_unchk33);
  > |        msg.sender.send(address(this).balance);
    |    }
    |    
  at buggy_47.sol(382)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |function bug_unchk31() public{
    |address payable addr_unchk31;
  > |if (!addr_unchk31.send (10 ether) || 1==1)
    |	{revert();}
    |}
  at buggy_47.sol(403)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarIEO':
    |function withdrawLeftOver_unchk45() public {
    |        require(payedOut_unchk45);
  > |        msg.sender.send(address(this).balance);
    |    }
    |    
  at buggy_47.sol(415)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarIEO':
    |        require(!payedOut_unchk20);
    |        winner_unchk20.send(winAmount_unchk20);
  > |        payedOut_unchk20 = true;
    |    }
    |    function transferFrom(address from, address to, uint tokens) public returns (bool success);
  at buggy_47.sol(43)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarIEO':
    |        require(!payedOut_unchk32);
    |        winner_unchk32.send(winAmount_unchk32);
  > |        payedOut_unchk32 = true;
    |    }
    |    
  at buggy_47.sol(53)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarIEO':
    |        require(balances[from] >= tokens);
    |        
  > |        balances[from] -= tokens;
    |        balances[to] += tokens;
    |        
  at buggy_47.sol(153)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarIEO':
    |        
    |        balances[from] -= tokens;
  > |        balances[to] += tokens;
    |        
    |        
  at buggy_47.sol(154)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarIEO':
    |        
    |        
  > |        allowed[from][to] -= tokens;
    |        
    |        return true;
  at buggy_47.sol(157)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarIEO':
    |         require(balances[msg.sender] >= tokens && tokens > 0);
    |         
  > |         balances[to] += tokens;
    |         balances[msg.sender] -= tokens;
    |         emit Transfer(msg.sender, to, tokens);
  at buggy_47.sol(185)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarIEO':
    |        require(!payedOut_unchk8);
    |        winner_unchk8.send(winAmount_unchk8);
  > |        payedOut_unchk8 = true;
    |    }
    |    
  at buggy_47.sol(285)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarIEO':
    |        require(!payedOut_unchk44);
    |        winner_unchk44.send(winAmount_unchk44);
  > |        payedOut_unchk44 = true;
    |    }
    |    
  at buggy_47.sol(333)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarIEO':
    |    function invest() payable public returns(bool){
    |        //invest only in running
  > |        ieoState = getCurrentState();
    |        require(ieoState == State.running);
    |        
  at buggy_47.sol(339)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarIEO':
    |        require(raisedAmount + msg.value <= hardCap);
    |        
  > |        raisedAmount += msg.value;
    |        
    |        //add tokens to investor balance from founder balance
  at buggy_47.sol(349)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarIEO':
    |        //add tokens to investor balance from founder balance
    |        balances[msg.sender] += tokens;
  > |        balances[founder] -= tokens;
    |        
    |        deposit.transfer(msg.value);//transfer eth to the deposit address
  at buggy_47.sol(353)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarIEO':
    |    
    |    function burn() public returns(bool){
  > |        ieoState = getCurrentState();
    |        require(ieoState == State.afterEnd);
    |        balances[founder] = 0;
  at buggy_47.sol(388)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarIEO':
    |        ieoState = getCurrentState();
    |        require(ieoState == State.afterEnd);
  > |        balances[founder] = 0;
    |        
    |    }
  at buggy_47.sol(390)

[33mWarning[0m for UnrestrictedWrite in contract 'AcunarIEO':
    |    //emergency stop
    |    function halt() public onlyAdmin{
  > |        ieoState = State.halted;
    |    }
    |function bug_unchk39(address payable addr) public
  at buggy_47.sol(290)

[33mWarning[0m for UnrestrictedWrite in contract 'AcunarIEO':
    |    //restart 
    |    function unhalt() public onlyAdmin{
  > |        ieoState = State.running;
    |    }
    |function my_func_uncheck36(address payable dst) public payable{
  at buggy_47.sol(297)

[33mWarning[0m for UnrestrictedWrite in contract 'AcunarIEO':
    |    //in solidity version > 0.5.0 the deposit argument must be payable
    |    function changeDepositAddress(address payable newDeposit) public onlyAdmin{
  > |        deposit = newDeposit;
    |    }
    |function my_func_unchk35(address payable dst) public payable{
  at buggy_47.sol(307)

[31mViolation[0m for DAOConstantGas in contract 'AcunarToken':
    |function sendToWinner_unchk20() public {
    |        require(!payedOut_unchk20);
  > |        winner_unchk20.send(winAmount_unchk20);
    |        payedOut_unchk20 = true;
    |    }
  at buggy_47.sol(42)

[31mViolation[0m for DAOConstantGas in contract 'AcunarToken':
    |function sendToWinner_unchk32() public {
    |        require(!payedOut_unchk32);
  > |        winner_unchk32.send(winAmount_unchk32);
    |        payedOut_unchk32 = true;
    |    }
  at buggy_47.sol(52)

[31mViolation[0m for TODAmount in contract 'AcunarToken':
    |function withdrawLeftOver_unchk9() public {
    |        require(payedOut_unchk9);
  > |        msg.sender.send(address(this).balance);
    |    }
    |    function balanceOf(address tokenOwner) public view returns (uint balance);
  at buggy_47.sol(17)

[31mViolation[0m for TODAmount in contract 'AcunarToken':
    |function withdrawLeftOver_unchk21() public {
    |        require(payedOut_unchk21);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  string public symbol = "ACN";
  at buggy_47.sol(71)

[33mWarning[0m for TODAmount in contract 'AcunarToken':
    |    
    |  function my_func_unchk47(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |  uint public supply;
  at buggy_47.sol(82)

[33mWarning[0m for TODAmount in contract 'AcunarToken':
    |    
    |  function my_func_uncheck12(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |  mapping(address => uint) public balances;
  at buggy_47.sol(93)

[33mWarning[0m for TODAmount in contract 'AcunarToken':
    |    
    |  function my_func_unchk11(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |  mapping(address => mapping(address => uint)) allowed;
  at buggy_47.sol(98)

[33mWarning[0m for TODAmount in contract 'AcunarToken':
    |    }
    |function my_func_unchk23(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |    
  at buggy_47.sol(171)

[31mViolation[0m for TODReceiver in contract 'AcunarToken':
    |function sendToWinner_unchk20() public {
    |        require(!payedOut_unchk20);
  > |        winner_unchk20.send(winAmount_unchk20);
    |        payedOut_unchk20 = true;
    |    }
  at buggy_47.sol(42)

[31mViolation[0m for TODReceiver in contract 'AcunarToken':
    |function sendToWinner_unchk32() public {
    |        require(!payedOut_unchk32);
  > |        winner_unchk32.send(winAmount_unchk32);
    |        payedOut_unchk32 = true;
    |    }
  at buggy_47.sol(52)

[31mViolation[0m for UnhandledException in contract 'AcunarToken':
    |function withdrawLeftOver_unchk9() public {
    |        require(payedOut_unchk9);
  > |        msg.sender.send(address(this).balance);
    |    }
    |    function balanceOf(address tokenOwner) public view returns (uint balance);
  at buggy_47.sol(17)

[31mViolation[0m for UnhandledException in contract 'AcunarToken':
    |    function allowance(address tokenOwner, address spender) public view returns (uint remaining);
    |function unhandledsend_unchk26(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |    function approve(address spender, uint tokens) public returns (bool success);
  at buggy_47.sol(33)

[31mViolation[0m for UnhandledException in contract 'AcunarToken':
    |function sendToWinner_unchk20() public {
    |        require(!payedOut_unchk20);
  > |        winner_unchk20.send(winAmount_unchk20);
    |        payedOut_unchk20 = true;
    |    }
  at buggy_47.sol(42)

[31mViolation[0m for UnhandledException in contract 'AcunarToken':
    |function sendToWinner_unchk32() public {
    |        require(!payedOut_unchk32);
  > |        winner_unchk32.send(winAmount_unchk32);
    |        payedOut_unchk32 = true;
    |    }
  at buggy_47.sol(52)

[31mViolation[0m for UnhandledException in contract 'AcunarToken':
    |  function cash_unchk34(uint roundIndex, uint subpotIndex, address payable winner_unchk34) public{
    |        uint64 subpot_unchk34 = 10 ether;
  > |        winner_unchk34.send(subpot_unchk34);  //bug
    |        subpot_unchk34= 0;
    |}
  at buggy_47.sol(63)

[31mViolation[0m for UnhandledException in contract 'AcunarToken':
    |function withdrawLeftOver_unchk21() public {
    |        require(payedOut_unchk21);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  string public symbol = "ACN";
  at buggy_47.sol(71)

[31mViolation[0m for UnhandledException in contract 'AcunarToken':
    |  function cash_unchk10(uint roundIndex, uint subpotIndex,address payable winner_unchk10) public{
    |        uint64 subpot_unchk10 = 10 ether;
  > |        winner_unchk10.send(subpot_unchk10);  //bug
    |        subpot_unchk10= 0;
    |}
  at buggy_47.sol(76)

[31mViolation[0m for UnhandledException in contract 'AcunarToken':
    |    
    |  function my_func_unchk47(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |  uint public supply;
  at buggy_47.sol(82)

[31mViolation[0m for UnhandledException in contract 'AcunarToken':
    |  function cash_unchk22(uint roundIndex, uint subpotIndex, address payable winner_unchk22)public{
    |        uint64 subpot_unchk22 = 10 ether;
  > |        winner_unchk22.send(subpot_unchk22);  //bug
    |        subpot_unchk22= 0;
    |}
  at buggy_47.sol(87)

[31mViolation[0m for UnhandledException in contract 'AcunarToken':
    |    
    |  function my_func_uncheck12(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |  mapping(address => uint) public balances;
  at buggy_47.sol(93)

[31mViolation[0m for UnhandledException in contract 'AcunarToken':
    |    
    |  function my_func_unchk11(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |  mapping(address => mapping(address => uint)) allowed;
  at buggy_47.sol(98)

[31mViolation[0m for UnhandledException in contract 'AcunarToken':
    |    }
    |function unhandledsend_unchk38(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |    
  at buggy_47.sol(115)

[31mViolation[0m for UnhandledException in contract 'AcunarToken':
    |function cash_unchk46(uint roundIndex, uint subpotIndex, address payable winner_unchk46) public{
    |        uint64 subpot_unchk46 = 3 ether;
  > |        winner_unchk46.send(subpot_unchk46);  //bug
    |        subpot_unchk46= 0;
    |}
  at buggy_47.sol(124)

[31mViolation[0m for UnhandledException in contract 'AcunarToken':
    |    }
    |function my_func_unchk23(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |    
  at buggy_47.sol(171)

[31mViolation[0m for UnhandledException in contract 'AcunarToken':
    |     }
    |function unhandledsend_unchk14(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |     
  at buggy_47.sol(178)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |    function allowance(address tokenOwner, address spender) public view returns (uint remaining);
    |function unhandledsend_unchk26(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |    function approve(address spender, uint tokens) public returns (bool success);
  at buggy_47.sol(33)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |    }
    |function unhandledsend_unchk38(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |    
  at buggy_47.sol(115)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |function cash_unchk46(uint roundIndex, uint subpotIndex, address payable winner_unchk46) public{
    |        uint64 subpot_unchk46 = 3 ether;
  > |        winner_unchk46.send(subpot_unchk46);  //bug
    |        subpot_unchk46= 0;
    |}
  at buggy_47.sol(124)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |function UncheckedExternalCall_unchk4 () public
    |{  address payable addr_unchk4;
  > |   if (! addr_unchk4.send (42 ether))  
    |      {// comment1;
    |      }
  at buggy_47.sol(140)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |     }
    |function unhandledsend_unchk14(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |     
  at buggy_47.sol(178)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |uint receivers_unchk30;
    |address payable addr_unchk30;
  > |if (!addr_unchk30.send(42 ether))
    |	{receivers_unchk30 +=1;}
    |else
  at buggy_47.sol(193)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |function withdrawLeftOver_unchk9() public {
    |        require(payedOut_unchk9);
  > |        msg.sender.send(address(this).balance);
    |    }
    |    function balanceOf(address tokenOwner) public view returns (uint balance);
  at buggy_47.sol(17)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |function bug_unchk19() public{
    |address payable addr_unchk19;
  > |if (!addr_unchk19.send (10 ether) || 1==1)
    |	{revert();}
    |}
  at buggy_47.sol(26)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |function sendToWinner_unchk20() public {
    |        require(!payedOut_unchk20);
  > |        winner_unchk20.send(winAmount_unchk20);
    |        payedOut_unchk20 = true;
    |    }
  at buggy_47.sol(42)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |function sendToWinner_unchk32() public {
    |        require(!payedOut_unchk32);
  > |        winner_unchk32.send(winAmount_unchk32);
    |        payedOut_unchk32 = true;
    |    }
  at buggy_47.sol(52)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |  function cash_unchk34(uint roundIndex, uint subpotIndex, address payable winner_unchk34) public{
    |        uint64 subpot_unchk34 = 10 ether;
  > |        winner_unchk34.send(subpot_unchk34);  //bug
    |        subpot_unchk34= 0;
    |}
  at buggy_47.sol(63)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |function withdrawLeftOver_unchk21() public {
    |        require(payedOut_unchk21);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  string public symbol = "ACN";
  at buggy_47.sol(71)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |  function cash_unchk10(uint roundIndex, uint subpotIndex,address payable winner_unchk10) public{
    |        uint64 subpot_unchk10 = 10 ether;
  > |        winner_unchk10.send(subpot_unchk10);  //bug
    |        subpot_unchk10= 0;
    |}
  at buggy_47.sol(76)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |    
    |  function my_func_unchk47(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |  uint public supply;
  at buggy_47.sol(82)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |  function cash_unchk22(uint roundIndex, uint subpotIndex, address payable winner_unchk22)public{
    |        uint64 subpot_unchk22 = 10 ether;
  > |        winner_unchk22.send(subpot_unchk22);  //bug
    |        subpot_unchk22= 0;
    |}
  at buggy_47.sol(87)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |    
    |  function my_func_uncheck12(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |  mapping(address => uint) public balances;
  at buggy_47.sol(93)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |    
    |  function my_func_unchk11(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |  mapping(address => mapping(address => uint)) allowed;
  at buggy_47.sol(98)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |function bug_unchk7() public{
    |address payable addr_unchk7;
  > |if (!addr_unchk7.send (10 ether) || 1==1)
    |	{revert();}
    |}
  at buggy_47.sol(163)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AcunarToken':
    |    }
    |function my_func_unchk23(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |    
  at buggy_47.sol(171)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarToken':
    |        require(!payedOut_unchk20);
    |        winner_unchk20.send(winAmount_unchk20);
  > |        payedOut_unchk20 = true;
    |    }
    |    function transferFrom(address from, address to, uint tokens) public returns (bool success);
  at buggy_47.sol(43)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarToken':
    |        require(!payedOut_unchk32);
    |        winner_unchk32.send(winAmount_unchk32);
  > |        payedOut_unchk32 = true;
    |    }
    |    
  at buggy_47.sol(53)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarToken':
    |        require(balances[from] >= tokens);
    |        
  > |        balances[from] -= tokens;
    |        balances[to] += tokens;
    |        
  at buggy_47.sol(153)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarToken':
    |        
    |        balances[from] -= tokens;
  > |        balances[to] += tokens;
    |        
    |        
  at buggy_47.sol(154)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarToken':
    |        
    |        
  > |        allowed[from][to] -= tokens;
    |        
    |        return true;
  at buggy_47.sol(157)

[31mViolation[0m for UnrestrictedWrite in contract 'AcunarToken':
    |         require(balances[msg.sender] >= tokens && tokens > 0);
    |         
  > |         balances[to] += tokens;
    |         balances[msg.sender] -= tokens;
    |         emit Transfer(msg.sender, to, tokens);
  at buggy_47.sol(185)

