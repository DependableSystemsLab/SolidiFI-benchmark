Processing contract: buggy_45.sol:StockBet
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for DAOConstantGas in contract 'StockBet':
    |function sendToWinner_unchk44() public {
    |        require(!payedOut_unchk44);
  > |        winner_unchk44.send(winAmount_unchk44);
    |        payedOut_unchk44 = true;
    |    }
  at buggy_45.sol(19)

[31mViolation[0m for DAOConstantGas in contract 'StockBet':
    |function sendToWinner_unchk20() public {
    |        require(!payedOut_unchk20);
  > |        winner_unchk20.send(winAmount_unchk20);
    |        payedOut_unchk20 = true;
    |    }
  at buggy_45.sol(123)

[31mViolation[0m for DAOConstantGas in contract 'StockBet':
    |function sendToWinner_unchk32() public {
    |        require(!payedOut_unchk32);
  > |        winner_unchk32.send(winAmount_unchk32);
    |        payedOut_unchk32 = true;
    |    }
  at buggy_45.sol(133)

[31mViolation[0m for DAOConstantGas in contract 'StockBet':
    |function sendToWinner_unchk8() public {
    |        require(!payedOut_unchk8);
  > |        winner_unchk8.send(winAmount_unchk8);
    |        payedOut_unchk8 = true;
    |    }
  at buggy_45.sol(279)

[31mViolation[0m for TODAmount in contract 'StockBet':
    |function withdrawLeftOver_unchk33() public {
    |        require(payedOut_unchk33);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  event OracleSet(address oracle);
  at buggy_45.sol(37)

[31mViolation[0m for TODAmount in contract 'StockBet':
    |function withdrawLeftOver_unchk45() public {
    |        require(payedOut_unchk45);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  event PlayersWin(uint result, uint256 splitJackpot);
  at buggy_45.sol(54)

[31mViolation[0m for TODAmount in contract 'StockBet':
    |function withdrawLeftOver_unchk9() public {
    |        require(payedOut_unchk9);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  uint256 public bet;
  at buggy_45.sol(98)

[31mViolation[0m for TODAmount in contract 'StockBet':
    |        if(guesses[result].players[msg.sender] == PaidStatus.NOT_PAID){
    |            guesses[result].players[msg.sender] = PaidStatus.PAID;
  > |            msg.sender.transfer(splitJackpot);
    |        } else revert();
    |    }
  at buggy_45.sol(286)

[33mWarning[0m for TODAmount in contract 'StockBet':
    |    
    |  function my_func_unchk35(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |  event GameCreated(uint bet);
  at buggy_45.sol(10)

[33mWarning[0m for TODAmount in contract 'StockBet':
    |    
    |  function my_func_uncheck48(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |  address payable public owner;
  at buggy_45.sol(78)

[33mWarning[0m for TODAmount in contract 'StockBet':
    |    }
    |function my_func_unchk23(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |    
  at buggy_45.sol(222)

[33mWarning[0m for TODAmount in contract 'StockBet':
    |    }
    |function my_func_uncheck36(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |    
  at buggy_45.sol(296)

[31mViolation[0m for TODReceiver in contract 'StockBet':
    |function sendToWinner_unchk44() public {
    |        require(!payedOut_unchk44);
  > |        winner_unchk44.send(winAmount_unchk44);
    |        payedOut_unchk44 = true;
    |    }
  at buggy_45.sol(19)

[31mViolation[0m for TODReceiver in contract 'StockBet':
    |function sendToWinner_unchk20() public {
    |        require(!payedOut_unchk20);
  > |        winner_unchk20.send(winAmount_unchk20);
    |        payedOut_unchk20 = true;
    |    }
  at buggy_45.sol(123)

[31mViolation[0m for TODReceiver in contract 'StockBet':
    |function sendToWinner_unchk32() public {
    |        require(!payedOut_unchk32);
  > |        winner_unchk32.send(winAmount_unchk32);
    |        payedOut_unchk32 = true;
    |    }
  at buggy_45.sol(133)

[31mViolation[0m for TODReceiver in contract 'StockBet':
    |function sendToWinner_unchk8() public {
    |        require(!payedOut_unchk8);
  > |        winner_unchk8.send(winAmount_unchk8);
    |        payedOut_unchk8 = true;
    |    }
  at buggy_45.sol(279)

[31mViolation[0m for UnhandledException in contract 'StockBet':
    |    
    |  function my_func_unchk35(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |  event GameCreated(uint bet);
  at buggy_45.sol(10)

[31mViolation[0m for UnhandledException in contract 'StockBet':
    |function sendToWinner_unchk44() public {
    |        require(!payedOut_unchk44);
  > |        winner_unchk44.send(winAmount_unchk44);
    |        payedOut_unchk44 = true;
    |    }
  at buggy_45.sol(19)

[31mViolation[0m for UnhandledException in contract 'StockBet':
    |function withdrawLeftOver_unchk33() public {
    |        require(payedOut_unchk33);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  event OracleSet(address oracle);
  at buggy_45.sol(37)

[31mViolation[0m for UnhandledException in contract 'StockBet':
    |  event OracleSet(address oracle);
    |  function bug_unchk27(address payable addr) public
  > |      {addr.send (42 ether); }
    |  event FinalPriceSet(uint256 finalPrice);
    |  function bug_unchk31() public{
  at buggy_45.sol(41)

[31mViolation[0m for UnhandledException in contract 'StockBet':
    |function withdrawLeftOver_unchk45() public {
    |        require(payedOut_unchk45);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  event PlayersWin(uint result, uint256 splitJackpot);
  at buggy_45.sol(54)

[31mViolation[0m for UnhandledException in contract 'StockBet':
    |    
    |  function my_func_uncheck48(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |  address payable public owner;
  at buggy_45.sol(78)

[31mViolation[0m for UnhandledException in contract 'StockBet':
    |  function withdrawBal_unchk17 () public{
    |	uint64 Balances_unchk17 = 0;
  > |	msg.sender.send(Balances_unchk17);}
    |  address public oracle;
    |  function callnotchecked_unchk37(address payable callee) public {
  at buggy_45.sol(83)

[31mViolation[0m for UnhandledException in contract 'StockBet':
    |
    |  function bug_unchk3(address payable addr) public
  > |      {addr.send (42 ether); }
    |  mapping (uint => Guess) public guesses;
    |
  at buggy_45.sol(91)

[31mViolation[0m for UnhandledException in contract 'StockBet':
    |function withdrawLeftOver_unchk9() public {
    |        require(payedOut_unchk9);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  uint256 public bet;
  at buggy_45.sol(98)

[31mViolation[0m for UnhandledException in contract 'StockBet':
    |  uint256 public initialPrice;
    |  function unhandledsend_unchk26(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |  uint256 public finalPrice;
  at buggy_45.sol(113)

[31mViolation[0m for UnhandledException in contract 'StockBet':
    |function sendToWinner_unchk20() public {
    |        require(!payedOut_unchk20);
  > |        winner_unchk20.send(winAmount_unchk20);
    |        payedOut_unchk20 = true;
    |    }
  at buggy_45.sol(123)

[31mViolation[0m for UnhandledException in contract 'StockBet':
    |function sendToWinner_unchk32() public {
    |        require(!payedOut_unchk32);
  > |        winner_unchk32.send(winAmount_unchk32);
    |        payedOut_unchk32 = true;
    |    }
  at buggy_45.sol(133)

[31mViolation[0m for UnhandledException in contract 'StockBet':
    |    }
    |function unhandledsend_unchk38(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |    
  at buggy_45.sol(172)

[31mViolation[0m for UnhandledException in contract 'StockBet':
    |function cash_unchk46(uint roundIndex, uint subpotIndex, address payable winner_unchk46) public{
    |        uint64 subpot_unchk46 = 3 ether;
  > |        winner_unchk46.send(subpot_unchk46);  //bug
    |        subpot_unchk46= 0;
    |}
  at buggy_45.sol(182)

[31mViolation[0m for UnhandledException in contract 'StockBet':
    |    }
    |function my_func_unchk23(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |    
  at buggy_45.sol(222)

[31mViolation[0m for UnhandledException in contract 'StockBet':
    |    }
    |function unhandledsend_unchk14(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |    
  at buggy_45.sol(234)

[31mViolation[0m for UnhandledException in contract 'StockBet':
    |function sendToWinner_unchk8() public {
    |        require(!payedOut_unchk8);
  > |        winner_unchk8.send(winAmount_unchk8);
    |        payedOut_unchk8 = true;
    |    }
  at buggy_45.sol(279)

[31mViolation[0m for UnhandledException in contract 'StockBet':
    |    }
    |function bug_unchk39(address payable addr) public
  > |      {addr.send (4 ether); }
    |
    |    function getBalance() private view returns (uint256){
  at buggy_45.sol(290)

[31mViolation[0m for UnhandledException in contract 'StockBet':
    |    }
    |function my_func_uncheck36(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |    
  at buggy_45.sol(296)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |  function UncheckedExternalCall_unchk40 () public
    |{  address payable addr_unchk40;
  > |   if (! addr_unchk40.send (2 ether))  
    |      {// comment1;
    |      }
  at buggy_45.sol(25)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |  event OracleSet(address oracle);
    |  function bug_unchk27(address payable addr) public
  > |      {addr.send (42 ether); }
    |  event FinalPriceSet(uint256 finalPrice);
    |  function bug_unchk31() public{
  at buggy_45.sol(41)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |
    |  function bug_unchk3(address payable addr) public
  > |      {addr.send (42 ether); }
    |  mapping (uint => Guess) public guesses;
    |
  at buggy_45.sol(91)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |  uint256 public initialPrice;
    |  function unhandledsend_unchk26(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |  uint256 public finalPrice;
  at buggy_45.sol(113)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |    }
    |function unhandledsend_unchk38(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |    
  at buggy_45.sol(172)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |function cash_unchk46(uint roundIndex, uint subpotIndex, address payable winner_unchk46) public{
    |        uint64 subpot_unchk46 = 3 ether;
  > |        winner_unchk46.send(subpot_unchk46);  //bug
    |        subpot_unchk46= 0;
    |}
  at buggy_45.sol(182)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |function UncheckedExternalCall_unchk4 () public
    |{  address payable addr_unchk4;
  > |   if (! addr_unchk4.send (42 ether))  
    |      {// comment1;
    |      }
  at buggy_45.sol(194)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |    }
    |function unhandledsend_unchk14(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |    
  at buggy_45.sol(234)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |uint receivers_unchk30;
    |address payable addr_unchk30;
  > |if (!addr_unchk30.send(42 ether))
    |	{receivers_unchk30 +=1;}
    |else
  at buggy_45.sol(264)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |    }
    |function bug_unchk39(address payable addr) public
  > |      {addr.send (4 ether); }
    |
    |    function getBalance() private view returns (uint256){
  at buggy_45.sol(290)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |    
    |  function my_func_unchk35(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |  event GameCreated(uint bet);
  at buggy_45.sol(10)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |function sendToWinner_unchk44() public {
    |        require(!payedOut_unchk44);
  > |        winner_unchk44.send(winAmount_unchk44);
    |        payedOut_unchk44 = true;
    |    }
  at buggy_45.sol(19)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |function withdrawLeftOver_unchk33() public {
    |        require(payedOut_unchk33);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  event OracleSet(address oracle);
  at buggy_45.sol(37)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |  function bug_unchk31() public{
    |address payable addr_unchk31;
  > |if (!addr_unchk31.send (10 ether) || 1==1)
    |	{revert();}
    |}
  at buggy_45.sol(45)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |function withdrawLeftOver_unchk45() public {
    |        require(payedOut_unchk45);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  event PlayersWin(uint result, uint256 splitJackpot);
  at buggy_45.sol(54)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |    
    |  function my_func_uncheck48(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |  address payable public owner;
  at buggy_45.sol(78)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |function withdrawLeftOver_unchk9() public {
    |        require(payedOut_unchk9);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  uint256 public bet;
  at buggy_45.sol(98)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |  function bug_unchk19() public{
    |address payable addr_unchk19;
  > |if (!addr_unchk19.send (10 ether) || 1==1)
    |	{revert();}
    |}
  at buggy_45.sol(108)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |function sendToWinner_unchk20() public {
    |        require(!payedOut_unchk20);
  > |        winner_unchk20.send(winAmount_unchk20);
    |        payedOut_unchk20 = true;
    |    }
  at buggy_45.sol(123)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |function sendToWinner_unchk32() public {
    |        require(!payedOut_unchk32);
  > |        winner_unchk32.send(winAmount_unchk32);
    |        payedOut_unchk32 = true;
    |    }
  at buggy_45.sol(133)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |function bug_unchk7() public{
    |address payable addr_unchk7;
  > |if (!addr_unchk7.send (10 ether) || 1==1)
    |	{revert();}
    |}
  at buggy_45.sol(209)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |    }
    |function my_func_unchk23(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |    
  at buggy_45.sol(222)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |function sendToWinner_unchk8() public {
    |        require(!payedOut_unchk8);
  > |        winner_unchk8.send(winAmount_unchk8);
    |        payedOut_unchk8 = true;
    |    }
  at buggy_45.sol(279)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'StockBet':
    |    }
    |function my_func_uncheck36(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |    
  at buggy_45.sol(296)

[31mViolation[0m for UnrestrictedWrite in contract 'StockBet':
    |        require(!payedOut_unchk44);
    |        winner_unchk44.send(winAmount_unchk44);
  > |        payedOut_unchk44 = true;
    |    }
    |  event GameOpened(uint256 initialPrice);
  at buggy_45.sol(20)

[31mViolation[0m for UnrestrictedWrite in contract 'StockBet':
    |        require(!payedOut_unchk20);
    |        winner_unchk20.send(winAmount_unchk20);
  > |        payedOut_unchk20 = true;
    |    }
    |  uint constant UP = 1;
  at buggy_45.sol(124)

[31mViolation[0m for UnrestrictedWrite in contract 'StockBet':
    |        require(!payedOut_unchk32);
    |        winner_unchk32.send(winAmount_unchk32);
  > |        payedOut_unchk32 = true;
    |    }
    |  uint constant DOWN = 0;
  at buggy_45.sol(134)

[31mViolation[0m for UnrestrictedWrite in contract 'StockBet':
    |        require(!payedOut_unchk8);
    |        winner_unchk8.send(winAmount_unchk8);
  > |        payedOut_unchk8 = true;
    |    }
    |    
  at buggy_45.sol(280)

[33mWarning[0m for UnrestrictedWrite in contract 'StockBet':
    |    
    |    function setOracle(address _oracle) public payable byOwner inState(State.SETUP) {
  > |        oracle = _oracle;
    |        
    |        emit OracleSet(oracle);
  at buggy_45.sol(176)

[33mWarning[0m for UnrestrictedWrite in contract 'StockBet':
    |    
    |    function setInitialPrice(uint256 _value) public payable byOracle inState(State.SETUP) {
  > |        initialPrice = _value;
    |        state = State.OPEN;
    |        
  at buggy_45.sol(187)

[33mWarning[0m for UnrestrictedWrite in contract 'StockBet':
    |    function setInitialPrice(uint256 _value) public payable byOracle inState(State.SETUP) {
    |        initialPrice = _value;
  > |        state = State.OPEN;
    |        
    |        emit GameOpened(initialPrice);
  at buggy_45.sol(188)

[33mWarning[0m for UnrestrictedWrite in contract 'StockBet':
    |
    |    function closeGame() public byOwner inState(State.OPEN){
  > |        state = State.CLOSED;
    |
    |        emit GameClosed();
  at buggy_45.sol(203)

[33mWarning[0m for UnrestrictedWrite in contract 'StockBet':
    |        require(msg.value == (bet*0.001 ether));
    |
  > |        guesses[UP].guesses_number++;
    |        guesses[UP].players[msg.sender] = PaidStatus.NOT_PAID;
    |
  at buggy_45.sol(216)

[33mWarning[0m for UnrestrictedWrite in contract 'StockBet':
    |        require(msg.value == (bet*0.001 ether));
    |
  > |        guesses[DOWN].guesses_number++;
    |        guesses[DOWN].players[msg.sender] = PaidStatus.NOT_PAID;
    |        
  at buggy_45.sol(228)

[33mWarning[0m for UnrestrictedWrite in contract 'StockBet':
    |        // require(isValidNumber(_result));
    |        
  > |        finalPrice = _value;
    |        
    |        emit FinalPriceSet(finalPrice);
  at buggy_45.sol(241)

[33mWarning[0m for UnrestrictedWrite in contract 'StockBet':
    |        
    |        if(finalPrice > initialPrice){
  > |            result = UP;
    |        }else{
    |            result = DOWN;
  at buggy_45.sol(246)

[33mWarning[0m for UnrestrictedWrite in contract 'StockBet':
    |            result = UP;
    |        }else{
  > |            result = DOWN;
    |        }
    |        
  at buggy_45.sol(248)

[33mWarning[0m for UnrestrictedWrite in contract 'StockBet':
    |        
    |        if(guesses[result].guesses_number > 0){
  > |            state = State.PLAYERS_WIN;
    |            splitJackpot = getBalance()/guesses[result].guesses_number;
    |            emit PlayersWin(result, splitJackpot);
  at buggy_45.sol(253)

[33mWarning[0m for UnrestrictedWrite in contract 'StockBet':
    |        if(guesses[result].guesses_number > 0){
    |            state = State.PLAYERS_WIN;
  > |            splitJackpot = getBalance()/guesses[result].guesses_number;
    |            emit PlayersWin(result, splitJackpot);
    |        }else{
  at buggy_45.sol(254)

[33mWarning[0m for UnrestrictedWrite in contract 'StockBet':
    |            emit PlayersWin(result, splitJackpot);
    |        }else{
  > |            state = State.OWNER_WIN;
    |            emit OwnerWins(owner);
    |        }
  at buggy_45.sol(257)

