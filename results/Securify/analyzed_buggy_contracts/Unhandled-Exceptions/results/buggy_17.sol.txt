Processing contract: buggy_17.sol:AZT
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_17.sol:SafeMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_17.sol:TokenERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_17.sol:owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: buggy_17.sol:tokenRecipient
[31mViolation[0m for DAOConstantGas in contract 'AZT':
    |function sendToWinner_unchk8() public {
    |        require(!payedOut_unchk8);
  > |        winner_unchk8.send(winAmount_unchk8);
    |        payedOut_unchk8 = true;
    |    }
  at buggy_17.sol(196)

[31mViolation[0m for DAOConstantGas in contract 'AZT':
    |function sendToWinner_unchk20() public {
    |        require(!payedOut_unchk20);
  > |        winner_unchk20.send(winAmount_unchk20);
    |        payedOut_unchk20 = true;
    |    }
  at buggy_17.sol(241)

[31mViolation[0m for DAOConstantGas in contract 'AZT':
    |function sendToWinner_unchk32() public {
    |        require(!payedOut_unchk32);
  > |        winner_unchk32.send(winAmount_unchk32);
    |        payedOut_unchk32 = true;
    |    }
  at buggy_17.sol(251)

[31mViolation[0m for DAOConstantGas in contract 'AZT':
    |function sendToWinner_unchk44() public {
    |        require(!payedOut_unchk44);
  > |        winner_unchk44.send(winAmount_unchk44);
    |        payedOut_unchk44 = true;
    |    }
  at buggy_17.sol(316)

[31mViolation[0m for TODAmount in contract 'AZT':
    |function withdrawLeftOver_unchk9() public {
    |        require(payedOut_unchk9);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  mapping (address => mapping (address => uint256)) public allowance;
  at buggy_17.sol(115)

[31mViolation[0m for TODAmount in contract 'AZT':
    |function withdrawLeftOver_unchk45() public {
    |        require(payedOut_unchk45);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  event Approval(address indexed _owner, address indexed _spender, uint256 _value);
  at buggy_17.sol(130)

[31mViolation[0m for TODAmount in contract 'AZT':
    |function withdrawLeftOver_unchk33() public {
    |        require(payedOut_unchk33);
  > |        msg.sender.send(address(this).balance);
    |    }
    |
  at buggy_17.sol(348)

[33mWarning[0m for TODAmount in contract 'AZT':
    |  string public name;
    |function my_func_uncheck48(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |  string public symbol;
  at buggy_17.sol(96)

[33mWarning[0m for TODAmount in contract 'AZT':
    |  }
    |function my_func_unchk23(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |
  at buggy_17.sol(158)

[33mWarning[0m for TODAmount in contract 'AZT':
    |function sendToWinner_unchk8() public {
    |        require(!payedOut_unchk8);
  > |        winner_unchk8.send(winAmount_unchk8);
    |        payedOut_unchk8 = true;
    |    }
  at buggy_17.sol(196)

[33mWarning[0m for TODAmount in contract 'AZT':
    |function sendToWinner_unchk20() public {
    |        require(!payedOut_unchk20);
  > |        winner_unchk20.send(winAmount_unchk20);
    |        payedOut_unchk20 = true;
    |    }
  at buggy_17.sol(241)

[33mWarning[0m for TODAmount in contract 'AZT':
    |function sendToWinner_unchk32() public {
    |        require(!payedOut_unchk32);
  > |        winner_unchk32.send(winAmount_unchk32);
    |        payedOut_unchk32 = true;
    |    }
  at buggy_17.sol(251)

[33mWarning[0m for TODAmount in contract 'AZT':
    |  }
    |function my_func_uncheck36(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |
  at buggy_17.sol(287)

[33mWarning[0m for TODAmount in contract 'AZT':
    |  }
    |function my_func_unchk35(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |
  at buggy_17.sol(298)

[33mWarning[0m for TODAmount in contract 'AZT':
    |function sendToWinner_unchk44() public {
    |        require(!payedOut_unchk44);
  > |        winner_unchk44.send(winAmount_unchk44);
    |        payedOut_unchk44 = true;
    |    }
  at buggy_17.sol(316)

[31mViolation[0m for TODReceiver in contract 'AZT':
    |function sendToWinner_unchk8() public {
    |        require(!payedOut_unchk8);
  > |        winner_unchk8.send(winAmount_unchk8);
    |        payedOut_unchk8 = true;
    |    }
  at buggy_17.sol(196)

[31mViolation[0m for TODReceiver in contract 'AZT':
    |function sendToWinner_unchk20() public {
    |        require(!payedOut_unchk20);
  > |        winner_unchk20.send(winAmount_unchk20);
    |        payedOut_unchk20 = true;
    |    }
  at buggy_17.sol(241)

[31mViolation[0m for TODReceiver in contract 'AZT':
    |function sendToWinner_unchk32() public {
    |        require(!payedOut_unchk32);
  > |        winner_unchk32.send(winAmount_unchk32);
    |        payedOut_unchk32 = true;
    |    }
  at buggy_17.sol(251)

[31mViolation[0m for TODReceiver in contract 'AZT':
    |function sendToWinner_unchk44() public {
    |        require(!payedOut_unchk44);
  > |        winner_unchk44.send(winAmount_unchk44);
    |        payedOut_unchk44 = true;
    |    }
  at buggy_17.sol(316)

[31mViolation[0m for UnhandledException in contract 'AZT':
    |contract owned {
    |function unhandledsend_unchk2(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |  address public owner;
  at buggy_17.sol(50)

[31mViolation[0m for UnhandledException in contract 'AZT':
    |function cash_unchk46(uint roundIndex, uint subpotIndex, address payable winner_unchk46) public{
    |        uint64 subpot_unchk46 = 3 ether;
  > |        winner_unchk46.send(subpot_unchk46);  //bug
    |        subpot_unchk46= 0;
    |}
  at buggy_17.sol(59)

[31mViolation[0m for UnhandledException in contract 'AZT':
    |  string public name;
    |function my_func_uncheck48(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |  string public symbol;
  at buggy_17.sol(96)

[31mViolation[0m for UnhandledException in contract 'AZT':
    |function withdrawBal_unchk17 () public{
    |	uint64 Balances_unchk17 = 0;
  > |	msg.sender.send(Balances_unchk17);}
    |  uint8 public decimals;
    |function callnotchecked_unchk37(address payable callee) public {
  at buggy_17.sol(101)

[31mViolation[0m for UnhandledException in contract 'AZT':
    |
    |function bug_unchk3(address payable addr) public
  > |      {addr.send (42 ether); }
    |  mapping (address => uint256) public balanceOf;
    |bool public payedOut_unchk9 = false;
  at buggy_17.sol(109)

[31mViolation[0m for UnhandledException in contract 'AZT':
    |function withdrawLeftOver_unchk9() public {
    |        require(payedOut_unchk9);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  mapping (address => mapping (address => uint256)) public allowance;
  at buggy_17.sol(115)

[31mViolation[0m for UnhandledException in contract 'AZT':
    |function withdrawLeftOver_unchk45() public {
    |        require(payedOut_unchk45);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  event Approval(address indexed _owner, address indexed _spender, uint256 _value);
  at buggy_17.sol(130)

[31mViolation[0m for UnhandledException in contract 'AZT':
    |  }
    |function my_func_unchk23(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |
  at buggy_17.sol(158)

[31mViolation[0m for UnhandledException in contract 'AZT':
    |  }
    |function unhandledsend_unchk14(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |
  at buggy_17.sol(166)

[31mViolation[0m for UnhandledException in contract 'AZT':
    |function sendToWinner_unchk8() public {
    |        require(!payedOut_unchk8);
  > |        winner_unchk8.send(winAmount_unchk8);
    |        payedOut_unchk8 = true;
    |    }
  at buggy_17.sol(196)

[31mViolation[0m for UnhandledException in contract 'AZT':
    |  }
    |function bug_unchk39(address payable addr) public
  > |      {addr.send (4 ether); }
    |
    |}
  at buggy_17.sol(209)

[31mViolation[0m for UnhandledException in contract 'AZT':
    |	string _tokenSymbol = "AZT";
    |function unhandledsend_unchk26(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |  uint8 _decimals = 18;
  at buggy_17.sol(231)

[31mViolation[0m for UnhandledException in contract 'AZT':
    |function sendToWinner_unchk20() public {
    |        require(!payedOut_unchk20);
  > |        winner_unchk20.send(winAmount_unchk20);
    |        payedOut_unchk20 = true;
    |    }
  at buggy_17.sol(241)

[31mViolation[0m for UnhandledException in contract 'AZT':
    |function sendToWinner_unchk32() public {
    |        require(!payedOut_unchk32);
  > |        winner_unchk32.send(winAmount_unchk32);
    |        payedOut_unchk32 = true;
    |    }
  at buggy_17.sol(251)

[31mViolation[0m for UnhandledException in contract 'AZT':
    |
    |function unhandledsend_unchk38(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |  mapping (address => frozenWallet) public frozenWallets;
  at buggy_17.sol(264)

[31mViolation[0m for UnhandledException in contract 'AZT':
    |  }
    |function my_func_uncheck36(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |
  at buggy_17.sol(287)

[31mViolation[0m for UnhandledException in contract 'AZT':
    |  }
    |function my_func_unchk35(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |
  at buggy_17.sol(298)

[31mViolation[0m for UnhandledException in contract 'AZT':
    |function sendToWinner_unchk44() public {
    |        require(!payedOut_unchk44);
  > |        winner_unchk44.send(winAmount_unchk44);
    |        payedOut_unchk44 = true;
    |    }
  at buggy_17.sol(316)

[31mViolation[0m for UnhandledException in contract 'AZT':
    |function withdrawLeftOver_unchk33() public {
    |        require(payedOut_unchk33);
  > |        msg.sender.send(address(this).balance);
    |    }
    |
  at buggy_17.sol(348)

[31mViolation[0m for UnhandledException in contract 'AZT':
    |  }
    |function bug_unchk27(address payable addr) public
  > |      {addr.send (42 ether); }
    |}
  at buggy_17.sol(355)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |contract owned {
    |function unhandledsend_unchk2(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |  address public owner;
  at buggy_17.sol(50)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |function cash_unchk46(uint roundIndex, uint subpotIndex, address payable winner_unchk46) public{
    |        uint64 subpot_unchk46 = 3 ether;
  > |        winner_unchk46.send(subpot_unchk46);  //bug
    |        subpot_unchk46= 0;
    |}
  at buggy_17.sol(59)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |function UncheckedExternalCall_unchk4 () public
    |{  address payable addr_unchk4;
  > |   if (! addr_unchk4.send (42 ether))  
    |      {// comment1;
    |      }
  at buggy_17.sol(73)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |function bug_unchk43() public{
    |address payable addr_unchk43;
  > |if (!addr_unchk43.send (10 ether) || 1==1)
    |	{revert();}
    |}
  at buggy_17.sol(91)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |  string public name;
    |function my_func_uncheck48(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |  string public symbol;
  at buggy_17.sol(96)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |
    |function bug_unchk3(address payable addr) public
  > |      {addr.send (42 ether); }
    |  mapping (address => uint256) public balanceOf;
    |bool public payedOut_unchk9 = false;
  at buggy_17.sol(109)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |function withdrawLeftOver_unchk9() public {
    |        require(payedOut_unchk9);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  mapping (address => mapping (address => uint256)) public allowance;
  at buggy_17.sol(115)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |function bug_unchk31() public{
    |address payable addr_unchk31;
  > |if (!addr_unchk31.send (10 ether) || 1==1)
    |	{revert();}
    |}
  at buggy_17.sol(121)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |function withdrawLeftOver_unchk45() public {
    |        require(payedOut_unchk45);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  event Approval(address indexed _owner, address indexed _spender, uint256 _value);
  at buggy_17.sol(130)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |function bug_unchk7() public{
    |address payable addr_unchk7;
  > |if (!addr_unchk7.send (10 ether) || 1==1)
    |	{revert();}
    |}
  at buggy_17.sol(147)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |  }
    |function my_func_unchk23(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |
  at buggy_17.sol(158)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |  }
    |function unhandledsend_unchk14(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |
  at buggy_17.sol(166)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |uint receivers_unchk30;
    |address payable addr_unchk30;
  > |if (!addr_unchk30.send(42 ether))
    |	{receivers_unchk30 +=1;}
    |else
  at buggy_17.sol(178)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |function sendToWinner_unchk8() public {
    |        require(!payedOut_unchk8);
  > |        winner_unchk8.send(winAmount_unchk8);
    |        payedOut_unchk8 = true;
    |    }
  at buggy_17.sol(196)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |  }
    |function bug_unchk39(address payable addr) public
  > |      {addr.send (4 ether); }
    |
    |}
  at buggy_17.sol(209)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |	string _tokenName = "AZ FundChain";  function bug_unchk19() public{
    |address payable addr_unchk19;
  > |if (!addr_unchk19.send (10 ether) || 1==1)
    |	{revert();}
    |}
  at buggy_17.sol(225)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |	string _tokenSymbol = "AZT";
    |function unhandledsend_unchk26(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |  uint8 _decimals = 18;
  at buggy_17.sol(231)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |function sendToWinner_unchk20() public {
    |        require(!payedOut_unchk20);
  > |        winner_unchk20.send(winAmount_unchk20);
    |        payedOut_unchk20 = true;
    |    }
  at buggy_17.sol(241)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |function sendToWinner_unchk32() public {
    |        require(!payedOut_unchk32);
  > |        winner_unchk32.send(winAmount_unchk32);
    |        payedOut_unchk32 = true;
    |    }
  at buggy_17.sol(251)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |
    |function unhandledsend_unchk38(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |  mapping (address => frozenWallet) public frozenWallets;
  at buggy_17.sol(264)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |  }
    |function my_func_uncheck36(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |
  at buggy_17.sol(287)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |  }
    |function my_func_unchk35(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |
  at buggy_17.sol(298)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |function sendToWinner_unchk44() public {
    |        require(!payedOut_unchk44);
  > |        winner_unchk44.send(winAmount_unchk44);
    |        payedOut_unchk44 = true;
    |    }
  at buggy_17.sol(316)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |function UncheckedExternalCall_unchk40 () public
    |{  address payable addr_unchk40;
  > |   if (! addr_unchk40.send (2 ether))  
    |      {// comment1;
    |      }
  at buggy_17.sol(329)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |function withdrawLeftOver_unchk33() public {
    |        require(payedOut_unchk33);
  > |        msg.sender.send(address(this).balance);
    |    }
    |
  at buggy_17.sol(348)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'AZT':
    |  }
    |function bug_unchk27(address payable addr) public
  > |      {addr.send (42 ether); }
    |}
  at buggy_17.sol(355)

[33mWarning[0m for UnrestrictedWrite in contract 'AZT':
    |        require(!payedOut_unchk8);
    |        winner_unchk8.send(winAmount_unchk8);
  > |        payedOut_unchk8 = true;
    |    }
    |
  at buggy_17.sol(197)

[33mWarning[0m for UnrestrictedWrite in contract 'AZT':
    |        require(!payedOut_unchk20);
    |        winner_unchk20.send(winAmount_unchk20);
  > |        payedOut_unchk20 = true;
    |    }
    |  address[] public frozenAddresses;
  at buggy_17.sol(242)

[33mWarning[0m for UnrestrictedWrite in contract 'AZT':
    |        require(!payedOut_unchk32);
    |        winner_unchk32.send(winAmount_unchk32);
  > |        payedOut_unchk32 = true;
    |    }
    |  bool public tokenFrozen;
  at buggy_17.sol(252)

[33mWarning[0m for UnrestrictedWrite in contract 'AZT':
    |        require(!payedOut_unchk44);
    |        winner_unchk44.send(winAmount_unchk44);
  > |        payedOut_unchk44 = true;
    |    }
    |
  at buggy_17.sol(317)

[31mViolation[0m for DAOConstantGas in contract 'TokenERC20':
    |function sendToWinner_unchk8() public {
    |        require(!payedOut_unchk8);
  > |        winner_unchk8.send(winAmount_unchk8);
    |        payedOut_unchk8 = true;
    |    }
  at buggy_17.sol(196)

[31mViolation[0m for TODAmount in contract 'TokenERC20':
    |function withdrawLeftOver_unchk9() public {
    |        require(payedOut_unchk9);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  mapping (address => mapping (address => uint256)) public allowance;
  at buggy_17.sol(115)

[31mViolation[0m for TODAmount in contract 'TokenERC20':
    |function withdrawLeftOver_unchk45() public {
    |        require(payedOut_unchk45);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  event Approval(address indexed _owner, address indexed _spender, uint256 _value);
  at buggy_17.sol(130)

[33mWarning[0m for TODAmount in contract 'TokenERC20':
    |  string public name;
    |function my_func_uncheck48(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |  string public symbol;
  at buggy_17.sol(96)

[33mWarning[0m for TODAmount in contract 'TokenERC20':
    |  }
    |function my_func_unchk23(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |
  at buggy_17.sol(158)

[31mViolation[0m for TODReceiver in contract 'TokenERC20':
    |function sendToWinner_unchk8() public {
    |        require(!payedOut_unchk8);
  > |        winner_unchk8.send(winAmount_unchk8);
    |        payedOut_unchk8 = true;
    |    }
  at buggy_17.sol(196)

[31mViolation[0m for UnhandledException in contract 'TokenERC20':
    |  string public name;
    |function my_func_uncheck48(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |  string public symbol;
  at buggy_17.sol(96)

[31mViolation[0m for UnhandledException in contract 'TokenERC20':
    |function withdrawBal_unchk17 () public{
    |	uint64 Balances_unchk17 = 0;
  > |	msg.sender.send(Balances_unchk17);}
    |  uint8 public decimals;
    |function callnotchecked_unchk37(address payable callee) public {
  at buggy_17.sol(101)

[31mViolation[0m for UnhandledException in contract 'TokenERC20':
    |
    |function bug_unchk3(address payable addr) public
  > |      {addr.send (42 ether); }
    |  mapping (address => uint256) public balanceOf;
    |bool public payedOut_unchk9 = false;
  at buggy_17.sol(109)

[31mViolation[0m for UnhandledException in contract 'TokenERC20':
    |function withdrawLeftOver_unchk9() public {
    |        require(payedOut_unchk9);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  mapping (address => mapping (address => uint256)) public allowance;
  at buggy_17.sol(115)

[31mViolation[0m for UnhandledException in contract 'TokenERC20':
    |function withdrawLeftOver_unchk45() public {
    |        require(payedOut_unchk45);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  event Approval(address indexed _owner, address indexed _spender, uint256 _value);
  at buggy_17.sol(130)

[31mViolation[0m for UnhandledException in contract 'TokenERC20':
    |  }
    |function my_func_unchk23(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |
  at buggy_17.sol(158)

[31mViolation[0m for UnhandledException in contract 'TokenERC20':
    |  }
    |function unhandledsend_unchk14(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |
  at buggy_17.sol(166)

[31mViolation[0m for UnhandledException in contract 'TokenERC20':
    |function sendToWinner_unchk8() public {
    |        require(!payedOut_unchk8);
  > |        winner_unchk8.send(winAmount_unchk8);
    |        payedOut_unchk8 = true;
    |    }
  at buggy_17.sol(196)

[31mViolation[0m for UnhandledException in contract 'TokenERC20':
    |  }
    |function bug_unchk39(address payable addr) public
  > |      {addr.send (4 ether); }
    |
    |}
  at buggy_17.sol(209)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |
    |function bug_unchk3(address payable addr) public
  > |      {addr.send (42 ether); }
    |  mapping (address => uint256) public balanceOf;
    |bool public payedOut_unchk9 = false;
  at buggy_17.sol(109)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |  }
    |function unhandledsend_unchk14(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |
  at buggy_17.sol(166)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |uint receivers_unchk30;
    |address payable addr_unchk30;
  > |if (!addr_unchk30.send(42 ether))
    |	{receivers_unchk30 +=1;}
    |else
  at buggy_17.sol(178)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |  }
    |function bug_unchk39(address payable addr) public
  > |      {addr.send (4 ether); }
    |
    |}
  at buggy_17.sol(209)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |function bug_unchk43() public{
    |address payable addr_unchk43;
  > |if (!addr_unchk43.send (10 ether) || 1==1)
    |	{revert();}
    |}
  at buggy_17.sol(91)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |  string public name;
    |function my_func_uncheck48(address payable dst) public payable{
  > |        dst.call.value(msg.value)("");
    |    }
    |  string public symbol;
  at buggy_17.sol(96)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |function withdrawLeftOver_unchk9() public {
    |        require(payedOut_unchk9);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  mapping (address => mapping (address => uint256)) public allowance;
  at buggy_17.sol(115)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |function bug_unchk31() public{
    |address payable addr_unchk31;
  > |if (!addr_unchk31.send (10 ether) || 1==1)
    |	{revert();}
    |}
  at buggy_17.sol(121)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |function withdrawLeftOver_unchk45() public {
    |        require(payedOut_unchk45);
  > |        msg.sender.send(address(this).balance);
    |    }
    |  event Approval(address indexed _owner, address indexed _spender, uint256 _value);
  at buggy_17.sol(130)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |function bug_unchk7() public{
    |address payable addr_unchk7;
  > |if (!addr_unchk7.send (10 ether) || 1==1)
    |	{revert();}
    |}
  at buggy_17.sol(147)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |  }
    |function my_func_unchk23(address payable dst) public payable{
  > |        dst.send(msg.value);
    |    }
    |
  at buggy_17.sol(158)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'TokenERC20':
    |function sendToWinner_unchk8() public {
    |        require(!payedOut_unchk8);
  > |        winner_unchk8.send(winAmount_unchk8);
    |        payedOut_unchk8 = true;
    |    }
  at buggy_17.sol(196)

[31mViolation[0m for UnrestrictedWrite in contract 'TokenERC20':
    |        require(!payedOut_unchk8);
    |        winner_unchk8.send(winAmount_unchk8);
  > |        payedOut_unchk8 = true;
    |    }
    |
  at buggy_17.sol(197)

[31mViolation[0m for MissingInputValidation in contract 'owned':
    |
    |contract owned {
  > |function unhandledsend_unchk2(address payable callee) public {
    |    callee.send(5 ether);
    |  }
  at buggy_17.sol(49)

[31mViolation[0m for MissingInputValidation in contract 'owned':
    |    owner = msg.sender;
    |  }
  > |function cash_unchk46(uint roundIndex, uint subpotIndex, address payable winner_unchk46) public{
    |        uint64 subpot_unchk46 = 3 ether;
    |        winner_unchk46.send(subpot_unchk46);  //bug
  at buggy_17.sol(57)

[31mViolation[0m for MissingInputValidation in contract 'owned':
    |  }
    |
  > |  function transferOwnership(address newOwner) onlyOwner public {
    |    owner = newOwner;
    |  }
  at buggy_17.sol(68)

[31mViolation[0m for UnhandledException in contract 'owned':
    |contract owned {
    |function unhandledsend_unchk2(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |  address public owner;
  at buggy_17.sol(50)

[31mViolation[0m for UnhandledException in contract 'owned':
    |function cash_unchk46(uint roundIndex, uint subpotIndex, address payable winner_unchk46) public{
    |        uint64 subpot_unchk46 = 3 ether;
  > |        winner_unchk46.send(subpot_unchk46);  //bug
    |        subpot_unchk46= 0;
    |}
  at buggy_17.sol(59)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'owned':
    |contract owned {
    |function unhandledsend_unchk2(address payable callee) public {
  > |    callee.send(5 ether);
    |  }
    |  address public owner;
  at buggy_17.sol(50)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'owned':
    |function cash_unchk46(uint roundIndex, uint subpotIndex, address payable winner_unchk46) public{
    |        uint64 subpot_unchk46 = 3 ether;
  > |        winner_unchk46.send(subpot_unchk46);  //bug
    |        subpot_unchk46= 0;
    |}
  at buggy_17.sol(59)

[31mViolation[0m for UnrestrictedEtherFlow in contract 'owned':
    |function UncheckedExternalCall_unchk4 () public
    |{  address payable addr_unchk4;
  > |   if (! addr_unchk4.send (42 ether))  
    |      {// comment1;
    |      }
  at buggy_17.sol(73)

[33mWarning[0m for UnrestrictedWrite in contract 'owned':
    |
    |  function transferOwnership(address newOwner) onlyOwner public {
  > |    owner = newOwner;
    |  }
    |function UncheckedExternalCall_unchk4 () public
  at buggy_17.sol(69)

