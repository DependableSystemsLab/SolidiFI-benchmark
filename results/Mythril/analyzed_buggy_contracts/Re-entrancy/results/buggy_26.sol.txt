==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: UBBCToken
Function name: callme_re_ent35()
PC address: 2625
Estimated Gas Usage: 6886 - 61167
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_26.sol:281

msg.sender.send(10 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x20, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x421010c0542000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x10000180000001000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: callme_re_ent35(), txdata: 0x1578e01e, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: UBBCToken
Function name: callme_re_ent14()
PC address: 2740
Estimated Gas Usage: 6841 - 61122
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_26.sol:221

msg.sender.send(10 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x421400c0142001ea6, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x16bc75e2d630fffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: callme_re_ent14(), txdata: 0x1abf48c0, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: UBBCToken
Function name: withdraw_balances_re_ent36()
PC address: 4051
Estimated Gas Usage: 1473 - 35944
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_26.sol:270

msg.sender.send(balances_re_ent36[msg.sender ])

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000008, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x4820540094445, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: withdraw_balances_re_ent36(), txdata: 0x54611e35, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: UBBCToken
Function name: withdrawBalance_re_ent40()
PC address: 4244
Estimated Gas Usage: 6640 - 61301
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: buggy_26.sol:299

msg.sender.call.value(userBalance_re_ent40[msg.sender])("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x56bc75e2d630fffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawBalance_re_ent40(), txdata: 0x6cfd7721, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: UBBCToken
Function name: withdrawBalance_re_ent40()
PC address: 4379
Estimated Gas Usage: 6640 - 61301
Persistent state write after call
The contract account state is changed after an external call to a user defined address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_26.sol:303

userBalance_re_ent40[msg.sender] = 0

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawBalance_re_ent40(), txdata: 0x6cfd7721, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: UBBCToken
Function name: withdrawBalance_re_ent26()
PC address: 5428
Estimated Gas Usage: 6641 - 61302
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: buggy_26.sol:114

msg.sender.call.value(userBalance_re_ent26[msg.sender])("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x80000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x56bc75e2d630fffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawBalance_re_ent26(), txdata: 0x8f94454c, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: UBBCToken
Function name: withdrawBalance_re_ent26()
PC address: 5563
Estimated Gas Usage: 6641 - 61302
Persistent state write after call
The contract account state is changed after an external call to a user defined address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_26.sol:118

userBalance_re_ent26[msg.sender] = 0

--------------------
Initial State:

Account: [CREATOR], balance: 0xc0100020000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x3, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawBalance_re_ent26(), txdata: 0x8f94454c, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: UBBCToken
Function name: bug_re_ent27()
PC address: 5648
Estimated Gas Usage: 6946 - 61887
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_26.sol:328

msg.sender.send(1 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x421010c0540098ffe, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x20015a2920000800, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_re_ent27(), txdata: 0x9128b348, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: UBBCToken
Function name: withdraw_balances_re_ent8()
PC address: 6469
Estimated Gas Usage: 1562 - 36033
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: buggy_26.sol:245

msg.sender.call.value(balances_re_ent8[msg.sender ])("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1000000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x56bc75e2d630fffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdraw_balances_re_ent8(), txdata: 0xa2bcc8c5, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: UBBCToken
Function name: withdraw_balances_re_ent8()
PC address: 6469
Estimated Gas Usage: 1635 - 36389
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_26.sol:245

msg.sender.call.value(balances_re_ent8[msg.sender ])("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: withdraw_balances_re_ent8(), txdata: 0xa2bcc8c5, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: UBBCToken
Function name: withdraw_balances_re_ent8()
PC address: 6600
Estimated Gas Usage: 1635 - 36389
Persistent state write after call
The contract account state is changed after an external call to a user defined address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_26.sol:247

balances_re_ent8[msg.sender] = 0

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000002000080, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdraw_balances_re_ent8(), txdata: 0xa2bcc8c5, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: UBBCToken
Function name: bug_re_ent13()
PC address: 6686
Estimated Gas Usage: 7085 - 62309
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: buggy_26.sol:148

msg.sender.call.value(1 ether)("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x2bc75e2d630fffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_re_ent13(), txdata: 0xa328c11f, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: UBBCToken
Function name: bug_re_ent13()
PC address: 6686
Estimated Gas Usage: 7012 - 61953
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_26.sol:148

msg.sender.call.value(1 ether)("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x42001080440080000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x2005100000000000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_re_ent13(), txdata: 0xa328c11f, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: UBBCToken
Function name: bug_re_ent13()
PC address: 6765
Estimated Gas Usage: 7012 - 61953
Persistent state read after call
The contract account state is changed after an external call to a user defined address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_26.sol:152

not_called_re_ent13 = false

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x2bc15e2563040001, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_re_ent13(), txdata: 0xa328c11f, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: UBBCToken
Function name: bug_re_ent13()
PC address: 6779
Estimated Gas Usage: 7012 - 61953
Persistent state write after call
The contract account state is changed after an external call to a user defined address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_26.sol:152

not_called_re_ent13 = false

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x2bc15e2563040001, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_re_ent13(), txdata: 0xa328c11f, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: UBBCToken
Function name: withdrawFunds_re_ent3(uint256)
PC address: 7072
Estimated Gas Usage: 7169 - 61830
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: buggy_26.sol:76

msg.sender.call.value(_weiToWithdraw)("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x80, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x56bc75e2ce30fffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawFunds_re_ent3(uint256), txdata: 0xa4e80ee00000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: UBBCToken
Function name: withdrawFunds_re_ent3(uint256)
PC address: 7208
Estimated Gas Usage: 7242 - 62186
Persistent state read after call
The contract account state is changed after an external call to a user defined address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_26.sol:78

balances_re_ent3[msg.sender] -= _weiToWithdraw

--------------------
Initial State:

Account: [CREATOR], balance: 0x2080000000008800, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x4, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawFunds_re_ent3(uint256), txdata: 0xa4e80ee00000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: UBBCToken
Function name: withdrawFunds_re_ent3(uint256)
PC address: 7215
Estimated Gas Usage: 7169 - 61830
Persistent state write after call
The contract account state is changed after an external call to a user defined address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_26.sol:78

balances_re_ent3[msg.sender] -= _weiToWithdraw

--------------------
Initial State:

Account: [CREATOR], balance: 0x40, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawFunds_re_ent3(uint256), txdata: 0xa4e80ee00000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Low
Contract: UBBCToken
Function name: buyTicket_re_ent9()
PC address: 7405
Estimated Gas Usage: 12887 - 88111
Persistent state read after call
The contract account state is changed after an external call to a fixed address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_26.sol:87

lastPlayer_re_ent9 = msg.sender

--------------------
Initial State:

Account: [CREATOR], balance: 0x21c1000002002c02, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: buyTicket_re_ent9(), txdata: 0xacc0544f, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Low
Contract: UBBCToken
Function name: buyTicket_re_ent9()
PC address: 7458
Estimated Gas Usage: 12814 - 87755
Persistent state write after call
The contract account state is changed after an external call to a fixed address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_26.sol:87

lastPlayer_re_ent9 = msg.sender

--------------------
Initial State:

Account: [CREATOR], balance: 0x21c1000002003e12, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: buyTicket_re_ent9(), txdata: 0xacc0544f, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Low
Contract: UBBCToken
Function name: buyTicket_re_ent9()
PC address: 7488
Estimated Gas Usage: 12814 - 87755
Persistent state write after call
The contract account state is changed after an external call to a fixed address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_26.sol:88

jackpot_re_ent9    = address(this).balance

--------------------
Initial State:

Account: [CREATOR], balance: 0x21c1000002003e12, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: buyTicket_re_ent9(), txdata: 0xacc0544f, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: UBBCToken
Function name: withdrawBalance_re_ent33()
PC address: 7603
Estimated Gas Usage: 6617 - 61278
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: buggy_26.sol:316

msg.sender.call.value(userBalance_re_ent33[msg.sender])("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x20, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x56bc75e2d630fffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawBalance_re_ent33(), txdata: 0xc6604ad7, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: UBBCToken
Function name: withdrawBalance_re_ent33()
PC address: 7738
Estimated Gas Usage: 6617 - 61278
Persistent state write after call
The contract account state is changed after an external call to a user defined address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_26.sol:320

userBalance_re_ent33[msg.sender] = 0

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawBalance_re_ent33(), txdata: 0xc6604ad7, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: UBBCToken
Function name: bug_re_ent20()
PC address: 7823
Estimated Gas Usage: 6922 - 61863
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_26.sol:131

msg.sender.send(1 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x42001080402080000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x2bc75e2d630fffbf, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_re_ent20(), txdata: 0xd8fa982f, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: UBBCToken
Function name: callme_re_ent7()
PC address: 8268
Estimated Gas Usage: 6927 - 61208
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_26.sol:196

msg.sender.send(10 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x20, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x421000c0142000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x10000182160000000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: callme_re_ent7(), txdata: 0xfef28f0b, value: 0x0


