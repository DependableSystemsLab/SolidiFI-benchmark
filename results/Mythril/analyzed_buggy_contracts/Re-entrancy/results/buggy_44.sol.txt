==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: EventMetadata
Function name: withdrawBalance_re_ent40()
PC address: 189
Estimated Gas Usage: 6624 - 61568
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: buggy_44.sol:14

msg.sender.call.value(userBalance_re_ent40[msg.sender])("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x420010804420bffff, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x2000000000000000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_re_ent41(), txdata: 0xf9a1f3d9, value: 0x0
Caller: [ATTACKER], function: withdrawBalance_re_ent40(), txdata: 0x6cfd7721, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: EventMetadata
Function name: withdrawBalance_re_ent40()
PC address: 189
Estimated Gas Usage: 6551 - 61212
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_44.sol:14

msg.sender.call.value(userBalance_re_ent40[msg.sender])("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x498, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x9014000808100000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x28435c2402000102, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_re_ent41(), txdata: 0xf9a1f3d9, value: 0x0
Caller: [ATTACKER], function: withdrawBalance_re_ent40(), txdata: 0x6cfd7721, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ProofHashes
Function name: bug_re_ent27()
PC address: 237
Estimated Gas Usage: 6834 - 61775
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_44.sol:209

msg.sender.send(1 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x20, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x420010804420c0000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x2bc75e2d63078c5a, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_re_ent27(), txdata: 0x9128b348, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: EventMetadata
Function name: withdrawBalance_re_ent40()
PC address: 323
Estimated Gas Usage: 6551 - 61212
Persistent state write after call
The contract account state is changed after an external call to a user defined address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_44.sol:18

userBalance_re_ent40[msg.sender] = 0

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawBalance_re_ent40(), txdata: 0x6cfd7721, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: EventMetadata
Function name: bug_re_ent41()
PC address: 408
Estimated Gas Usage: 6856 - 61797
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_44.sol:30

msg.sender.send(1 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x42001080440080000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x22c75e2d63074497, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_re_ent41(), txdata: 0xf9a1f3d9, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ProofHashes
Function name: withdrawFunds_re_ent31(uint256)
PC address: 690
Estimated Gas Usage: 7079 - 61740
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_44.sol:219

msg.sender.send(_weiToWithdraw)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2002464, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x10000003800000242, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x2918bdb5e8000490, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_re_ent20(), txdata: 0xd8fa982f, value: 0x0
Caller: [ATTACKER], function: withdrawFunds_re_ent31(uint256), txdata: 0xa112c6150000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: Template
Function name: callme_re_ent14()
PC address: 706
Estimated Gas Usage: 6818 - 61099
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_44.sol:415

msg.sender.send(10 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x421410c0542069000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x16b875e2d610ebfde, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: callme_re_ent14(), txdata: 0x1abf48c0, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: Operated
Function name: callme_re_ent42()
PC address: 816
Estimated Gas Usage: 6819 - 61100
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_44.sol:83

msg.sender.send(10 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x421010c0142000100, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x10007400043042040, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: callme_re_ent42(), txdata: 0x0f7219b0, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: Template
Function name: buyTicket_re_ent23()
PC address: 823
Estimated Gas Usage: 12703 - 87644
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_44.sol:403

lastPlayer_re_ent23.send(jackpot_re_ent23)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000000000081, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x10000000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x503060b3f0102cd97, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: buyTicket_re_ent23(), txdata: 0x501ea27d, value: 0x0
Caller: [ATTACKER], function: buyTicket_re_ent23(), txdata: 0x501ea27d, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ProofHashes
Function name: bug_re_ent20()
PC address: 865
Estimated Gas Usage: 6900 - 61841
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_44.sol:233

msg.sender.send(1 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x20, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x42001080440080000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x2bc75e2c630b2fbf, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_re_ent20(), txdata: 0xd8fa982f, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: Template
Function name: withdraw_balances_re_ent1()
PC address: 1149
Estimated Gas Usage: 1590 - 36344
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: buggy_44.sol:363

msg.sender.call.value(balances_re_ent1[msg.sender ])("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x421000c09420dfdef, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x2f8c100040027fffb, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: callme_re_ent7(), txdata: 0xfef28f0b, value: 0x0
Caller: [ATTACKER], function: withdraw_balances_re_ent1(), txdata: 0xf0b6e306, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: Template
Function name: withdraw_balances_re_ent1()
PC address: 1149
Estimated Gas Usage: 1590 - 36344
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_44.sol:363

msg.sender.call.value(balances_re_ent1[msg.sender ])("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdraw_balances_re_ent1(), txdata: 0xf0b6e306, value: 0x0
Caller: [CREATOR], function: withdraw_balances_re_ent1(), txdata: 0xf0b6e306, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: Template
Function name: withdraw_balances_re_ent1()
PC address: 1149
Estimated Gas Usage: 1517 - 35988
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_44.sol:363

msg.sender.call.value(balances_re_ent1[msg.sender ])("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1002001821c0002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x408d001000000262d, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: callme_re_ent7(), txdata: 0xfef28f0b, value: 0x0
Caller: [ATTACKER], function: withdraw_balances_re_ent1(), txdata: 0xf0b6e306, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: Template
Function name: withdraw_balances_re_ent1()
PC address: 1279
Estimated Gas Usage: 1590 - 36344
Persistent state write after call
The contract account state is changed after an external call to a user defined address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_44.sol:365

balances_re_ent1[msg.sender] = 0

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdraw_balances_re_ent1(), txdata: 0xf0b6e306, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: Template
Function name: callme_re_ent7()
PC address: 1356
Estimated Gas Usage: 6861 - 61142
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_44.sol:391

msg.sender.send(10 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x421000c0142000c00, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x16bc75e2d6307ffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: callme_re_ent7(), txdata: 0xfef28f0b, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: Operated
Function name: withdrawFunds_re_ent17(uint256)
PC address: 1942
Estimated Gas Usage: 7191 - 61852
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: buggy_44.sol:113

msg.sender.call.value(_weiToWithdraw)("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x56bc75e2d630fffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawFunds_re_ent17(uint256), txdata: 0x8d18e1e80000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: Operated
Function name: withdrawFunds_re_ent17(uint256)
PC address: 2078
Estimated Gas Usage: 7264 - 62208
Persistent state read after call
The contract account state is changed after an external call to a user defined address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_44.sol:115

balances_re_ent17[msg.sender] -= _weiToWithdraw

--------------------
Initial State:

Account: [CREATOR], balance: 0x2004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x80001000000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawFunds_re_ent17(uint256), txdata: 0x8d18e1e80000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: Operated
Function name: withdrawFunds_re_ent17(uint256)
PC address: 2085
Estimated Gas Usage: 7191 - 61852
Persistent state write after call
The contract account state is changed after an external call to a user defined address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_44.sol:115

balances_re_ent17[msg.sender] -= _weiToWithdraw

--------------------
Initial State:

Account: [CREATOR], balance: 0x30581, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x4004000040002800, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawFunds_re_ent17(uint256), txdata: 0x8d18e1e80000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: Operated
Function name: withdrawBalance_re_ent26()
PC address: 2201
Estimated Gas Usage: 6596 - 61257
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: buggy_44.sol:193

msg.sender.call.value(userBalance_re_ent26[msg.sender])("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawBalance_re_ent26(), txdata: 0x8f94454c, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: Operated
Function name: withdrawBalance_re_ent26()
PC address: 2336
Estimated Gas Usage: 6596 - 61257
Persistent state write after call
The contract account state is changed after an external call to a user defined address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_44.sol:197

userBalance_re_ent26[msg.sender] = 0

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawBalance_re_ent26(), txdata: 0x8f94454c, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: Operated
Function name: withdrawFunds_re_ent3(uint256)
PC address: 2487
Estimated Gas Usage: 7169 - 61830
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: buggy_44.sol:141

msg.sender.call.value(_weiToWithdraw)("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x56bc75e2d630fdfff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawFunds_re_ent3(uint256), txdata: 0xa4e80ee00000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: Operated
Function name: withdrawFunds_re_ent3(uint256)
PC address: 2623
Estimated Gas Usage: 7242 - 62186
Persistent state read after call
The contract account state is changed after an external call to a user defined address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_44.sol:143

balances_re_ent3[msg.sender] -= _weiToWithdraw

--------------------
Initial State:

Account: [CREATOR], balance: 0x42008, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x82001000000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawFunds_re_ent3(uint256), txdata: 0xa4e80ee00000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: Operated
Function name: withdrawFunds_re_ent3(uint256)
PC address: 2630
Estimated Gas Usage: 7169 - 61830
Persistent state write after call
The contract account state is changed after an external call to a user defined address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_44.sol:143

balances_re_ent3[msg.sender] -= _weiToWithdraw

--------------------
Initial State:

Account: [CREATOR], balance: 0x400011080, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x4000003000800, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawFunds_re_ent3(uint256), txdata: 0xa4e80ee00000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: Feed
Function name: callme_re_ent42()
PC address: 2716
Estimated Gas Usage: 6886 - 61167
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_44.sol:83

msg.sender.send(10 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x421000c0142080000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x16b875e2d600a5d5f, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: callme_re_ent42(), txdata: 0x0f7219b0, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: Feed
Function name: callme_re_ent35()
PC address: 2821
Estimated Gas Usage: 6908 - 61189
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_44.sol:537

msg.sender.send(10 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x421010c0542000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x16bc75e2d630feffb, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: callme_re_ent35(), txdata: 0x1578e01e, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: Feed
Function name: callme_re_ent14()
PC address: 2926
Estimated Gas Usage: 6930 - 61211
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_44.sol:415

msg.sender.send(10 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x421010c0542080000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x10204020042096600, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: callme_re_ent14(), txdata: 0x1abf48c0, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Low
Contract: Operated
Function name: buyTicket_re_ent9()
PC address: 3084
Estimated Gas Usage: 12798 - 88022
Persistent state read after call
The contract account state is changed after an external call to a fixed address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_44.sol:157

lastPlayer_re_ent9 = msg.sender

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: buyTicket_re_ent9(), txdata: 0xacc0544f, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Low
Contract: Operated
Function name: buyTicket_re_ent9()
PC address: 3137
Estimated Gas Usage: 12725 - 87666
Persistent state write after call
The contract account state is changed after an external call to a fixed address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_44.sol:157

lastPlayer_re_ent9 = msg.sender

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: buyTicket_re_ent9(), txdata: 0xacc0544f, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Low
Contract: Operated
Function name: buyTicket_re_ent9()
PC address: 3167
Estimated Gas Usage: 12725 - 87666
Persistent state write after call
The contract account state is changed after an external call to a fixed address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_44.sol:158

jackpot_re_ent9    = address(this).balance

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: buyTicket_re_ent9(), txdata: 0xacc0544f, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: Operated
Function name: withdrawBalance_re_ent33()
PC address: 3282
Estimated Gas Usage: 6617 - 61278
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: buggy_44.sol:65

msg.sender.call.value(userBalance_re_ent33[msg.sender])("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawBalance_re_ent33(), txdata: 0xc6604ad7, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: Operated
Function name: withdrawBalance_re_ent33()
PC address: 3417
Estimated Gas Usage: 6617 - 61278
Persistent state write after call
The contract account state is changed after an external call to a user defined address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_44.sol:69

userBalance_re_ent33[msg.sender] = 0

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawBalance_re_ent33(), txdata: 0xc6604ad7, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: Feed
Function name: withdraw_balances_re_ent36()
PC address: 4176
Estimated Gas Usage: 1518 - 35989
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_44.sol:523

msg.sender.send(balances_re_ent36[msg.sender ])

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: withdraw_balances_re_ent36(), txdata: 0x54611e35, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: Feed
Function name: withdrawBalance_re_ent40()
PC address: 4369
Estimated Gas Usage: 6685 - 61346
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: buggy_44.sol:14

msg.sender.call.value(userBalance_re_ent40[msg.sender])("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x56bc75e2d630fffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawBalance_re_ent40(), txdata: 0x6cfd7721, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: Feed
Function name: withdrawBalance_re_ent40()
PC address: 4504
Estimated Gas Usage: 6685 - 61346
Persistent state write after call
The contract account state is changed after an external call to a user defined address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_44.sol:18

userBalance_re_ent40[msg.sender] = 0

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawBalance_re_ent40(), txdata: 0x6cfd7721, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: Feed
Function name: withdrawFunds_re_ent17(uint256)
PC address: 5794
Estimated Gas Usage: 7257 - 61918
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: buggy_44.sol:113

msg.sender.call.value(_weiToWithdraw)("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x30fffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawFunds_re_ent17(uint256), txdata: 0x8d18e1e80000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: Feed
Function name: withdrawFunds_re_ent17(uint256)
PC address: 5930
Estimated Gas Usage: 7330 - 62274
Persistent state read after call
The contract account state is changed after an external call to a user defined address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_44.sol:115

balances_re_ent17[msg.sender] -= _weiToWithdraw

--------------------
Initial State:

Account: [CREATOR], balance: 0x40100000000001001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawFunds_re_ent17(uint256), txdata: 0x8d18e1e80000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: Feed
Function name: withdrawFunds_re_ent17(uint256)
PC address: 5937
Estimated Gas Usage: 7257 - 61918
Persistent state write after call
The contract account state is changed after an external call to a user defined address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_44.sol:115

balances_re_ent17[msg.sender] -= _weiToWithdraw

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x9, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawFunds_re_ent17(uint256), txdata: 0x8d18e1e80000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: Feed
Function name: withdrawBalance_re_ent26()
PC address: 6053
Estimated Gas Usage: 6619 - 61280
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: buggy_44.sol:193

msg.sender.call.value(userBalance_re_ent26[msg.sender])("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x56bc75e2d630fffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawBalance_re_ent26(), txdata: 0x8f94454c, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: Feed
Function name: withdrawBalance_re_ent26()
PC address: 6188
Estimated Gas Usage: 6619 - 61280
Persistent state write after call
The contract account state is changed after an external call to a user defined address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_44.sol:197

userBalance_re_ent26[msg.sender] = 0

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawBalance_re_ent26(), txdata: 0x8f94454c, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: Feed
Function name: bug_re_ent27()
PC address: 6272
Estimated Gas Usage: 6924 - 61865
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_44.sol:209

msg.sender.send(1 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x420810c0442080000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x29c75e2d6207eaff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_re_ent27(), txdata: 0x9128b348, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: Feed
Function name: withdraw_balances_re_ent8()
PC address: 6953
Estimated Gas Usage: 1518 - 35989
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: buggy_44.sol:493

msg.sender.call.value(balances_re_ent8[msg.sender ])("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x56bc75e2d630fffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdraw_balances_re_ent8(), txdata: 0xa2bcc8c5, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: Feed
Function name: withdraw_balances_re_ent8()
PC address: 6953
Estimated Gas Usage: 1591 - 36345
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_44.sol:493

msg.sender.call.value(balances_re_ent8[msg.sender ])("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x11001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: withdraw_balances_re_ent8(), txdata: 0xa2bcc8c5, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: Feed
Function name: withdraw_balances_re_ent8()
PC address: 7084
Estimated Gas Usage: 1591 - 36345
Persistent state write after call
The contract account state is changed after an external call to a user defined address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_44.sol:495

balances_re_ent8[msg.sender] = 0

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdraw_balances_re_ent8(), txdata: 0xa2bcc8c5, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: Feed
Function name: bug_re_ent13()
PC address: 7170
Estimated Gas Usage: 7041 - 62265
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: buggy_44.sol:434

msg.sender.call.value(1 ether)("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x2bc75e2d630fffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_re_ent13(), txdata: 0xa328c11f, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: Feed
Function name: bug_re_ent13()
PC address: 7170
Estimated Gas Usage: 6968 - 61909
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_44.sol:434

msg.sender.call.value(1 ether)("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x420810c0440090000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x2000000000010008, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_re_ent13(), txdata: 0xa328c11f, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: Feed
Function name: bug_re_ent13()
PC address: 7249
Estimated Gas Usage: 6968 - 61909
Persistent state read after call
The contract account state is changed after an external call to a user defined address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_44.sol:438

not_called_re_ent13 = false

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x2000180000000000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_re_ent13(), txdata: 0xa328c11f, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: Feed
Function name: bug_re_ent13()
PC address: 7263
Estimated Gas Usage: 6968 - 61909
Persistent state write after call
The contract account state is changed after an external call to a user defined address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_44.sol:438

not_called_re_ent13 = false

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x2000180000000000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_re_ent13(), txdata: 0xa328c11f, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: Feed
Function name: withdrawFunds_re_ent3(uint256)
PC address: 7391
Estimated Gas Usage: 7191 - 61852
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: buggy_44.sol:141

msg.sender.call.value(_weiToWithdraw)("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x56bc75e2d630fffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawFunds_re_ent3(uint256), txdata: 0xa4e80ee00000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: Feed
Function name: withdrawFunds_re_ent3(uint256)
PC address: 7527
Estimated Gas Usage: 7264 - 62208
Persistent state read after call
The contract account state is changed after an external call to a user defined address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_44.sol:143

balances_re_ent3[msg.sender] -= _weiToWithdraw

--------------------
Initial State:

Account: [CREATOR], balance: 0x401c0040040009467, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x40000000000000003, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawFunds_re_ent3(uint256), txdata: 0xa4e80ee00000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: Feed
Function name: withdrawFunds_re_ent3(uint256)
PC address: 7534
Estimated Gas Usage: 7191 - 61852
Persistent state write after call
The contract account state is changed after an external call to a user defined address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_44.sol:143

balances_re_ent3[msg.sender] -= _weiToWithdraw

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x141, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawFunds_re_ent3(uint256), txdata: 0xa4e80ee00000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Low
Contract: Feed
Function name: buyTicket_re_ent9()
PC address: 7988
Estimated Gas Usage: 12909 - 88133
Persistent state read after call
The contract account state is changed after an external call to a fixed address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_44.sol:157

lastPlayer_re_ent9 = msg.sender

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: buyTicket_re_ent9(), txdata: 0xacc0544f, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Low
Contract: Feed
Function name: buyTicket_re_ent9()
PC address: 8041
Estimated Gas Usage: 12836 - 87777
Persistent state write after call
The contract account state is changed after an external call to a fixed address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_44.sol:157

lastPlayer_re_ent9 = msg.sender

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: buyTicket_re_ent9(), txdata: 0xacc0544f, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Low
Contract: Feed
Function name: buyTicket_re_ent9()
PC address: 8071
Estimated Gas Usage: 12836 - 87777
Persistent state write after call
The contract account state is changed after an external call to a fixed address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_44.sol:158

jackpot_re_ent9    = address(this).balance

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: buyTicket_re_ent9(), txdata: 0xacc0544f, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: Feed
Function name: withdrawBalance_re_ent33()
PC address: 8186
Estimated Gas Usage: 6618 - 61279
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: buggy_44.sol:65

msg.sender.call.value(userBalance_re_ent33[msg.sender])("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x56bc75e2d630fffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawBalance_re_ent33(), txdata: 0xc6604ad7, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: Feed
Function name: withdrawBalance_re_ent33()
PC address: 8321
Estimated Gas Usage: 6618 - 61279
Persistent state write after call
The contract account state is changed after an external call to a user defined address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_44.sol:69

userBalance_re_ent33[msg.sender] = 0

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawBalance_re_ent33(), txdata: 0xc6604ad7, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: Feed
Function name: bug_re_ent20()
PC address: 8406
Estimated Gas Usage: 6923 - 61864
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_44.sol:233

msg.sender.send(1 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x42001080440080000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x2bc75e2d610fffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_re_ent20(), txdata: 0xd8fa982f, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: Feed
Function name: withdraw_balances_re_ent1()
PC address: 9650
Estimated Gas Usage: 1561 - 36032
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: buggy_44.sol:363

msg.sender.call.value(balances_re_ent1[msg.sender ])("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x56bc75e2d630fffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdraw_balances_re_ent1(), txdata: 0xf0b6e306, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: Feed
Function name: withdraw_balances_re_ent1()
PC address: 9650
Estimated Gas Usage: 1634 - 36388
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_44.sol:363

msg.sender.call.value(balances_re_ent1[msg.sender ])("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x520801a0020000d85, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: withdraw_balances_re_ent1(), txdata: 0xf0b6e306, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: Feed
Function name: withdraw_balances_re_ent1()
PC address: 9781
Estimated Gas Usage: 1634 - 36388
Persistent state write after call
The contract account state is changed after an external call to a user defined address. Consider that the called contract could re-enter the function before this state change takes place
--------------------
In file: buggy_44.sol:365

balances_re_ent1[msg.sender] = 0

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdraw_balances_re_ent1(), txdata: 0xf0b6e306, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: Feed
Function name: bug_re_ent41()
PC address: 9867
Estimated Gas Usage: 6966 - 61907
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_44.sol:30

msg.sender.send(1 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x420810c0540000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x2005540102010000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_re_ent41(), txdata: 0xf9a1f3d9, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: Feed
Function name: callme_re_ent7()
PC address: 10177
Estimated Gas Usage: 6949 - 61230
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_44.sol:391

msg.sender.send(10 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x421810c0142000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x16bc75e2d630ff7ff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: callme_re_ent7(), txdata: 0xfef28f0b, value: 0x0


