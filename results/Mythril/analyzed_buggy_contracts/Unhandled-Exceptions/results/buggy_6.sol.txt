==== Write to an arbitrary storage slot ====
SWC ID: 124
Severity: High
Contract: ChannelWallet
Function name: deleteChannel(string)
PC address: 5093
Estimated Gas Usage: 8037 - 34786
Any storage slot can be written by the caller.
The attacker can modify any value in the storage. This can lead to unintended consequences.
--------------------
In file: buggy_6.sol:305

addressMap[channelId] = address(0)

--------------------
Initial State:

Account: [CREATOR], balance: 0x8001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x2007120840000400, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: deleteChannel(string), txdata: 0x0b19ee640000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000100, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ChannelWallet
Function name: UncheckedExternalCall_unchk40()
PC address: 5255
Estimated Gas Usage: 1044 - 35325
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_6.sol:36

addr_unchk40.send (2 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: UncheckedExternalCall_unchk40(), txdata: 0x216ea3a2, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ChannelWallet
Function name: unhandledsend_unchk14(address)
PC address: 5329
Estimated Gas Usage: 1128 - 35409
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_6.sol:218

callee.send(5 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x11388040876000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1c44654000fffe001, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: unhandledsend_unchk14(address), txdata: 0x24ebdd34ebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebeb, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ChannelWallet
Function name: unhandledsend_unchk14(address)
PC address: 5329
Estimated Gas Usage: 1128 - 35409
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_6.sol:218

callee.send(5 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x420800c0502080400, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x2202800040101b100, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: unhandledsend_unchk14(address), txdata: 0x24ebdd34efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ChannelWallet
Function name: sendToWinner_unchk20()
PC address: 5448
Estimated Gas Usage: 7819 - 63090
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_6.sol:139

winner_unchk20.send(winAmount_unchk20)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: sendToWinner_unchk20(), txdata: 0x279265d2, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ChannelWallet
Function name: sendToWinner_unchk44()
PC address: 5593
Estimated Gas Usage: 7753 - 63024
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_6.sol:30

winner_unchk44.send(winAmount_unchk44)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: sendToWinner_unchk44(), txdata: 0x294e1b8e, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ChannelWallet
Function name: my_func_unchk23(address)
PC address: 5684
Estimated Gas Usage: 1058 - 35339
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_6.sol:209

dst.send(msg.value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1100, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x200000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: my_func_unchk23(address), txdata: 0x3e153b711515151515151515151515151515151515151515151515151515151515151515, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ChannelWallet
Function name: cash_unchk46(uint256,uint256,address)
PC address: 5824
Estimated Gas Usage: 1234 - 35515
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_6.sol:171

winner_unchk46.send(subpot_unchk46)

--------------------
Initial State:

Account: [CREATOR], balance: 0x42000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x81c0100850000001, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: cash_unchk46(uint256,uint256,address), txdata: 0x434fa4aa4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ChannelWallet
Function name: cash_unchk46(uint256,uint256,address)
PC address: 5824
Estimated Gas Usage: 1234 - 35515
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_6.sol:171

winner_unchk46.send(subpot_unchk46)

--------------------
Initial State:

Account: [CREATOR], balance: 0x4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x42101080500030000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x6bc75e2d630fffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: cash_unchk46(uint256,uint256,address), txdata: 0x434fa4aabebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: ChannelWallet
Function name: my_func_uncheck36(address)
PC address: 5972
Estimated Gas Usage: 1090 - 35371
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: buggy_6.sol:298

dst.call.value(msg.value)("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x56bc75e2d630fffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: my_func_uncheck36(address), txdata: 0x550c16d4efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ChannelWallet
Function name: my_func_uncheck36(address)
PC address: 5972
Estimated Gas Usage: 1163 - 35727
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_6.sol:298

dst.call.value(msg.value)("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000002001002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x20000000000000000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: my_func_uncheck36(address), txdata: 0x550c16d40c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: ChannelWallet
Function name: my_func_uncheck48(address)
PC address: 6077
Estimated Gas Usage: 1112 - 35393
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: buggy_6.sol:20

dst.call.value(msg.value)("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x56bc75e2d630fffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: my_func_uncheck48(address), txdata: 0x55390eb3efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ChannelWallet
Function name: my_func_uncheck48(address)
PC address: 6077
Estimated Gas Usage: 1185 - 35749
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_6.sol:20

dst.call.value(msg.value)("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x8000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x90fc05288c1041, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0xfffe03701c0012, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: my_func_uncheck48(address), txdata: 0x55390eb33939393939393939393939393939393939393939393939393939393939393939, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ChannelWallet
Function name: bug_unchk39(address)
PC address: 6195
Estimated Gas Usage: 1149 - 35430
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_6.sol:283

addr.send (4 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x401850c09060e0000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x3849ae0838000180, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: bug_unchk39(address), txdata: 0x58dbb19cdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdb, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ChannelWallet
Function name: bug_unchk39(address)
PC address: 6195
Estimated Gas Usage: 1149 - 35430
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_6.sol:283

addr.send (4 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x21c2dc000608511e, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x400410c0542000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x3b5dc61cb1c84000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_unchk39(address), txdata: 0x58dbb19cefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ChannelWallet
Function name: bug_unchk27(address)
PC address: 6454
Estimated Gas Usage: 1104 - 35385
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_6.sol:52

addr.send (42 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x48100022428801021, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x3fdab000028000284, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_unchk27(address), txdata: 0x7bf98cbff9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ChannelWallet
Function name: bug_unchk27(address)
PC address: 6454
Estimated Gas Usage: 1104 - 35385
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_6.sol:52

addr.send (42 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x42100040500080000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x529c41a21420ee39b, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_unchk27(address), txdata: 0x7bf98cbfefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ChannelWallet
Function name: withdrawBal_unchk17()
PC address: 6529
Estimated Gas Usage: 1076 - 35357
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_6.sol:226

msg.sender.send(Balances_unchk17)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: withdrawBal_unchk17(), txdata: 0x86d0a009, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ChannelWallet
Function name: my_func_unchk35(address)
PC address: 6586
Estimated Gas Usage: 1059 - 35340
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_6.sol:310

dst.send(msg.value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: my_func_unchk35(address), txdata: 0x8bd3d0d7d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3, value: 0x0

==== Write to an arbitrary storage slot ====
SWC ID: 124
Severity: High
Contract: ChannelWallet
Function name: updateChannel(string,string,address)
PC address: 7138
Estimated Gas Usage: 14621 - 69885
Any storage slot can be written by the caller.
The attacker can modify any value in the storage. This can lead to unintended consequences.
--------------------
In file: buggy_6.sol:291

addressMap[to] = _address

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x80000000268482, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: updateChannel(string,string,address), txdata: 0x9347a33b000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ChannelWallet
Function name: sendToWinner_unchk8()
PC address: 7510
Estimated Gas Usage: 7796 - 63067
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_6.sol:270

winner_unchk8.send(winAmount_unchk8)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: sendToWinner_unchk8(), txdata: 0x994c3bfd, value: 0x0

==== Write to an arbitrary storage slot ====
SWC ID: 124
Severity: High
Contract: ChannelWallet
Function name: setAddress(string,address)
PC address: 7712
Estimated Gas Usage: 8172 - 35016
Any storage slot can be written by the caller.
The attacker can modify any value in the storage. This can lead to unintended consequences.
--------------------
In file: buggy_6.sol:278

addressMap[channelId] = _address

--------------------
Initial State:

Account: [CREATOR], balance: 0x32009820108100002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x40001100372f85, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: setAddress(string,address), txdata: 0x9b2ea4bd0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000100, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ChannelWallet
Function name: bug_unchk30()
PC address: 8017
Estimated Gas Usage: 1062 - 35343
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_6.sol:254

addr_unchk30.send(42 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: bug_unchk30(), txdata: 0x9e5d7729, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ChannelWallet
Function name: bug_unchk3(address)
PC address: 8128
Estimated Gas Usage: 1082 - 35363
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_6.sol:72

addr.send (42 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x4104000600c100000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: bug_unchk3(address), txdata: 0xacd2552dd2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ChannelWallet
Function name: bug_unchk3(address)
PC address: 8128
Estimated Gas Usage: 1082 - 35363
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_6.sol:72

addr.send (42 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x42180040540000001, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x523020a2c2308aea2, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_unchk3(address), txdata: 0xacd2552defefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ChannelWallet
Function name: unhandledsend_unchk26(address)
PC address: 8237
Estimated Gas Usage: 1148 - 35429
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_6.sol:126

callee.send(5 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x980008001000106, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4044008000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x24244008040000000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: unhandledsend_unchk26(address), txdata: 0xbe11fe6b1111111111111111111111111111111111111111111111111111111111111111, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ChannelWallet
Function name: unhandledsend_unchk26(address)
PC address: 8237
Estimated Gas Usage: 1148 - 35429
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_6.sol:126

callee.send(5 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x420800c0502080000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x16807502d630bf73e, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: unhandledsend_unchk26(address), txdata: 0xbe11fe6bbebebebebebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ChannelWallet
Function name: unhandledsend_unchk38(address)
PC address: 8430
Estimated Gas Usage: 1082 - 35363
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_6.sol:162

callee.send(5 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2040000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x4960000000400000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: unhandledsend_unchk38(address), txdata: 0xcf43199b4343434343434343434343434343434343434343434343434343434343434343, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ChannelWallet
Function name: unhandledsend_unchk38(address)
PC address: 8430
Estimated Gas Usage: 1082 - 35363
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_6.sol:162

callee.send(5 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x420800c0502080000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x40041000001020404, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: unhandledsend_unchk38(address), txdata: 0xcf43199befefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ChannelWallet
Function name: UncheckedExternalCall_unchk4()
PC address: 8728
Estimated Gas Usage: 1020 - 35301
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_6.sol:183

addr_unchk4.send (42 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: UncheckedExternalCall_unchk4(), txdata: 0xeb46deb8, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ChannelWallet
Function name: unhandledsend_unchk2(address)
PC address: 8951
Estimated Gas Usage: 1081 - 35362
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_6.sol:10

callee.send(5 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x3024000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x8, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x642010852a80a400, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: unhandledsend_unchk2(address), txdata: 0xf0808d1e8080808080808080808080808080808080808080808080808080808080808080, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ChannelWallet
Function name: unhandledsend_unchk2(address)
PC address: 8951
Estimated Gas Usage: 1081 - 35362
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_6.sol:10

callee.send(5 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x420800c05420c4000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x16bc1562d630a17fd, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: unhandledsend_unchk2(address), txdata: 0xf0808d1eefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ChannelWallet
Function name: sendToWinner_unchk32()
PC address: 9099
Estimated Gas Usage: 7794 - 63065
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_6.sol:153

winner_unchk32.send(winAmount_unchk32)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: sendToWinner_unchk32(), txdata: 0xf5fbd77c, value: 0x0


