==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ERC20Token
Function name: UncheckedExternalCall_unchk40()
PC address: 3099
Estimated Gas Usage: 1066 - 35347
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_32.sol:173

addr_unchk40.send (2 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x210000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x8000000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: gasprice_bit_ether(int128), txdata: 0x23b872dd000000000000000000000000000000000002000400400101000000000000008000000000000000000000000000801008044008800000010100000040080400800000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [SOMEGUY], function: UncheckedExternalCall_unchk40(), txdata: 0x216ea3a2, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ERC20Token
Function name: unhandledsend_unchk14(address)
PC address: 3856
Estimated Gas Usage: 1083 - 35364
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_32.sol:54

callee.send(5 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x8000000000000000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: gasprice_bit_ether(int128), txdata: 0x23b872dd000000000000000000000000040000000000200000800880004004040110008000000000000000000000000001041001040202010280004002028010201020080000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: unhandledsend_unchk14(address), txdata: 0x24ebdd34ebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebeb, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ERC20Token
Function name: unhandledsend_unchk14(address)
PC address: 3856
Estimated Gas Usage: 1083 - 35364
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_32.sol:54

callee.send(5 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x420800c0502080000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x11386580042040498, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: unhandledsend_unchk14(address), txdata: 0x24ebdd34efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ERC20Token
Function name: sendToWinner_unchk20()
PC address: 3975
Estimated Gas Usage: 7774 - 63045
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_32.sol:97

winner_unchk20.send(winAmount_unchk20)

--------------------
Initial State:

Account: [CREATOR], balance: 0x20008100040c4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x800000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: gasprice_bit_ether(int128), txdata: 0x23b872dd000000000000000000000000008010101010000840400004011020000202004000000000000000000000000040080201800400404001008001008001008001020000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [SOMEGUY], function: sendToWinner_unchk20(), txdata: 0x279265d2, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ERC20Token
Function name: sendToWinner_unchk44()
PC address: 4120
Estimated Gas Usage: 7796 - 63067
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_32.sol:157

winner_unchk44.send(winAmount_unchk44)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: sendToWinner_unchk44(), txdata: 0x294e1b8e, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: AsseteGram
Function name: UncheckedExternalCall_unchk40()
PC address: 4193
Estimated Gas Usage: 1088 - 35369
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_32.sol:173

addr_unchk40.send (2 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: UncheckedExternalCall_unchk40(), txdata: 0x216ea3a2, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ERC20Token
Function name: my_func_unchk23(address)
PC address: 4212
Estimated Gas Usage: 1080 - 35361
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_32.sol:50

dst.send(msg.value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x40040000000010c01, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x40000000000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: gasprice_bit_ether(int128), txdata: 0x23b872dd000000000000000000000000000802000010000000000002004004200000000000000000000000000000000000000000000000000000008000000000000200100000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [SOMEGUY], function: my_func_unchk23(address), txdata: 0x3e153b711515151515151515151515151515151515151515151515151515151515151515, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ERC20Token
Function name: my_func_unchk23(address)
PC address: 4212
Estimated Gas Usage: 1080 - 35361
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_32.sol:50

dst.send(msg.value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x40a018008a9061, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x144bf628222000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x89c0c000020b, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: my_func_uncheck36(address), txdata: 0x550c16d4efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x1
Caller: [ATTACKER], function: my_func_unchk23(address), txdata: 0x3e153b71efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: ERC20Token
Function name: my_func_uncheck36(address)
PC address: 4311
Estimated Gas Usage: 1162 - 35726
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: buggy_32.sol:120

dst.call.value(msg.value)("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x10000002407400, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x36bc044001012e7ff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: my_func_unchk35(address), txdata: 0x8bd3d0d70000000000000000000000002000040001004000800008002000800080000001, value: 0x0
Caller: [ATTACKER], function: my_func_uncheck36(address), txdata: 0x550c16d4efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ERC20Token
Function name: my_func_uncheck36(address)
PC address: 4311
Estimated Gas Usage: 1162 - 35726
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_32.sol:120

dst.call.value(msg.value)("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x43c1b01800011, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: my_func_unchk23(address), txdata: 0x3e153b710000000000000000000000000901d12ebe1b1901000000200210080040002004, value: 0x0
Caller: [SOMEGUY], function: my_func_uncheck36(address), txdata: 0x550c16d40c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ERC20Token
Function name: my_func_uncheck36(address)
PC address: 4311
Estimated Gas Usage: 1089 - 35370
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_32.sol:120

dst.call.value(msg.value)("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000000000894e0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x40000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x20000020003fd, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: my_func_uncheck36(address), txdata: 0x550c16d4dededededededededededededeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x1
Caller: [ATTACKER], function: my_func_uncheck36(address), txdata: 0x550c16d4efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ERC20Token
Function name: bug_unchk39(address)
PC address: 4426
Estimated Gas Usage: 1104 - 35385
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_32.sol:77

addr.send (4 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x401410000000809b9, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x7782dace9d900001, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: gasprice_bit_ether(int128), txdata: 0x23b872dd000000000000000000000000000000000101100804000101014001000120040400000000000000000000000001000000000000000000080080200000400100400000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: bug_unchk39(address), txdata: 0x58dbb19cdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdb, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ERC20Token
Function name: bug_unchk39(address)
PC address: 4426
Estimated Gas Usage: 1104 - 35385
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_32.sol:77

addr.send (4 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x40041040142000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x2038402212002017f, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_unchk39(address), txdata: 0x58dbb19cefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ERC20Token
Function name: my_func_unchk35(address)
PC address: 4631
Estimated Gas Usage: 1080 - 35361
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_32.sol:135

dst.send(msg.value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2101000000002011, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x4, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: gasprice_bit_ether(int128), txdata: 0x23b872dd000000000000000000000000011000000000002000000040000001400010000400000000000000000000000080080480000000080800000480100040000000020000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [SOMEGUY], function: my_func_unchk35(address), txdata: 0x8bd3d0d7d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ERC20Token
Function name: my_func_unchk35(address)
PC address: 4631
Estimated Gas Usage: 1080 - 35361
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_32.sol:135

dst.send(msg.value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x4000020f069, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x66cf803258000021, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: my_func_uncheck36(address), txdata: 0x550c16d4adadadadadadadadadadadaddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x1
Caller: [ATTACKER], function: my_func_unchk35(address), txdata: 0x8bd3d0d7efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ERC20Token
Function name: sendToWinner_unchk8()
PC address: 4853
Estimated Gas Usage: 7729 - 63000
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_32.sol:72

winner_unchk8.send(winAmount_unchk8)

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000002000040, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x40000000000000001, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: gasprice_bit_ether(int128), txdata: 0x23b872dd000000000000000000000000000000000000002000010000000000000400000000000000000000000000000000000000000000000104020400000000400002040000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [SOMEGUY], function: sendToWinner_unchk8(), txdata: 0x994c3bfd, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ERC20Token
Function name: bug_unchk30()
PC address: 4947
Estimated Gas Usage: 1039 - 35320
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_32.sol:60

addr_unchk30.send(42 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1800000801, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0xc, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: gasprice_bit_ether(int128), txdata: 0x23b872dd000000000000000000000000000000000000000008800101000000000000000000000000000000000000000000000000000000000880010100000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: bug_unchk30(), txdata: 0x9e5d7729, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: AsseteGram
Function name: unhandledsend_unchk14(address)
PC address: 4950
Estimated Gas Usage: 1083 - 35364
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_32.sol:54

callee.send(5 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x20000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x10000000000000000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: unhandledsend_unchk14(address), txdata: 0x24ebdd34ebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebeb, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: AsseteGram
Function name: unhandledsend_unchk14(address)
PC address: 4950
Estimated Gas Usage: 1083 - 35364
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_32.sol:54

callee.send(5 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x421c00c0502080004, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1000000000104207c, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: unhandledsend_unchk14(address), txdata: 0x24ebdd34efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: AsseteGram
Function name: sendToWinner_unchk20()
PC address: 5069
Estimated Gas Usage: 7774 - 63045
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_32.sol:97

winner_unchk20.send(winAmount_unchk20)

--------------------
Initial State:

Account: [CREATOR], balance: 0x800, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x81, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: sendToWinner_unchk20(), txdata: 0x279265d2, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: AsseteGram
Function name: sendToWinner_unchk44()
PC address: 5214
Estimated Gas Usage: 7796 - 63067
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_32.sol:157

winner_unchk44.send(winAmount_unchk44)

--------------------
Initial State:

Account: [CREATOR], balance: 0x800, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x81, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: sendToWinner_unchk44(), txdata: 0x294e1b8e, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: AsseteGram
Function name: my_func_unchk23(address)
PC address: 5325
Estimated Gas Usage: 1058 - 35339
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_32.sol:50

dst.send(msg.value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x42000000000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x42000000000000002, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: my_func_unchk23(address), txdata: 0x3e153b711515151515151515151515151515151515151515151515151515151515151515, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: AsseteGram
Function name: cash_unchk46(uint256,uint256,address)
PC address: 5443
Estimated Gas Usage: 1212 - 35493
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_32.sol:223

winner_unchk46.send(subpot_unchk46)

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x69c2442d630c0001, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: cash_unchk46(uint256,uint256,address), txdata: 0x434fa4aa4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: AsseteGram
Function name: cash_unchk46(uint256,uint256,address)
PC address: 5443
Estimated Gas Usage: 1212 - 35493
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_32.sol:223

winner_unchk46.send(subpot_unchk46)

--------------------
Initial State:

Account: [CREATOR], balance: 0x4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x400410805000afffe, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x6bc75e2d610f8904, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: cash_unchk46(uint256,uint256,address), txdata: 0x434fa4aabebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ERC20Token
Function name: unhandledsend_unchk26(address)
PC address: 5512
Estimated Gas Usage: 1104 - 35385
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_32.sol:88

callee.send(5 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000040a5, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0xc563918244f40001, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: gasprice_bit_ether(int128), txdata: 0x23b872dd000000000000000000000000010100010000400000000000000000000000000000000000000000000000000000000000000000800002080004082004008000010000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: unhandledsend_unchk26(address), txdata: 0xbe11fe6b1111111111111111111111111111111111111111111111111111111111111111, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ERC20Token
Function name: unhandledsend_unchk26(address)
PC address: 5512
Estimated Gas Usage: 1104 - 35385
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_32.sol:88

callee.send(5 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x420000c0502080002, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x16bc65e2d6306f3c9, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: unhandledsend_unchk26(address), txdata: 0xbe11fe6bbebebebebebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: AsseteGram
Function name: my_func_uncheck36(address)
PC address: 5669
Estimated Gas Usage: 1089 - 35370
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: buggy_32.sol:120

dst.call.value(msg.value)("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x56bc75e2d630fffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: my_func_uncheck36(address), txdata: 0x550c16d4efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: AsseteGram
Function name: my_func_uncheck36(address)
PC address: 5669
Estimated Gas Usage: 1162 - 35726
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_32.sol:120

dst.call.value(msg.value)("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x400c0040080000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: my_func_uncheck36(address), txdata: 0x550c16d40c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: AsseteGram
Function name: bug_unchk39(address)
PC address: 5784
Estimated Gas Usage: 1104 - 35385
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_32.sol:77

addr.send (4 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x6b835e2d23000001, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_unchk39(address), txdata: 0x58dbb19cdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdb, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: AsseteGram
Function name: bug_unchk39(address)
PC address: 5784
Estimated Gas Usage: 1104 - 35385
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_32.sol:77

addr.send (4 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x400410c0142000004, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x68005e000001fffc, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_unchk39(address), txdata: 0x58dbb19cefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: ERC20Token
Function name: sendToWinner_unchk32()
PC address: 5842
Estimated Gas Usage: 7794 - 63065
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_32.sol:107

winner_unchk32.send(winAmount_unchk32)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x14a440a0020000100, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: my_func_unchk23(address), txdata: 0x3e153b711919191919191919191919190901d12ebe1b195e5aa8748e62bd7734ae19b51f, value: 0x0
Caller: [CREATOR], function: sendToWinner_unchk32(), txdata: 0xf5fbd77c, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: AsseteGram
Function name: bug_unchk27(address)
PC address: 5998
Estimated Gas Usage: 1083 - 35364
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_32.sol:251

addr.send (42 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x44bc75a2d63080001, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_unchk27(address), txdata: 0x7bf98cbff9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: AsseteGram
Function name: bug_unchk27(address)
PC address: 5998
Estimated Gas Usage: 1083 - 35364
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_32.sol:251

addr.send (42 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x42100080500000ffe, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x56bc75e2d630ccf60, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_unchk27(address), txdata: 0x7bf98cbfefefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: AsseteGram
Function name: my_func_unchk35(address)
PC address: 6055
Estimated Gas Usage: 1080 - 35361
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_32.sol:135

dst.send(msg.value)

--------------------
Initial State:

Account: [CREATOR], balance: 0x40018, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: my_func_unchk35(address), txdata: 0x8bd3d0d7d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: AsseteGram
Function name: sendToWinner_unchk8()
PC address: 6435
Estimated Gas Usage: 7729 - 63000
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_32.sol:72

winner_unchk8.send(winAmount_unchk8)

--------------------
Initial State:

Account: [CREATOR], balance: 0x800, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x81, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: sendToWinner_unchk8(), txdata: 0x994c3bfd, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: AsseteGram
Function name: bug_unchk30()
PC address: 6529
Estimated Gas Usage: 1039 - 35320
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_32.sol:60

addr_unchk30.send(42 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: bug_unchk30(), txdata: 0x9e5d7729, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: AsseteGram
Function name: unhandledsend_unchk26(address)
PC address: 7094
Estimated Gas Usage: 1082 - 35363
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_32.sol:88

callee.send(5 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1080000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x3030c2840020007, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x403030c2840020007, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: unhandledsend_unchk26(address), txdata: 0xbe11fe6b1111111111111111111111111111111111111111111111111111111111111111, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: AsseteGram
Function name: unhandledsend_unchk26(address)
PC address: 7094
Estimated Gas Usage: 1082 - 35363
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_32.sol:88

callee.send(5 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x20800004020c0020, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x4a000601630fffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: unhandledsend_unchk26(address), txdata: 0xbe11fe6bbebebebebebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: AsseteGram
Function name: unhandledsend_unchk38(address)
PC address: 7178
Estimated Gas Usage: 1126 - 35407
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_32.sol:218

callee.send(5 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0xc0000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x10000020000000000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: unhandledsend_unchk38(address), txdata: 0xcf43199b4343434343434343434343434343434343434343434343434343434343434343, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: AsseteGram
Function name: unhandledsend_unchk38(address)
PC address: 7178
Estimated Gas Usage: 1126 - 35407
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_32.sol:218

callee.send(5 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x421410c05020bfffe, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x16bc75e2d630fffbf, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: unhandledsend_unchk38(address), txdata: 0xcf43199befefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: AsseteGram
Function name: UncheckedExternalCall_unchk4()
PC address: 7507
Estimated Gas Usage: 1019 - 35300
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_32.sol:229

addr_unchk4.send (42 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x400000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x400000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0xa210, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: gasprice_bit_ether(int128), txdata: 0x23b872dd000000000000000000000000ac775cd446889ac167da466692449ece5439fc1200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [SOMEGUY], function: UncheckedExternalCall_unchk4(), txdata: 0xeb46deb8, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: AsseteGram
Function name: sendToWinner_unchk32()
PC address: 7742
Estimated Gas Usage: 7816 - 63087
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: buggy_32.sol:107

winner_unchk32.send(winAmount_unchk32)

--------------------
Initial State:

Account: [CREATOR], balance: 0x800, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x81, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: sendToWinner_unchk32(), txdata: 0xf5fbd77c, value: 0x0


