==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: ERC20Token
Function name: transferTo_txorigin31(address,uint256,address)
PC address: 2378
Estimated Gas Usage: 356 - 451
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:172

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: transferTo_txorigin31(address,uint256,address), txdata: 0x093533b0010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: ERC20Token
Function name: transferTo_txorigin39(address,uint256,address)
PC address: 2681
Estimated Gas Usage: 400 - 495
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:120

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: transferTo_txorigin39(address,uint256,address), txdata: 0x0a20e74e010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: ERC20Token
Function name: transferTo_txorigin7(address,uint256,address)
PC address: 3431
Estimated Gas Usage: 355 - 450
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:54

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: transferTo_txorigin7(address,uint256,address), txdata: 0x3373f9d0010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: ERC20Token
Function name: sendto_txorigin13(address,uint256,address)
PC address: 3492
Estimated Gas Usage: 1181 - 35462
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:177

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x20085, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x10000000001, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: sendto_txorigin13(address,uint256,address), txdata: 0x520aba35000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010101010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: AsseteGram
Function name: bug_txorigin32(address)
PC address: 3537
Estimated Gas Usage: 315 - 410
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:198

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0xa00000000000220, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_txorigin32(address), txdata: 0x06b3ad660101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ERC20Token
Function name: sendto_txorigin13(address,uint256,address)
PC address: 3572
Estimated Gas Usage: 1181 - 35462
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_32.sol:178

receiver.transfer(amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x42088211089c686d6, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1652d2324681ce1c7, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: gasprice_bit_ether(int128), txdata: 0x23b872dd000000000000000000000000004040001002000000004004800008104020088000000000000000000000000002800040000880020000400200040020028010080000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: sendto_txorigin13(address,uint256,address), txdata: 0x520aba35000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000011b012010000001410000000000000000000000004002802040200104022002020280010040040808, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: ERC20Token
Function name: transferTo_txorigin19(address,uint256,address)
PC address: 3624
Estimated Gas Usage: 399 - 494
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:92

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: transferTo_txorigin19(address,uint256,address), txdata: 0x5d7585b8010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: ERC20Token
Function name: sendto_txorigin25(address,uint256,address)
PC address: 3685
Estimated Gas Usage: 1225 - 35506
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:87

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x200000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x34010449048091111, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: sendto_txorigin25(address,uint256,address), txdata: 0x68c6116f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000220100480080810200000000000000000000000000208020208100802040280401002804020080202, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: AsseteGram
Function name: transferTo_txorigin31(address,uint256,address)
PC address: 3754
Estimated Gas Usage: 423 - 518
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:172

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x2000000000000000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: transferTo_txorigin31(address,uint256,address), txdata: 0x093533b0010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ERC20Token
Function name: sendto_txorigin25(address,uint256,address)
PC address: 3765
Estimated Gas Usage: 1225 - 35506
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_32.sol:88

receiver.transfer(amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1c0000002001851, nonce:0, storage:{}
Account: [ATTACKER], balance: 0xfffffffffffffffe, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x13e7e7f3e7e5fbbbe, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: gasprice_bit_ether(int128), txdata: 0x23b872dd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200100000802001200802010000000001000000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: sendto_txorigin25(address,uint256,address), txdata: 0x68c6116f000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000001fffffbffffffffe0000000000000000000000000101010101010101010101010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: ERC20Token
Function name: transferTo_txorigin35(address,uint256,address)
PC address: 3890
Estimated Gas Usage: 355 - 450
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:152

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: transferTo_txorigin35(address,uint256,address), txdata: 0x8376964d010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: AsseteGram
Function name: transferTo_txorigin39(address,uint256,address)
PC address: 4057
Estimated Gas Usage: 400 - 495
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:120

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000040001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x40000000000000000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: transferTo_txorigin39(address,uint256,address), txdata: 0x0a20e74e010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: AsseteGram
Function name: transferTo_txorigin27(address,uint256,address)
PC address: 4118
Estimated Gas Usage: 422 - 517
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:225

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x6b00000001000000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: transferTo_txorigin27(address,uint256,address), txdata: 0x0ccb9a12010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: ERC20Token
Function name: bug_txorigin36(address)
PC address: 4362
Estimated Gas Usage: 335 - 430
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:138

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x250a00, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: bug_txorigin36(address), txdata: 0xb389b2c90101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: ERC20Token
Function name: bug_txorigin4(address)
PC address: 4421
Estimated Gas Usage: 357 - 452
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:50

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x250a00, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: bug_txorigin4(address), txdata: 0xb9e312580101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: ERC20Token
Function name: bug_txorigin8(address)
PC address: 4615
Estimated Gas Usage: 290 - 385
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:105

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: bug_txorigin8(address), txdata: 0xf54c741d0000000000000000000000000000000000000000000000010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: ERC20Token
Function name: sendto_txorigin9(address,uint256,address)
PC address: 4674
Estimated Gas Usage: 1180 - 35461
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:82

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x15, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: sendto_txorigin9(address,uint256,address), txdata: 0xf6292d59000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010101010101010101010101, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ERC20Token
Function name: sendto_txorigin9(address,uint256,address)
PC address: 4754
Estimated Gas Usage: 1180 - 35461
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_32.sol:83

receiver.transfer(amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x4470604080f115d, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x10000000000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x50656d458a2375fb9, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: gasprice_bit_ether(int128), txdata: 0x23b872dd000000000000000000000000400200201001000101800240000820100200000100000000000000000000000002040810100140800200402002010004000020400000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: sendto_txorigin9(address,uint256,address), txdata: 0xf6292d59000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000802e4c88013232840000000000000000000000000004000820040000000004000020020201400410, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: ERC20Token
Function name: withdrawAll_txorigin30(address,address)
PC address: 4806
Estimated Gas Usage: 1578 - 35859
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:69

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: withdrawAll_txorigin30(address,address), txdata: 0xf6f1137101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: AsseteGram
Function name: transferTo_txorigin7(address,uint256,address)
PC address: 4887
Estimated Gas Usage: 422 - 517
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:54

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000040001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x100000000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: transferTo_txorigin7(address,uint256,address), txdata: 0x3373f9d0010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ERC20Token
Function name: withdrawAll_txorigin30(address,address)
PC address: 4909
Estimated Gas Usage: 1578 - 35859
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_32.sol:70

_recipient.transfer(address(this).balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x200100000000283a, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1c0c5de9fffe7dffe, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1eac7de95ffcfddff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: gasprice_bit_ether(int128), txdata: 0x23b872dd000000000000000000000000000000000000020000000000000000800200000000000000000000000000000000000000000000000000000200000000000000400000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: withdrawAll_txorigin30(address,address), txdata: 0xf6f11371010101010101010101010101deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: AsseteGram
Function name: bug_txorigin20(address)
PC address: 4948
Estimated Gas Usage: 380 - 475
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:194

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x40000000020, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_txorigin20(address), txdata: 0x5119e0000101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: ERC20Token
Function name: withdrawAll_txorigin14(address,address)
PC address: 4960
Estimated Gas Usage: 1600 - 35881
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:64

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: withdrawAll_txorigin14(address,address), txdata: 0xf935226e01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: AsseteGram
Function name: sendto_txorigin13(address,uint256,address)
PC address: 5007
Estimated Gas Usage: 1181 - 35462
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:177

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x41800c044005bff8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: sendto_txorigin13(address,uint256,address), txdata: 0x520aba35000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010110001010088002022000801000, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ERC20Token
Function name: withdrawAll_txorigin14(address,address)
PC address: 5063
Estimated Gas Usage: 1600 - 35881
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_32.sol:65

_recipient.transfer(address(this).balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000000004422, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x3fffffffffffffffe, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x3fffffffffffffffe, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: gasprice_bit_ether(int128), txdata: 0x23b872dd000000000000000000000000000001088000000000000000000000000000000000000000000000000000000020200801100000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: withdrawAll_txorigin14(address,address), txdata: 0xf935226e010101010101010101010101deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: AsseteGram
Function name: sendto_txorigin13(address,uint256,address)
PC address: 5087
Estimated Gas Usage: 1181 - 35462
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_32.sol:178

receiver.transfer(amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000010003e3e6, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x435c10c05420f7ffe, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x423c10c054201fb05, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: gasprice_bit_ether(int128), txdata: 0x23b872dd000000000000000000000000ac775cd446889ac167da466692449ece5439fc12000000000000000000000000ac775cd446889ac167da466692449ece5439fc120000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: sendto_txorigin13(address,uint256,address), txdata: 0x520aba35000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000023ef3fabdf080010000000000000000000000000101010101010101010101010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: ERC20Token
Function name: bug_txorigin40(address)
PC address: 5114
Estimated Gas Usage: 378 - 473
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:165

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: bug_txorigin40(address), txdata: 0xfd5225fc0000000000000000000000000000000000000000000000010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: ERC20Token
Function name: transferTo_txorigin23(address,uint256,address)
PC address: 5173
Estimated Gas Usage: 464 - 559
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:59

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [CREATOR], function: transferTo_txorigin23(address,uint256,address), txdata: 0xfffdba83010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: AsseteGram
Function name: transferTo_txorigin19(address,uint256,address)
PC address: 5297
Estimated Gas Usage: 421 - 516
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:92

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x4001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x885000040000400, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: transferTo_txorigin19(address,uint256,address), txdata: 0x5d7585b8010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: AsseteGram
Function name: sendto_txorigin25(address,uint256,address)
PC address: 5358
Estimated Gas Usage: 1247 - 35528
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:87

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x40040000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: sendto_txorigin25(address,uint256,address), txdata: 0x68c6116f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010101010101010101010101, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: AsseteGram
Function name: sendto_txorigin25(address,uint256,address)
PC address: 5438
Estimated Gas Usage: 1247 - 35528
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_32.sol:88

receiver.transfer(amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x400031401284002e0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x5354ffffffffffffe, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x16bc75e2d630fffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: gasprice_bit_ether(int128), txdata: 0x23b872dd00000000000000000000000080341000000080402000040002401c0200009002000000000000000000000000ac03005446889a810712446690449e8a1419fc120000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: sendto_txorigin25(address,uint256,address), txdata: 0x68c6116f000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000014aaffffffffff7ff0000000000000000000000000101010101010101010101010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: AsseteGram
Function name: transferTo_txorigin35(address,uint256,address)
PC address: 5563
Estimated Gas Usage: 400 - 495
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:152

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000040001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x40000000000000000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: transferTo_txorigin35(address,uint256,address), txdata: 0x8376964d010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: AsseteGram
Function name: withdrawAll_txorigin26(address,address)
PC address: 5624
Estimated Gas Usage: 1602 - 35883
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:189

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x40001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x80000000000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawAll_txorigin26(address,address), txdata: 0x8fecc3f901010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: AsseteGram
Function name: withdrawAll_txorigin26(address,address)
PC address: 5727
Estimated Gas Usage: 1602 - 35883
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_32.sol:190

_recipient.transfer(address(this).balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1c0000000002402, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x29500000100008000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x56b470e05630f7fff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: gasprice_bit_ether(int128), txdata: 0x23b872dd000000000000000000000000800208084200001000401040000200040080801000000000000000000000000000802000020000080000010000082020022040200000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: withdrawAll_txorigin26(address,address), txdata: 0x8fecc3f9010101010101010101010101deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: AsseteGram
Function name: bug_txorigin36(address)
PC address: 6347
Estimated Gas Usage: 335 - 430
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:138

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x200000000000000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: bug_txorigin36(address), txdata: 0xb389b2c90101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: AsseteGram
Function name: bug_txorigin4(address)
PC address: 6406
Estimated Gas Usage: 357 - 452
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:50

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0xa01000000000000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: bug_txorigin4(address), txdata: 0xb9e312580101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: AsseteGram
Function name: withdrawAll_txorigin38(address,address)
PC address: 6465
Estimated Gas Usage: 1623 - 35904
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:202

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x80000000000030, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawAll_txorigin38(address,address), txdata: 0xbff2792801010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: AsseteGram
Function name: withdrawAll_txorigin38(address,address)
PC address: 6568
Estimated Gas Usage: 1623 - 35904
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_32.sol:203

_recipient.transfer(address(this).balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x18b40d0009917a041, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x900820108c300000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: gasprice_bit_ether(int128), txdata: 0x23b872dd000000000000000000000000004040000204800200084000000000080100040200000000000000000000000004000880010010000420002008014000200080010000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: withdrawAll_txorigin38(address,address), txdata: 0xbff27928adadadadadadadadadadadaddeadbeefdeadbeefdeadbeefdeadbeefdeadbeefadadadadadadadadadadadad0204000820080001108000020402000140044008, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: AsseteGram
Function name: bug_txorigin8(address)
PC address: 6754
Estimated Gas Usage: 335 - 430
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:105

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0xa00000000001020, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_txorigin8(address), txdata: 0xf54c741d0101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: AsseteGram
Function name: sendto_txorigin9(address,uint256,address)
PC address: 6813
Estimated Gas Usage: 1225 - 35506
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:82

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x14104014007fff8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: sendto_txorigin9(address,uint256,address), txdata: 0xf6292d59000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010101080202010040408000000800, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: AsseteGram
Function name: sendto_txorigin9(address,uint256,address)
PC address: 6893
Estimated Gas Usage: 1225 - 35506
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_32.sol:83

receiver.transfer(amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x80c, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x435c10c05420ffffc, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x56bc75e2d630fffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: gasprice_bit_ether(int128), txdata: 0x23b872dd000000000000000000000000000000040401000000010000000008000000002000000000000000000000000000000004040100000001000000000800000000200000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: sendto_txorigin9(address,uint256,address), txdata: 0xf6292d59000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000ca3ef3fabdf000010000000000000000000000000101010101010101010101010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: AsseteGram
Function name: withdrawAll_txorigin30(address,address)
PC address: 6945
Estimated Gas Usage: 1623 - 35904
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:69

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x20000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x40000000000000000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawAll_txorigin30(address,address), txdata: 0xf6f1137101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: AsseteGram
Function name: withdrawAll_txorigin30(address,address)
PC address: 7048
Estimated Gas Usage: 1623 - 35904
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_32.sol:70

_recipient.transfer(address(this).balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x40150000480030802, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x24121080a881805c, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: gasprice_bit_ether(int128), txdata: 0x23b872dd000000000000000000000000208080010802010004800020004020022010800800000000000000000000000020081080000040000110022000200001040402080000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: withdrawAll_txorigin30(address,address), txdata: 0xf6f11371adadadadadadadadadadadaddeadbeefdeadbeefdeadbeefdeadbeefdeadbeefadadadadadadadadadadadad0100400800400810020410010840100840100440, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: AsseteGram
Function name: sendto_txorigin33(address,uint256,address)
PC address: 7099
Estimated Gas Usage: 1180 - 35461
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:214

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x41800c04400fbff8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: sendto_txorigin33(address,uint256,address), txdata: 0xf7ae6cde000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010110040010088080802000800800, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: AsseteGram
Function name: sendto_txorigin33(address,uint256,address)
PC address: 7179
Estimated Gas Usage: 1180 - 35461
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_32.sol:215

receiver.transfer(amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x221911418c25081e0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x421c10c05420f7ffe, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x56bc75e2d630fffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: gasprice_bit_ether(int128), txdata: 0x23b872dd000000000000000000000000ac775cd446889ac167da466692449ece5439fc1200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: sendto_txorigin33(address,uint256,address), txdata: 0xf7ae6cde000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000de3ef3fabdf080010000000000000000000000000101010101010101010101010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: AsseteGram
Function name: withdrawAll_txorigin14(address,address)
PC address: 7231
Estimated Gas Usage: 1578 - 35859
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:64

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x100000400000194, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawAll_txorigin14(address,address), txdata: 0xf935226e01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: AsseteGram
Function name: withdrawAll_txorigin14(address,address)
PC address: 7334
Estimated Gas Usage: 1578 - 35859
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: buggy_32.sol:65

_recipient.transfer(address(this).balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000000000020, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x100898ed398bffffe, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x10069cf9396bfffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [SOMEGUY], function: gasprice_bit_ether(int128), txdata: 0x23b872dd000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: withdrawAll_txorigin14(address,address), txdata: 0xf935226e010101010101010101010101deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: AsseteGram
Function name: bug_txorigin40(address)
PC address: 7385
Estimated Gas Usage: 356 - 451
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:165

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0xa40000000000020, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: bug_txorigin40(address), txdata: 0xfd5225fc0101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: AsseteGram
Function name: transferTo_txorigin23(address,uint256,address)
PC address: 7444
Estimated Gas Usage: 442 - 537
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: buggy_32.sol:59

tx.origin

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0xa08020a8288, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT_CREATION], value: 0x0
Caller: [ATTACKER], function: transferTo_txorigin23(address,uint256,address), txdata: 0xfffdba83010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101, value: 0x0


